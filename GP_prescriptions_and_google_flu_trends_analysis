{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Assignment A [25 marks]\n",
    "The NHS has been challenged to make “efficiency savings” and you have been commissioned by an NHS executive to review, document and assess GP prescribing costs. Using data from the HSCIC GP Practice Prescribing dataset for your assigned city only, address the following queries using a combination of narrative, tables, figures and descriptive statistcs:\n",
    "\n",
    "Identify all GP practices and produce a table with the total number of prescriptions and their total actual cost (using the ACT COST column).\n",
    "\n",
    "Find the top ten most/least frequently prescribed medications across all practices. What is their total actual cost and how does that compare to the overall actual costs of each practice and of the entire city?\n",
    "\n",
    "Find the top ten most expensive medications and calculate their total actual cost.\n",
    "\n",
    "How does prescribing (frequency and costs) in your city compare when using prescribing data from Cambridge as a reference?\n",
    "\n",
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#preliminaries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "%matplotlib inline\n",
    "import random\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>period</th>\n",
       "      <th>practice</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81002</td>\n",
       "      <td>QUEENS PARK MEDICAL CENTRE</td>\n",
       "      <td>QUEENS PARK MEDICAL CTR</td>\n",
       "      <td>FARRER STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 2AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81003</td>\n",
       "      <td>VICTORIA MEDICAL PRACTICE</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>VICTORIA ROAD</td>\n",
       "      <td>HARTLEPOOL</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS26 8DB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81004</td>\n",
       "      <td>WOODLANDS ROAD SURGERY</td>\n",
       "      <td>6 WOODLANDS ROAD</td>\n",
       "      <td></td>\n",
       "      <td>MIDDLESBROUGH</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS1 3BE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81005</td>\n",
       "      <td>SPRINGWOOD SURGERY</td>\n",
       "      <td>SPRINGWOOD SURGERY</td>\n",
       "      <td>RECTORY LANE</td>\n",
       "      <td>GUISBOROUGH</td>\n",
       "      <td></td>\n",
       "      <td>TS14 7DJ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   period practice                              practicename  \\\n",
       "0  201512   A81001  THE DENSHAM SURGERY                        \n",
       "1  201512   A81002  QUEENS PARK MEDICAL CENTRE                 \n",
       "2  201512   A81003  VICTORIA MEDICAL PRACTICE                  \n",
       "3  201512   A81004  WOODLANDS ROAD SURGERY                     \n",
       "4  201512   A81005  SPRINGWOOD SURGERY                         \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  THE HEALTH CENTRE          LAWSON STREET               \n",
       "1  QUEENS PARK MEDICAL CTR    FARRER STREET               \n",
       "2  THE HEALTH CENTRE          VICTORIA ROAD               \n",
       "3  6 WOODLANDS ROAD                                       \n",
       "4  SPRINGWOOD SURGERY         RECTORY LANE                \n",
       "\n",
       "                        city                     county  \\\n",
       "0  STOCKTON ON TEES           CLEVELAND                   \n",
       "1  STOCKTON ON TEES           CLEVELAND                   \n",
       "2  HARTLEPOOL                 CLEVELAND                   \n",
       "3  MIDDLESBROUGH              CLEVELAND                   \n",
       "4  GUISBOROUGH                                            \n",
       "\n",
       "                    postcode  \n",
       "0  TS18 1HU                   \n",
       "1  TS18 2AW                   \n",
       "2  TS26 8DB                   \n",
       "3  TS1 3BE                    \n",
       "4  TS14 7DJ                   "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Load data from URLs\n",
    "# Import package\n",
    "from urllib.request import urlretrieve\n",
    "\n",
    "# Assign url of file: url\n",
    "url1 = 'https://s3.eu-west-2.amazonaws.com/dmhr-data/practices_Dec2015.csv'\n",
    "\n",
    "# Read file into a DataFrame and print its head\n",
    "cols1 = ['period', 'practice', 'practicename', 'centrename', 'street', 'city', 'county', 'postcode']\n",
    "practicedataset = pd.read_csv(url1, header=None, names=cols1, index_col=False)\n",
    "practicedataset.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf_code</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th>items</th>\n",
       "      <th>nic</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RJN</td>\n",
       "      <td>Y05218</td>\n",
       "      <td>0501013K0AAAJAJ</td>\n",
       "      <td>Co-Amoxiclav_Tab 500mg/125mg</td>\n",
       "      <td>1</td>\n",
       "      <td>3.59</td>\n",
       "      <td>3.33</td>\n",
       "      <td>21</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RJN</td>\n",
       "      <td>Y05218</td>\n",
       "      <td>0501130R0AAAAAA</td>\n",
       "      <td>Nitrofurantoin_Cap 50mg</td>\n",
       "      <td>1</td>\n",
       "      <td>14.39</td>\n",
       "      <td>13.42</td>\n",
       "      <td>28</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401020K0AAAHAH</td>\n",
       "      <td>Diazepam_Tab 2mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.51</td>\n",
       "      <td>0.58</td>\n",
       "      <td>14</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401020P0AAABAB</td>\n",
       "      <td>Lorazepam_Tab 1mg</td>\n",
       "      <td>1</td>\n",
       "      <td>2.65</td>\n",
       "      <td>2.46</td>\n",
       "      <td>28</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0402010ABAAABAB</td>\n",
       "      <td>Quetiapine_Tab 25mg</td>\n",
       "      <td>2</td>\n",
       "      <td>2.01</td>\n",
       "      <td>2.08</td>\n",
       "      <td>84</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sha  pct practice         bnf_code  \\\n",
       "0  Q44  RJN   Y05218  0501013K0AAAJAJ   \n",
       "1  Q44  RJN   Y05218  0501130R0AAAAAA   \n",
       "2  Q44  RTV   Y04937  0401020K0AAAHAH   \n",
       "3  Q44  RTV   Y04937  0401020P0AAABAB   \n",
       "4  Q44  RTV   Y04937  0402010ABAAABAB   \n",
       "\n",
       "                                   bnf_name  items    nic  act_cost  quantity  \\\n",
       "0  Co-Amoxiclav_Tab 500mg/125mg                  1   3.59      3.33        21   \n",
       "1  Nitrofurantoin_Cap 50mg                       1  14.39     13.42        28   \n",
       "2  Diazepam_Tab 2mg                              1   0.51      0.58        14   \n",
       "3  Lorazepam_Tab 1mg                             1   2.65      2.46        28   \n",
       "4  Quetiapine_Tab 25mg                           2   2.01      2.08        84   \n",
       "\n",
       "   period  \n",
       "0  201512  \n",
       "1  201512  \n",
       "2  201512  \n",
       "3  201512  \n",
       "4  201512  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url2 = 'https://s3.eu-west-2.amazonaws.com/dmhr-data/prescribing_Dec2015.csv'\n",
    "cols2 = ['sha', 'pct', 'practice', 'bnf_code', 'bnf_name', 'items', 'nic', 'act_cost', 'quantity', 'period']\n",
    "prescribingdataset = pd.read_csv(url2, header=None, names=cols2, index_col=False, skiprows=1)\n",
    "prescribingdataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf_code</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th>items</th>\n",
       "      <th>nic</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RJN</td>\n",
       "      <td>Y05218</td>\n",
       "      <td>0501013K0AAAJAJ</td>\n",
       "      <td>Co-Amoxiclav_Tab 500mg/125mg</td>\n",
       "      <td>1</td>\n",
       "      <td>3.59</td>\n",
       "      <td>3.33</td>\n",
       "      <td>21</td>\n",
       "      <td>201512</td>\n",
       "      <td>SEXUAL HEALTH MDGH</td>\n",
       "      <td>M.D.G.H.</td>\n",
       "      <td>VICTORIA ROAD</td>\n",
       "      <td>MACCLESFIELD</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK10 3BL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RJN</td>\n",
       "      <td>Y05218</td>\n",
       "      <td>0501130R0AAAAAA</td>\n",
       "      <td>Nitrofurantoin_Cap 50mg</td>\n",
       "      <td>1</td>\n",
       "      <td>14.39</td>\n",
       "      <td>13.42</td>\n",
       "      <td>28</td>\n",
       "      <td>201512</td>\n",
       "      <td>SEXUAL HEALTH MDGH</td>\n",
       "      <td>M.D.G.H.</td>\n",
       "      <td>VICTORIA ROAD</td>\n",
       "      <td>MACCLESFIELD</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK10 3BL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401020K0AAAHAH</td>\n",
       "      <td>Diazepam_Tab 2mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.51</td>\n",
       "      <td>0.58</td>\n",
       "      <td>14</td>\n",
       "      <td>201512</td>\n",
       "      <td>WIGAN ASSESSMENT TEAM</td>\n",
       "      <td>CLAIRE HOUSE (CH1)</td>\n",
       "      <td>PHOENIX WAY</td>\n",
       "      <td>WIGAN</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>WN3 4NW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0401020P0AAABAB</td>\n",
       "      <td>Lorazepam_Tab 1mg</td>\n",
       "      <td>1</td>\n",
       "      <td>2.65</td>\n",
       "      <td>2.46</td>\n",
       "      <td>28</td>\n",
       "      <td>201512</td>\n",
       "      <td>WIGAN ASSESSMENT TEAM</td>\n",
       "      <td>CLAIRE HOUSE (CH1)</td>\n",
       "      <td>PHOENIX WAY</td>\n",
       "      <td>WIGAN</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>WN3 4NW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RTV</td>\n",
       "      <td>Y04937</td>\n",
       "      <td>0402010ABAAABAB</td>\n",
       "      <td>Quetiapine_Tab 25mg</td>\n",
       "      <td>2</td>\n",
       "      <td>2.01</td>\n",
       "      <td>2.08</td>\n",
       "      <td>84</td>\n",
       "      <td>201512</td>\n",
       "      <td>WIGAN ASSESSMENT TEAM</td>\n",
       "      <td>CLAIRE HOUSE (CH1)</td>\n",
       "      <td>PHOENIX WAY</td>\n",
       "      <td>WIGAN</td>\n",
       "      <td>LANCASHIRE</td>\n",
       "      <td>WN3 4NW</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sha  pct practice         bnf_code  \\\n",
       "0  Q44  RJN   Y05218  0501013K0AAAJAJ   \n",
       "1  Q44  RJN   Y05218  0501130R0AAAAAA   \n",
       "2  Q44  RTV   Y04937  0401020K0AAAHAH   \n",
       "3  Q44  RTV   Y04937  0401020P0AAABAB   \n",
       "4  Q44  RTV   Y04937  0402010ABAAABAB   \n",
       "\n",
       "                                   bnf_name  items    nic  act_cost  quantity  \\\n",
       "0  Co-Amoxiclav_Tab 500mg/125mg                  1   3.59      3.33        21   \n",
       "1  Nitrofurantoin_Cap 50mg                       1  14.39     13.42        28   \n",
       "2  Diazepam_Tab 2mg                              1   0.51      0.58        14   \n",
       "3  Lorazepam_Tab 1mg                             1   2.65      2.46        28   \n",
       "4  Quetiapine_Tab 25mg                           2   2.01      2.08        84   \n",
       "\n",
       "   period                              practicename  \\\n",
       "0  201512  SEXUAL HEALTH MDGH                         \n",
       "1  201512  SEXUAL HEALTH MDGH                         \n",
       "2  201512  WIGAN ASSESSMENT TEAM                      \n",
       "3  201512  WIGAN ASSESSMENT TEAM                      \n",
       "4  201512  WIGAN ASSESSMENT TEAM                      \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  M.D.G.H.                   VICTORIA ROAD               \n",
       "1  M.D.G.H.                   VICTORIA ROAD               \n",
       "2  CLAIRE HOUSE (CH1)         PHOENIX WAY                 \n",
       "3  CLAIRE HOUSE (CH1)         PHOENIX WAY                 \n",
       "4  CLAIRE HOUSE (CH1)         PHOENIX WAY                 \n",
       "\n",
       "                        city                     county  \\\n",
       "0  MACCLESFIELD               CHESHIRE                    \n",
       "1  MACCLESFIELD               CHESHIRE                    \n",
       "2  WIGAN                      LANCASHIRE                  \n",
       "3  WIGAN                      LANCASHIRE                  \n",
       "4  WIGAN                      LANCASHIRE                  \n",
       "\n",
       "                    postcode  \n",
       "0  SK10 3BL                   \n",
       "1  SK10 3BL                   \n",
       "2  WN3 4NW                    \n",
       "3  WN3 4NW                    \n",
       "4  WN3 4NW                    "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Merge the two datasets\n",
    "twodatasets= pd.merge(left= prescribingdataset, right= practicedataset, on=['practice','period'])\n",
    "twodatasets.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf_code</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th>items</th>\n",
       "      <th>nic</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9488689</th>\n",
       "      <td>Q69</td>\n",
       "      <td>NTP</td>\n",
       "      <td>Y04672</td>\n",
       "      <td>0212000B0AAAAAA</td>\n",
       "      <td>Atorvastatin_Tab 10mg</td>\n",
       "      <td>1</td>\n",
       "      <td>2.34</td>\n",
       "      <td>2.18</td>\n",
       "      <td>56</td>\n",
       "      <td>201512</td>\n",
       "      <td>SOUTHAMPTON MINOR INJURIES UNIT</td>\n",
       "      <td>LEVEL B  RSH HOSP BLD</td>\n",
       "      <td>BRINTON'S TERRACE</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9488690</th>\n",
       "      <td>Q69</td>\n",
       "      <td>NTP</td>\n",
       "      <td>Y04672</td>\n",
       "      <td>0301011R0AAAPAP</td>\n",
       "      <td>Salbutamol_Inha 100mcg (200 D) CFF</td>\n",
       "      <td>2</td>\n",
       "      <td>3.00</td>\n",
       "      <td>2.80</td>\n",
       "      <td>2</td>\n",
       "      <td>201512</td>\n",
       "      <td>SOUTHAMPTON MINOR INJURIES UNIT</td>\n",
       "      <td>LEVEL B  RSH HOSP BLD</td>\n",
       "      <td>BRINTON'S TERRACE</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9488691</th>\n",
       "      <td>Q69</td>\n",
       "      <td>NTP</td>\n",
       "      <td>Y04672</td>\n",
       "      <td>0302000C0BPAABE</td>\n",
       "      <td>Clenil Modulite_Inha 50mcg (200D)</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>3.43</td>\n",
       "      <td>1</td>\n",
       "      <td>201512</td>\n",
       "      <td>SOUTHAMPTON MINOR INJURIES UNIT</td>\n",
       "      <td>LEVEL B  RSH HOSP BLD</td>\n",
       "      <td>BRINTON'S TERRACE</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9488692</th>\n",
       "      <td>Q69</td>\n",
       "      <td>NTP</td>\n",
       "      <td>Y04672</td>\n",
       "      <td>0406000T0AAAGAG</td>\n",
       "      <td>Prochlpzine Mal_Tab 5mg</td>\n",
       "      <td>1</td>\n",
       "      <td>1.23</td>\n",
       "      <td>1.15</td>\n",
       "      <td>28</td>\n",
       "      <td>201512</td>\n",
       "      <td>SOUTHAMPTON MINOR INJURIES UNIT</td>\n",
       "      <td>LEVEL B  RSH HOSP BLD</td>\n",
       "      <td>BRINTON'S TERRACE</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9488693</th>\n",
       "      <td>Q69</td>\n",
       "      <td>NTP</td>\n",
       "      <td>Y04672</td>\n",
       "      <td>0407010F0AAAHAH</td>\n",
       "      <td>Co-Codamol_Tab 30mg/500mg</td>\n",
       "      <td>2</td>\n",
       "      <td>3.26</td>\n",
       "      <td>3.04</td>\n",
       "      <td>60</td>\n",
       "      <td>201512</td>\n",
       "      <td>SOUTHAMPTON MINOR INJURIES UNIT</td>\n",
       "      <td>LEVEL B  RSH HOSP BLD</td>\n",
       "      <td>BRINTON'S TERRACE</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sha  pct practice         bnf_code  \\\n",
       "9488689  Q69  NTP   Y04672  0212000B0AAAAAA   \n",
       "9488690  Q69  NTP   Y04672  0301011R0AAAPAP   \n",
       "9488691  Q69  NTP   Y04672  0302000C0BPAABE   \n",
       "9488692  Q69  NTP   Y04672  0406000T0AAAGAG   \n",
       "9488693  Q69  NTP   Y04672  0407010F0AAAHAH   \n",
       "\n",
       "                                         bnf_name  items   nic  act_cost  \\\n",
       "9488689  Atorvastatin_Tab 10mg                         1  2.34      2.18   \n",
       "9488690  Salbutamol_Inha 100mcg (200 D) CFF            2  3.00      2.80   \n",
       "9488691  Clenil Modulite_Inha 50mcg (200D)             1  3.70      3.43   \n",
       "9488692  Prochlpzine Mal_Tab 5mg                       1  1.23      1.15   \n",
       "9488693  Co-Codamol_Tab 30mg/500mg                     2  3.26      3.04   \n",
       "\n",
       "         quantity  period                              practicename  \\\n",
       "9488689        56  201512  SOUTHAMPTON MINOR INJURIES UNIT            \n",
       "9488690         2  201512  SOUTHAMPTON MINOR INJURIES UNIT            \n",
       "9488691         1  201512  SOUTHAMPTON MINOR INJURIES UNIT            \n",
       "9488692        28  201512  SOUTHAMPTON MINOR INJURIES UNIT            \n",
       "9488693        60  201512  SOUTHAMPTON MINOR INJURIES UNIT            \n",
       "\n",
       "                        centrename                     street  \\\n",
       "9488689  LEVEL B  RSH HOSP BLD      BRINTON'S TERRACE           \n",
       "9488690  LEVEL B  RSH HOSP BLD      BRINTON'S TERRACE           \n",
       "9488691  LEVEL B  RSH HOSP BLD      BRINTON'S TERRACE           \n",
       "9488692  LEVEL B  RSH HOSP BLD      BRINTON'S TERRACE           \n",
       "9488693  LEVEL B  RSH HOSP BLD      BRINTON'S TERRACE           \n",
       "\n",
       "                              city                     county  \\\n",
       "9488689  SOUTHAMPTON                                            \n",
       "9488690  SOUTHAMPTON                                            \n",
       "9488691  SOUTHAMPTON                                            \n",
       "9488692  SOUTHAMPTON                                            \n",
       "9488693  SOUTHAMPTON                                            \n",
       "\n",
       "                          postcode  \n",
       "9488689  SO14 0YG                   \n",
       "9488690  SO14 0YG                   \n",
       "9488691  SO14 0YG                   \n",
       "9488692  SO14 0YG                   \n",
       "9488693  SO14 0YG                   "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Select only Southampton \n",
    "\n",
    "twodatasets_s= twodatasets[twodatasets['city'].str.contains('SOUTHAMPTON')]\n",
    "twodatasets_s.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4626176.620000016 , 45588310\n"
     ]
    }
   ],
   "source": [
    "#Produce a table with the total number of prescriptions and their total actual cost (using the ACT COST column).\n",
    "Total_city_act_cost = twodatasets_s['act_cost'].sum()\n",
    "Total_city_quantity = twodatasets_s['quantity'].sum()\n",
    "\n",
    "print (Total_city_act_cost,\",\", Total_city_quantity)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The top ten most frequently prescribed medications are: 10037073    Fortisip Bottle_Liq (8 Flav)            \n",
      "10071690    Fortisip Bottle_Liq (8 Flav)            \n",
      "9971774     Aymes Complete_Liq (4 Flav)             \n",
      "10037080    Nutrison Pack_Energy M/Fibre            \n",
      "10059214    Fortisip Bottle_Liq (8 Flav)            \n",
      "9978316     Nutrini Peptisorb_Liq                   \n",
      "10052408    Fortisip Bottle_Liq (8 Flav)            \n",
      "10052426    Fresubin Thickened Stage 2_Cust (2 Flav)\n",
      "10091878    Fortisip Bottle_Liq (8 Flav)            \n",
      "10052411    Nutrison Pack_Energy                    \n",
      "Name: bnf_name, dtype: object\n",
      "The top ten least frequently prescribed medications are: 10084752    Rhinocort Aqua 64_Nsl P/Spy 64mcg (120D)\n",
      "9981800     Clement Clarke Low Range Peak Flow Meter\n",
      "9981801     Clement Clarke AirZone Stnd Range Peak F\n",
      "10059801    Allpresan Diabetic Foam Crm Intensive 12\n",
      "9981808     Prontosan Top Irrig 350ml Btl           \n",
      "10059810    Cetraben Oint 450g                      \n",
      "10059812    Yes water-based Intimate Lubricant Vag M\n",
      "10052991    Xerotin Saliva Rep P/Spy 100ml          \n",
      "10003417    Ingenol Mebutate_Gel 500mcg/g           \n",
      "10054686    Picato_Gel 500mcg/g                     \n",
      "Name: bnf_name, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#Find the top ten most/least frequently prescribed medications across all practices (quantity column)\n",
    " \n",
    "quantity_sorted= twodatasets_s.sort_values('quantity', axis=0, ascending=False, kind='quicksort', na_position='last')\n",
    "quantity_top10 = quantity_sorted.head(10)\n",
    "quantity_top10\n",
    "print(\"The top ten most frequently prescribed medications are:\",quantity_top10.bnf_name)\n",
    "quantity_least10 = quantity_sorted.tail(10)\n",
    "print(\"The top ten least frequently prescribed medications are:\",quantity_least10.bnf_name)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total actual cost of the top 10 and least 10 prescribed medications are:  13373.2 , 221.9\n"
     ]
    }
   ],
   "source": [
    "#What is their total actual cost \n",
    "\n",
    "Total_act_cost_top10 = quantity_top10['act_cost'].sum()\n",
    "Total_act_cost_least10 = quantity_least10['act_cost'].sum()\n",
    "print(\"The total actual cost of the top 10 and least 10 prescribed medications are: \", Total_act_cost_top10, \",\", Total_act_cost_least10)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The top ten and least ten prescribed medications total actual cost is:  13373.2 , 221.9\n",
      "The total actual cost of each practice is:     practice   act_cost\n",
      "0    J82002  154999.23\n",
      "1    J82008  122916.57\n",
      "2    J82022  181661.31\n",
      "3    J82024   33526.01\n",
      "4    J82040  164079.27\n",
      "5    J82056  374972.07\n",
      "6    J82062  180777.66\n",
      "7    J82064  172668.60\n",
      "8    J82080   46312.40\n",
      "9    J82081  160419.84\n",
      "10   J82087  105720.99\n",
      "11   J82088  131242.03\n",
      "12   J82089  181886.47\n",
      "13   J82092   91986.39\n",
      "14   J82097  198371.79\n",
      "15   J82101  191997.14\n",
      "16   J82112  191618.81\n",
      "17   J82115   56767.25\n",
      "18   J82122  121719.17\n",
      "19   J82128  116501.42\n",
      "20   J82132  228344.51\n",
      "21   J82156  111831.40\n",
      "22   J82171  106766.02\n",
      "23   J82174  150178.83\n",
      "24   J82180   61366.48\n",
      "25   J82183   53052.38\n",
      "26   J82187  129673.04\n",
      "27   J82188   49437.82\n",
      "28   J82192  147796.21\n",
      "29   J82203   61547.45\n",
      "30   J82207   80737.74\n",
      "31   J82208   60218.09\n",
      "32   J82213   56275.86\n",
      "33   J82217    3366.16\n",
      "34   J82605   36327.53\n",
      "35   J82619   68182.26\n",
      "36   J82622  127562.97\n",
      "37   J82663   35096.67\n",
      "38   J82674     569.17\n",
      "39   J82685     266.58\n",
      "40   Y00094    2738.18\n",
      "41   Y01765     221.40\n",
      "42   Y02838   45134.73\n",
      "43   Y03027     611.10\n",
      "44   Y03030     814.01\n",
      "45   Y03031     197.69\n",
      "46   Y03608    4013.85\n",
      "47   Y03609    4707.55\n",
      "48   Y03610   13987.40\n",
      "49   Y03619    1445.89\n",
      "50   Y03629    1175.97\n",
      "51   Y03824     774.26\n",
      "52   Y04246      29.64\n",
      "53   Y04672      48.78\n",
      "54   Y05074    1534.58\n",
      "The total actual cost of Southampton is:  4626176.620000016\n"
     ]
    }
   ],
   "source": [
    "#How does the total actual cost compare to the overall actual costs of each practice and of the entire city?\n",
    "\n",
    "#Total actual cost of each practice\n",
    "costofeachpractice=twodatasets_s.groupby('practice')[('act_cost')].sum().reset_index()\n",
    "\n",
    "print(\"The top ten and least ten prescribed medications total actual cost is: \", Total_act_cost_top10,\",\", Total_act_cost_least10) #total actual cost top 10 and least 10\n",
    "print(\"The total actual cost of each practice is: \", costofeachpractice) #total actual cost of each practice\n",
    "print(\"The total actual cost of Southampton is: \", Total_city_act_cost) #total actual cost of entire city"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          sha  pct practice         bnf_code  \\\n",
      "10037632  Q70  11A   J82056  1404000H0BNAAAF   \n",
      "10036711  Q70  11A   J82056  0601023ABAAAAAA   \n",
      "9983474   Q70  10X   J82101  1404000H0BNAAAF   \n",
      "10035953  Q70  11A   J82056  0208020Y0AAACAC   \n",
      "10036032  Q70  11A   J82056  0301020Q0AAABAB   \n",
      "9969194   Q70  10X   J82040  0301020Q0AAABAB   \n",
      "10036727  Q70  11A   J82056  0601023X0AAAAAA   \n",
      "9982245   Q70  10X   J82101  0301020Q0AAABAB   \n",
      "10036071  Q70  11A   J82056  0302000K0BDABAM   \n",
      "9966552   Q70  10X   J82022  0301020Q0AAABAB   \n",
      "\n",
      "                                          bnf_name  items      nic  act_cost  \\\n",
      "10037632  Imuvac_Vac 0.5ml Pfs                       1493  9838.87   9097.50   \n",
      "10036711  Liraglutide_Inj 6mg/ml 3ml PF Pen            57  6513.84   6024.56   \n",
      "9983474   Imuvac_Vac 0.5ml Pfs                        859  5660.81   5234.26   \n",
      "10035953  Rivaroxaban_Tab 20mg                         66  5350.80   4948.42   \n",
      "10036032  Tiotropium_Pdr For Inh Cap 18mcg             93  5248.34   4854.23   \n",
      "9969194   Tiotropium_Pdr For Inh Cap 18mcg             96  5186.92   4797.38   \n",
      "10036727  Sitagliptin_Tab 100mg                        87  4623.14   4275.86   \n",
      "9982245   Tiotropium_Pdr For Inh Cap 18mcg            103  4589.50   4244.97   \n",
      "10036071  Symbicort_Turbohaler 200mcg/6mcg (120 D)     72  4408.00   4076.77   \n",
      "9966552   Tiotropium_Pdr For Inh Cap 18mcg            104  4288.00   3966.18   \n",
      "\n",
      "          quantity  period                              practicename  \\\n",
      "10037632      1493  201512  RED AND GREEN PRACTICE                     \n",
      "10036711       166  201512  RED AND GREEN PRACTICE                     \n",
      "9983474        859  201512  CHESSEL PRACTICE                           \n",
      "10035953      2548  201512  RED AND GREEN PRACTICE                     \n",
      "10036032      4700  201512  RED AND GREEN PRACTICE                     \n",
      "9969194       4645  201512  WEST END ROAD SURGERY                      \n",
      "10036727      3892  201512  RED AND GREEN PRACTICE                     \n",
      "9982245       4110  201512  CHESSEL PRACTICE                           \n",
      "10036071       116  201512  RED AND GREEN PRACTICE                     \n",
      "9966552       3840  201512  VICTOR STREET SURGERY                      \n",
      "\n",
      "                         centrename                     street  \\\n",
      "10037632  WATERSIDE HEALTH CENTRE    BEAULIEU ROAD  HYTHE        \n",
      "10036711  WATERSIDE HEALTH CENTRE    BEAULIEU ROAD  HYTHE        \n",
      "9983474   CHESSEL PRACTICE           SULLIVAN ROAD  SHOLING      \n",
      "10035953  WATERSIDE HEALTH CENTRE    BEAULIEU ROAD  HYTHE        \n",
      "10036032  WATERSIDE HEALTH CENTRE    BEAULIEU ROAD  HYTHE        \n",
      "9969194   BITTERNE SURGERY           62 WEST END ROAD            \n",
      "10036727  WATERSIDE HEALTH CENTRE    BEAULIEU ROAD  HYTHE        \n",
      "9982245   CHESSEL PRACTICE           SULLIVAN ROAD  SHOLING      \n",
      "10036071  WATERSIDE HEALTH CENTRE    BEAULIEU ROAD  HYTHE        \n",
      "9966552   VICTOR STREET SURGERY      VICTOR STREET  SHIRLEY      \n",
      "\n",
      "                               city                     county  \\\n",
      "10037632  SOUTHAMPTON                HAMPSHIRE                   \n",
      "10036711  SOUTHAMPTON                HAMPSHIRE                   \n",
      "9983474   SOUTHAMPTON                HAMPSHIRE                   \n",
      "10035953  SOUTHAMPTON                HAMPSHIRE                   \n",
      "10036032  SOUTHAMPTON                HAMPSHIRE                   \n",
      "9969194   BITTERNE  SOUTHAMPTON      HAMPSHIRE                   \n",
      "10036727  SOUTHAMPTON                HAMPSHIRE                   \n",
      "9982245   SOUTHAMPTON                HAMPSHIRE                   \n",
      "10036071  SOUTHAMPTON                HAMPSHIRE                   \n",
      "9966552   SOUTHAMPTON                HAMPSHIRE                   \n",
      "\n",
      "                           postcode  \n",
      "10037632  SO45 5WX                   \n",
      "10036711  SO45 5WX                   \n",
      "9983474   SO19 0HS                   \n",
      "10035953  SO45 5WX                   \n",
      "10036032  SO45 5WX                   \n",
      "9969194   SO18 6TG                   \n",
      "10036727  SO45 5WX                   \n",
      "9982245   SO19 0HS                   \n",
      "10036071  SO45 5WX                   \n",
      "9966552   SO15 5SY                   \n",
      "\n",
      "\n",
      "The total cost of the top ten most expensive medications is:  51520.13\n"
     ]
    }
   ],
   "source": [
    "#Find the top ten most expensive medications and calculate their total actual cost\n",
    "\n",
    "cost_sorted= twodatasets_s.sort_values('act_cost', axis=0, ascending=False, kind='quicksort', na_position='last')\n",
    "cost_top10 = cost_sorted.head(10)\n",
    "print(cost_top10)\n",
    "print(\"\\n\")\n",
    "Total_cost_mostexpensive = cost_top10['act_cost'].sum()\n",
    "print(\"The total cost of the top ten most expensive medications is: \", Total_cost_mostexpensive)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Prescribing costs and frequency of prescriptions in Southampton is 4626176.620000016 , 45588310\n",
      "Prescribing costs and frequency of prescriptions in Cambridge is 2607317.4899999904 , 26595316\n"
     ]
    }
   ],
   "source": [
    "#How does prescribing (frequency and costs) in your city compare when using prescribing data from Cambridge as a reference?\n",
    "#Select only Cambridge\n",
    "twodatasets_c= twodatasets[twodatasets['city'].str.contains('CAMBRIDGE')]\n",
    "\n",
    "#Produce a table with the total number of prescriptions and their total actual cost (in Cambridge)\n",
    "Total_cambridge_cost = twodatasets_c['act_cost'].sum()\n",
    "Total_cambridge_quantity = twodatasets_c['quantity'].sum()\n",
    "print (\"Prescribing costs and frequency of prescriptions in Southampton is\", Total_city_act_cost, \",\", Total_city_quantity) \n",
    "print(\"Prescribing costs and frequency of prescriptions in Cambridge is\", Total_cambridge_cost, \",\", Total_cambridge_quantity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Using SQL, produce a table that provides the number of GP practices per city, ordered in descending order. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment B [25 marks]\n",
    "Using the entire dataset from the HSCIC GP Practice Prescribing data, address the following queries using a combination of narrative, tables, figures and descriptive statistics:\n",
    "\n",
    "Calculate the monthly total spending for each GP-practice.\n",
    "\n",
    "Use the number of registered patients in each GP-practice to calculate the relative costs per patient.\n",
    "\n",
    "Visualize the monthly total spending per registered patients for all GP-practices in a scatterplot, show a trend line, and visualize the data for your city within the national scatterplot\n",
    "\n",
    "Visualize the relative costs per patient of all national GP-practices in a histogram.\n",
    "\n",
    "Use descriptive statistics to show how your assigned city compares to the national level."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>postcode</th>\n",
       "      <th>ONS_CCG_CODE</th>\n",
       "      <th>CCG_CODE</th>\n",
       "      <th>ONS_REGION_CODE</th>\n",
       "      <th>NHSE_REGION_CODE</th>\n",
       "      <th>ONS_COMM_RGN_CODE</th>\n",
       "      <th>NHSE_COMM_REGION_CODE</th>\n",
       "      <th>Total_All</th>\n",
       "      <th>Total_Male</th>\n",
       "      <th>...</th>\n",
       "      <th>Female_50-54</th>\n",
       "      <th>Female_55-59</th>\n",
       "      <th>Female_60-64</th>\n",
       "      <th>Female_65-69</th>\n",
       "      <th>Female_70-74</th>\n",
       "      <th>Female_75-79</th>\n",
       "      <th>Female_80-84</th>\n",
       "      <th>Female_85-89</th>\n",
       "      <th>Female_90-94</th>\n",
       "      <th>Female_95+</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>E38000075</td>\n",
       "      <td>00K</td>\n",
       "      <td>E39000027</td>\n",
       "      <td>Q74</td>\n",
       "      <td>E40000001</td>\n",
       "      <td>Y54</td>\n",
       "      <td>4234</td>\n",
       "      <td>2061</td>\n",
       "      <td>...</td>\n",
       "      <td>162</td>\n",
       "      <td>139</td>\n",
       "      <td>112</td>\n",
       "      <td>134</td>\n",
       "      <td>104</td>\n",
       "      <td>120</td>\n",
       "      <td>94</td>\n",
       "      <td>59</td>\n",
       "      <td>19</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>TS18 2AW</td>\n",
       "      <td>E38000075</td>\n",
       "      <td>00K</td>\n",
       "      <td>E39000027</td>\n",
       "      <td>Q74</td>\n",
       "      <td>E40000001</td>\n",
       "      <td>Y54</td>\n",
       "      <td>19691</td>\n",
       "      <td>9706</td>\n",
       "      <td>...</td>\n",
       "      <td>833</td>\n",
       "      <td>733</td>\n",
       "      <td>634</td>\n",
       "      <td>636</td>\n",
       "      <td>483</td>\n",
       "      <td>445</td>\n",
       "      <td>362</td>\n",
       "      <td>231</td>\n",
       "      <td>106</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>TS26 8DB</td>\n",
       "      <td>E38000075</td>\n",
       "      <td>00K</td>\n",
       "      <td>E39000027</td>\n",
       "      <td>Q74</td>\n",
       "      <td>E40000001</td>\n",
       "      <td>Y54</td>\n",
       "      <td>3357</td>\n",
       "      <td>1779</td>\n",
       "      <td>...</td>\n",
       "      <td>113</td>\n",
       "      <td>100</td>\n",
       "      <td>91</td>\n",
       "      <td>94</td>\n",
       "      <td>49</td>\n",
       "      <td>44</td>\n",
       "      <td>38</td>\n",
       "      <td>18</td>\n",
       "      <td>13</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>TS1 3BE</td>\n",
       "      <td>E38000162</td>\n",
       "      <td>00M</td>\n",
       "      <td>E39000027</td>\n",
       "      <td>Q74</td>\n",
       "      <td>E40000001</td>\n",
       "      <td>Y54</td>\n",
       "      <td>9151</td>\n",
       "      <td>4774</td>\n",
       "      <td>...</td>\n",
       "      <td>277</td>\n",
       "      <td>265</td>\n",
       "      <td>261</td>\n",
       "      <td>228</td>\n",
       "      <td>205</td>\n",
       "      <td>210</td>\n",
       "      <td>165</td>\n",
       "      <td>91</td>\n",
       "      <td>39</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>TS14 7DJ</td>\n",
       "      <td>E38000162</td>\n",
       "      <td>00M</td>\n",
       "      <td>E39000027</td>\n",
       "      <td>Q74</td>\n",
       "      <td>E40000001</td>\n",
       "      <td>Y54</td>\n",
       "      <td>7883</td>\n",
       "      <td>3826</td>\n",
       "      <td>...</td>\n",
       "      <td>287</td>\n",
       "      <td>280</td>\n",
       "      <td>309</td>\n",
       "      <td>368</td>\n",
       "      <td>253</td>\n",
       "      <td>183</td>\n",
       "      <td>144</td>\n",
       "      <td>102</td>\n",
       "      <td>47</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  postcode ONS_CCG_CODE CCG_CODE ONS_REGION_CODE NHSE_REGION_CODE  \\\n",
       "0   A81001  TS18 1HU    E38000075      00K       E39000027              Q74   \n",
       "1   A81002  TS18 2AW    E38000075      00K       E39000027              Q74   \n",
       "2   A81003  TS26 8DB    E38000075      00K       E39000027              Q74   \n",
       "3   A81004   TS1 3BE    E38000162      00M       E39000027              Q74   \n",
       "4   A81005  TS14 7DJ    E38000162      00M       E39000027              Q74   \n",
       "\n",
       "  ONS_COMM_RGN_CODE NHSE_COMM_REGION_CODE  Total_All  Total_Male     ...      \\\n",
       "0         E40000001                   Y54       4234        2061     ...       \n",
       "1         E40000001                   Y54      19691        9706     ...       \n",
       "2         E40000001                   Y54       3357        1779     ...       \n",
       "3         E40000001                   Y54       9151        4774     ...       \n",
       "4         E40000001                   Y54       7883        3826     ...       \n",
       "\n",
       "   Female_50-54  Female_55-59  Female_60-64  Female_65-69  Female_70-74  \\\n",
       "0           162           139           112           134           104   \n",
       "1           833           733           634           636           483   \n",
       "2           113           100            91            94            49   \n",
       "3           277           265           261           228           205   \n",
       "4           287           280           309           368           253   \n",
       "\n",
       "   Female_75-79  Female_80-84  Female_85-89  Female_90-94  Female_95+  \n",
       "0           120            94            59            19           7  \n",
       "1           445           362           231           106          22  \n",
       "2            44            38            18            13           2  \n",
       "3           210           165            91            39          17  \n",
       "4           183           144           102            47          20  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Assign url of file: url\n",
    "url_3 = 'https://digital.nhs.uk/media/28273/Numbers-of-Patients-Registered-at-a-GP-Practice-Jan-2016-GP-Practice-and-quinary-age-groups/Any/gp-reg-patients-prac-quin-age'\n",
    "demo = pd.read_csv(url_3, index_col=False)\n",
    "demodataset = demo.rename(columns = {'GP_PRACTICE_CODE':'practice', 'POSTCODE':'postcode'})\n",
    "demodataset.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>Total_All</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>4234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>19691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>3357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>7883</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  Total_All\n",
       "0   A81001       4234\n",
       "1   A81002      19691\n",
       "2   A81003       3357\n",
       "3   A81004       9151\n",
       "4   A81005       7883"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "demodataset= demodataset.loc[:,['practice','Total_All']]\n",
    "demodataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf_code</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th>items</th>\n",
       "      <th>nic</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "      <th>Total_All</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Q44</td>\n",
       "      <td>01C</td>\n",
       "      <td>N81002</td>\n",
       "      <td>0101010G0BCABAB</td>\n",
       "      <td>Mucogel_Susp 195mg/220mg/5ml S/F</td>\n",
       "      <td>1</td>\n",
       "      <td>2.99</td>\n",
       "      <td>2.78</td>\n",
       "      <td>500</td>\n",
       "      <td>201512</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>60-62 ALDERLEY ROAD</td>\n",
       "      <td>WILMSLOW</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK9 1PA</td>\n",
       "      <td>12323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q44</td>\n",
       "      <td>01C</td>\n",
       "      <td>N81002</td>\n",
       "      <td>0101010R0BCAAAB</td>\n",
       "      <td>Infacol_Susp 40mg/ml S/F</td>\n",
       "      <td>1</td>\n",
       "      <td>2.71</td>\n",
       "      <td>2.52</td>\n",
       "      <td>50</td>\n",
       "      <td>201512</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>60-62 ALDERLEY ROAD</td>\n",
       "      <td>WILMSLOW</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK9 1PA</td>\n",
       "      <td>12323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Q44</td>\n",
       "      <td>01C</td>\n",
       "      <td>N81002</td>\n",
       "      <td>0101021B0AAALAL</td>\n",
       "      <td>Sod Algin/Pot Bicarb_Susp S/F</td>\n",
       "      <td>6</td>\n",
       "      <td>31.74</td>\n",
       "      <td>29.63</td>\n",
       "      <td>3100</td>\n",
       "      <td>201512</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>60-62 ALDERLEY ROAD</td>\n",
       "      <td>WILMSLOW</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK9 1PA</td>\n",
       "      <td>12323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Q44</td>\n",
       "      <td>01C</td>\n",
       "      <td>N81002</td>\n",
       "      <td>0101021B0AAAPAP</td>\n",
       "      <td>Sod Alginate/Pot Bicarb_Tab Chble 500mg</td>\n",
       "      <td>1</td>\n",
       "      <td>3.07</td>\n",
       "      <td>2.85</td>\n",
       "      <td>60</td>\n",
       "      <td>201512</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>60-62 ALDERLEY ROAD</td>\n",
       "      <td>WILMSLOW</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK9 1PA</td>\n",
       "      <td>12323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Q44</td>\n",
       "      <td>01C</td>\n",
       "      <td>N81002</td>\n",
       "      <td>0101021B0BEACAH</td>\n",
       "      <td>Gaviscon_Liq Orig Aniseed Relief</td>\n",
       "      <td>3</td>\n",
       "      <td>41.43</td>\n",
       "      <td>38.35</td>\n",
       "      <td>3300</td>\n",
       "      <td>201512</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>KENMORE MEDICAL CENTRE</td>\n",
       "      <td>60-62 ALDERLEY ROAD</td>\n",
       "      <td>WILMSLOW</td>\n",
       "      <td>CHESHIRE</td>\n",
       "      <td>SK9 1PA</td>\n",
       "      <td>12323</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sha  pct practice         bnf_code  \\\n",
       "0  Q44  01C   N81002  0101010G0BCABAB   \n",
       "1  Q44  01C   N81002  0101010R0BCAAAB   \n",
       "2  Q44  01C   N81002  0101021B0AAALAL   \n",
       "3  Q44  01C   N81002  0101021B0AAAPAP   \n",
       "4  Q44  01C   N81002  0101021B0BEACAH   \n",
       "\n",
       "                                   bnf_name  items    nic  act_cost  quantity  \\\n",
       "0  Mucogel_Susp 195mg/220mg/5ml S/F              1   2.99      2.78       500   \n",
       "1  Infacol_Susp 40mg/ml S/F                      1   2.71      2.52        50   \n",
       "2  Sod Algin/Pot Bicarb_Susp S/F                 6  31.74     29.63      3100   \n",
       "3  Sod Alginate/Pot Bicarb_Tab Chble 500mg       1   3.07      2.85        60   \n",
       "4  Gaviscon_Liq Orig Aniseed Relief              3  41.43     38.35      3300   \n",
       "\n",
       "   period                              practicename  \\\n",
       "0  201512  KENMORE MEDICAL CENTRE                     \n",
       "1  201512  KENMORE MEDICAL CENTRE                     \n",
       "2  201512  KENMORE MEDICAL CENTRE                     \n",
       "3  201512  KENMORE MEDICAL CENTRE                     \n",
       "4  201512  KENMORE MEDICAL CENTRE                     \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  KENMORE MEDICAL CENTRE     60-62 ALDERLEY ROAD         \n",
       "1  KENMORE MEDICAL CENTRE     60-62 ALDERLEY ROAD         \n",
       "2  KENMORE MEDICAL CENTRE     60-62 ALDERLEY ROAD         \n",
       "3  KENMORE MEDICAL CENTRE     60-62 ALDERLEY ROAD         \n",
       "4  KENMORE MEDICAL CENTRE     60-62 ALDERLEY ROAD         \n",
       "\n",
       "                        city                     county  \\\n",
       "0  WILMSLOW                   CHESHIRE                    \n",
       "1  WILMSLOW                   CHESHIRE                    \n",
       "2  WILMSLOW                   CHESHIRE                    \n",
       "3  WILMSLOW                   CHESHIRE                    \n",
       "4  WILMSLOW                   CHESHIRE                    \n",
       "\n",
       "                    postcode  Total_All  \n",
       "0  SK9 1PA                        12323  \n",
       "1  SK9 1PA                        12323  \n",
       "2  SK9 1PA                        12323  \n",
       "3  SK9 1PA                        12323  \n",
       "4  SK9 1PA                        12323  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Merge the two datasets\n",
    "\n",
    "threedatasets= pd.merge(left=twodatasets, right=demodataset, on=['practice'])\n",
    "threedatasets.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>83220.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>333514.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>47977.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>147494.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>107669.51</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice   act_cost\n",
       "0   A81001   83220.57\n",
       "1   A81002  333514.67\n",
       "2   A81003   47977.16\n",
       "3   A81004  147494.85\n",
       "4   A81005  107669.51"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#1.Calculate the monthly total spending for each GP-practice. \n",
    "monthlytotal = threedatasets.groupby('practice')['act_cost'].sum().reset_index()\n",
    "monthlytotal.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>Total_All</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>4234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>19691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>3357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>7883</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  Total_All\n",
       "0   A81001       4234\n",
       "1   A81002      19691\n",
       "2   A81003       3357\n",
       "3   A81004       9151\n",
       "4   A81005       7883"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2.Use the number of registered patients in each GP-practice to calculate the relative costs per patient.\n",
    "\n",
    "totalall = demodataset.groupby('practice')['Total_All'].sum().reset_index()\n",
    "totalall.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>83220.57</td>\n",
       "      <td>4234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>333514.67</td>\n",
       "      <td>19691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>47977.16</td>\n",
       "      <td>3357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>147494.85</td>\n",
       "      <td>9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>107669.51</td>\n",
       "      <td>7883</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice   act_cost  Total_All\n",
       "0   A81001   83220.57       4234\n",
       "1   A81002  333514.67      19691\n",
       "2   A81003   47977.16       3357\n",
       "3   A81004  147494.85       9151\n",
       "4   A81005  107669.51       7883"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthlyandtotal = pd.merge(left=monthlytotal, right= totalall, on='practice')\n",
    "monthlyandtotal.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        19.655307\n",
       "1        16.937417\n",
       "2        14.291677\n",
       "3        16.117894\n",
       "4        13.658443\n",
       "5        15.993259\n",
       "6        14.550580\n",
       "7        15.511274\n",
       "8        15.216666\n",
       "9        16.457903\n",
       "10       14.124043\n",
       "11       15.158892\n",
       "12       18.991259\n",
       "13       16.668497\n",
       "14       14.101466\n",
       "15       13.263098\n",
       "16       15.483490\n",
       "17       16.374485\n",
       "18       16.736250\n",
       "19       18.586068\n",
       "20       15.642749\n",
       "21       13.913315\n",
       "22       17.633849\n",
       "23       17.221311\n",
       "24       14.629854\n",
       "25       13.182404\n",
       "26       17.563825\n",
       "27       16.440119\n",
       "28       16.310839\n",
       "29       18.013228\n",
       "           ...    \n",
       "7671      8.813184\n",
       "7672     13.786461\n",
       "7673    134.575127\n",
       "7674      8.297875\n",
       "7675     16.553625\n",
       "7676     15.337825\n",
       "7677     14.178120\n",
       "7678     19.002680\n",
       "7679      1.761896\n",
       "7680     15.828510\n",
       "7681     16.350615\n",
       "7682     15.609041\n",
       "7683     24.240979\n",
       "7684      9.526410\n",
       "7685      3.418058\n",
       "7686     10.994910\n",
       "7687     15.369959\n",
       "7688      5.791431\n",
       "7689      6.758823\n",
       "7690      9.759150\n",
       "7691     16.716092\n",
       "7692      7.278983\n",
       "7693     16.281507\n",
       "7694     15.744665\n",
       "7695     10.904304\n",
       "7696     10.647998\n",
       "7697      9.110098\n",
       "7698      3.201279\n",
       "7699      8.196643\n",
       "7700      7.023977\n",
       "Name: relativecosts, Length: 7701, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthlyandtotal['relativecosts'] = monthlyandtotal['act_cost']/monthlyandtotal['Total_All']\n",
    "monthlyandtotal['relativecosts'] #relative costs per patient"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>83220.57</td>\n",
       "      <td>4234</td>\n",
       "      <td>19.655307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>333514.67</td>\n",
       "      <td>19691</td>\n",
       "      <td>16.937417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>47977.16</td>\n",
       "      <td>3357</td>\n",
       "      <td>14.291677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>147494.85</td>\n",
       "      <td>9151</td>\n",
       "      <td>16.117894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>107669.51</td>\n",
       "      <td>7883</td>\n",
       "      <td>13.658443</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice   act_cost  Total_All  relativecosts\n",
       "0   A81001   83220.57       4234      19.655307\n",
       "1   A81002  333514.67      19691      16.937417\n",
       "2   A81003   47977.16       3357      14.291677\n",
       "3   A81004  147494.85       9151      16.117894\n",
       "4   A81005  107669.51       7883      13.658443"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthlyandtotal.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4353</th>\n",
       "      <td>J82002</td>\n",
       "      <td>154999.23</td>\n",
       "      <td>10579</td>\n",
       "      <td>14.651596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4358</th>\n",
       "      <td>J82008</td>\n",
       "      <td>122916.57</td>\n",
       "      <td>7486</td>\n",
       "      <td>16.419526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4369</th>\n",
       "      <td>J82022</td>\n",
       "      <td>181661.31</td>\n",
       "      <td>12244</td>\n",
       "      <td>14.836762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4371</th>\n",
       "      <td>J82024</td>\n",
       "      <td>33526.01</td>\n",
       "      <td>4970</td>\n",
       "      <td>6.745676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4383</th>\n",
       "      <td>J82040</td>\n",
       "      <td>164079.27</td>\n",
       "      <td>11830</td>\n",
       "      <td>13.869761</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice   act_cost  Total_All  relativecosts\n",
       "4353   J82002  154999.23      10579      14.651596\n",
       "4358   J82008  122916.57       7486      16.419526\n",
       "4369   J82022  181661.31      12244      14.836762\n",
       "4371   J82024   33526.01       4970       6.745676\n",
       "4383   J82040  164079.27      11830      13.869761"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Monthlyandtotal only for Southampton\n",
    "a=twodatasets_s.practice.unique().tolist()\n",
    "b=monthlyandtotal.practice.isin(a)\n",
    "monthlyandtotal_s= monthlyandtotal[b]\n",
    "monthlyandtotal_s.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x10dc4aeb8>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n001azYExxhhTqH71q2hg0KoVbN2a88AArObAGGNMWEtWweylsLkcShtAx1bQulnq15n0LVgA7dpF\n06NHw4ABNbZ5qzkwxhiT2pJVMGORCwzA/Z+xyOWb7LrttqqBwfr1NRoYgAUHBWXFihX06NGDHj16\nsOeee9KmTZvt6a1bt+6w/MqVK3k8clONJLZt20bTpk1TLnfvvffSsGHDKlMlv/322/Tv3x+Ap59+\nmkGDBqWxR8aYWmP2UqiMmTSvUl2+yY6VK930x3fd5dIPPOA6Iu66a40XxYKDTC1ZBZNmwvjp7n8G\nUXSLFi2YNm0a06ZN44orruCaa67Znt5pp512WD5scBDW6NGjOfjggxk3blzW1mmMqSUiNQZh8016\nHnsMWrSIppctg9/9Lm/FseAgEzVYzTZs2DC6dOlCly5dePjhhwEYPHgws2bNokePHgwePJi1a9dy\nzDHH0LNnT7p168Zrr70Wev2zZs2ioqKCO+64g9GjR2e9/MaYIlfaIL18E86mTa624Ne/dunf/97V\nFrRsmddiWYfETCSrZstiJ53JkyczatQoJk+eTEVFBb169aJ3797cc889zJ49m2nTpgFQXl7OuHHj\naNy4McuWLePwww/n5JNPDrWN0aNHM2DAAPr06cPFF1/MihUraBGMYo0xdVvHVu7iJ/ibVyIu31TP\nP/4BZ5wRTc+dC+3b5604QVZzkIkaqmabNGkSZ5xxBg0bNqRx48b079+fDz74YIflVJUbb7yRbt26\n0bdvXxYsWMDy5ctDbWPMmDEMGDCAkpIS+vfvz8svv5zVfTDGFLnWzaBzm2hNQWkDl7bRCunbtg32\n2ScaGPzyl662oEACA7Cag8yUNogfCGS5mi3snTNHjhzJmjVr+Pzzz6lfvz5t27Zl8+bNKV/3+eef\nM3fu3O23ZN6yZQtffvkll19+eUblNsbUMq2bWTCQqffeg6OPjqanTYPu3fNWnESs5iATHVu5arWg\nHFSzHXXUUYwdO5ZNmzaxfv16xo0bx5FHHknjxo2rjCxYs2YNe+yxB/Xr12f8+PEsWrQo1PpHjx7N\n3Xffzbx585g3bx6LFy9mzpw5oV9vjDEmBVU46qhoYHDEEW764wIMDMBqDjITiaBzPClIr169OOec\nczjkkEMAuPLKK+natSsAZWVldO3alZNOOolrr72WU045hbKyMnr27Ml+++2Xct2qygsvvMCECRO2\n54kI/fv3Z8yYMXQv0APXGGOKxvTp0K1bNP3uu1VrDwqQhK2yro3Kysp0ypQpVfK++eYbDjzwwDyV\nqHjZ+2aMMXGcfz789a/u8d57w5w5UD9/1+UiMlVVy1ItZzUHxhhjTLbNn1+1g+FLL8GZZ+atOOmy\n4KAOmTZtGhdddFGVvIYNG/LRRx/lp0DGGFMb3XQT3HNPNL1hAzRsmL/yVIMFB3VIjx49ts+JYIwx\nJsuWL686edGjj0YnNyoyNlrBGGOMydTDD1cNDFasKNrAACw4MMYYY6pvwwY3/fHVV7v0kCFu2GLz\n5vktV4asWcEYY4ypjhdeqHor5fnzq95quYhZzYExxhiTjvJyaN06GhhceKGrLaglgQFYcFBQVqxY\nQY8ePejRowd77rknbdq02Z7eunXrDsuHvWXztm3baNq0acrl7r33Xho2bFhl1sW3336b/v37A/D0\n008zaNCgNPbIGGNqmQkTYKed4PvvXXr6dHjuubwWKRcsOMjQqFFuKGtJifs/alT119WiRQumTZvG\ntGnTuOKKK7jmmmu2p3faaacdlg8bHIQ1evRoDj74YMaNG5e1dRpjTK2gCocdBsce69LHHOOmP+7S\nJb/lyhELDjIwahQMHOiamVTd/4EDMwsQEhk2bBhdunShS5cuPPzwwwAMHjyYWbNm0aNHDwYPHsza\ntWs55phj6NmzJ926deO1114Lvf5Zs2ZRUVHBHXfcwejRo7O/A8YYU6y++MJdAX76qUtPmgTvvOM6\nItZS1iExA0OGwMaNVfM2bnT5556bve1MnjyZUaNGMXnyZCoqKujVqxe9e/fmnnvuYfbs2dvnLigv\nL2fcuHE0btyYZcuWcfjhh3PyySeH2sbo0aMZMGAAffr04eKLL2bFihW0aNEiezthjDHF6Oyz4cUX\n3eN994VZs6BevfyWqQZYzUEGvvsuvfzqmjRpEmeccQYNGzakcePG9O/fnw8++GCH5VSVG2+8kW7d\nutG3b18WLFjA8uXLQ21jzJgxDBgwgJKSEvr378/LL7+c3Z0wxphiMmeOqxmIBAZjx8Ls2XUiMACr\nOchIu3auKSFefjaFvTnWyJEjWbNmDZ9//jn169enbdu2bN68OeXrPv/8c+bOnUufPn0A2LJlC19+\n+SWXX355RuU2xpiidP31cN997nH9+rBuHZSW5rdMNcxqDjIwdOiO02U3bOjys+moo45i7NixbNq0\nifXr1zNu3DiOPPJIGjduXGVkwZo1a9hjjz2oX78+48ePZ9GiRaHWP3r0aO6++27mzZvHvHnzWLx4\nMXPmzAn9emOMqRWWLXO1BZHA4Ikn3LDFOhYYgNUcZCTSr2DIENeU0K6dCwyy2d8AoFevXpxzzjkc\ncsghAFx55ZV07doVgLKyMrp27cpJJ53EtddeyymnnEJZWRk9e/Zkv/32S7luVeWFF15gwoQJ2/NE\nhP79+zNmzBi6d++e3Z0xxphCdP/9cN110fTKldCsWf7Kk2cStsq6NiorK9MpU6ZUyfvmm2848MAD\n81Si4mXvmzGmKK1fD40bR9N/+APcdlv+ypNjIjJVVctSLWc1B8YYY+qmUaPgvPOi6YULoU2b/JWn\ngNRYnwMRmSci00VkmohM8XnNRWS8iHzr/zfz+SIiD4nIbBH5UkR6BtZzoV/+WxG5MJB/sF//bP/a\n2jsAtZqmTZu2fcbFyN9Pf/rTfBfLGGNq1tat0KJFNDC47DI3WY0FBtvVdM1BH1UNjq0bDLyjqveI\nyGCfvhE4AdjP/x0KPAYcKiLNgduBMkCBqSLyiqqu8ssMBD4BXgf6AW9Up5CqSm2MLXr06LF9ToRs\nqstNU8aYIvPvf8Pxx0fTM2aANYnuIN+jFU4FRvjHI4D+gfyR6nwCNBWR1sDxwHhVXekDgvFAP//c\nbqr6sboz1cjAutJSWlrKihUr7IQXkqqyYsUKSutgb15jTBGprISePaOBQb9+Ls8Cg7hqsuZAgX+L\niAJPqOqTQCtVXQKgqktEZA+/bBtgQeC1C31esvyFcfLT1rZtWxYuXMgPP/xQnZfXSaWlpbRt2zbf\nxTDGmPimTAE/2guAjz6Cn/wkf+UpAjUZHByuqot9ADBeRGYmWTZenb5WI3/HFYsMxDU/0C7ObEUN\nGjSgQ4cOSYpmjDGmaPTvD5GbyR14oLuLYh2Z5TATNdasoKqL/f9lwFigF7DUNwng/y/ziy8E9g68\nvC2wOEV+2zj58crxpKqWqWpZy5YtM90tY4wxhWj2bDehUSQwePVV17/AAoNQaiQ4EJFdRaRx5DHQ\nF/gKeAWIjDi4EIjcK/gV4AI/auEwYI1vfngL6CsizfzIhr7AW/65dSJymB+lcEFgXcYYY+qS3/0O\nIpPANWwImzdDyJvQGaemmhVaAWP9CID6wN9U9U0R+Qx4UUQuAb4DzvLLvw6cCMwGNgIXA6jqShG5\nC/jML3enqq70j68EngN2wY1SqNZIBWOMMUXq+++hdeto+tln4eKL81eeImYzJMbMkGiMMaYI/elP\nMHhwNL16NTRpkr/yFKiwMyTmeyijMcYYU31r17q+BZHAYOhQN6GRBQYZsemTjTHGFKcRI+Cii6Lp\nxYurNiuYarPgwBhjasKSVTD/9MfgAAAgAElEQVR7KWwuh9IG0LEVtK67d/3LyJYt0LIlRG5Zf9VV\n8Mgj+S1TLWPBgTHG5NqSVTBjEVT6Pl6by10aLEBI1+uvw0knRdOzZsH+++evPLWU9Tkwxphcm700\nGhhEVKrLN+FUVkKXLtHA4JRTXJ4FBjlhNQfGGJNrm8vTyzdVffopHHZYND15ctXpkE3WWc2BMcbk\nWmmD9PKNo+pqCiKBQffuUFFhgUENsODAGGNyrWMrKIm5BUyJuHwT36xZUFLi+hgAvPEGTJvm8kzO\n2btsjDG51roZdG4TrSkobeDS1hkxviuvhE6d3OOmTd3ohH798lumOsb6HBhjTE1o3cyCgVQWL4Y2\nbaLpkSPh/PPzV546zGoOjDHG5N/QoVUDg7VrLTDII6s5MMYYkz+rV0OzQI3KvffC9dfnrzwGsODA\nGGNMvjzzDFx6aTT9/ffQyjppFgJrVjDGGFOzNm+G0tJoYDBokBu2aIFBwbCaA2OMMTXn1Vfh5z+P\npmfPhn33zV95TFxWc2CMMSb3KircVMeRwOCMM1xtgQUGBclqDowxxuTWRx/B4YdH01OnQs+e+SuP\nSclqDowxxuSGKhx3XDQwOOQQV4NggUHBs5oDY4wx2TdjBhx0UDQ9frwLFExRsJoDY4wx2XXJJdHA\noFUr2LrVAoMiYzUHxhhjsmPBAmjXLpoePRoGDMhfeUy1Wc2BMcaYzN12W9XAYN06CwyKmNUcGGOM\nqb5Vq6B582h6+HA3qZEpahYcGGOMqZ7HH3e3V45YtgxatsxfeUzWWLOCMcaY9GzaBCLRwOD3v3fD\nFi0wqDWs5sAYY0x4//iHm90wYs4c6NAhf+UxOWE1B8YYY1Lbtg3at48GBuec42oLLDColazmwBhj\nTHLvvw+9e0fT06ZB9+75K4/JOas5MMYYE5+qCwoigcHhh0NlpQUGdYDVHBhjjNnR9OnQrVs0PWEC\n9OmTv/KYGmU1B8YYY6q64IJoYNC2LZSXW2BQx1jNgTHGGGf+fNfpMOKll+DMM/NWHJM/VnNgjDEG\nbrqpamCwYYMFBnWY1RwYY0xdtnx51cmLHnkErroqf+UxBcFqDowxpq565JGqgcHy5RYYGMCCA2OM\nqXs2bHDTH//2ty49ZIgbttiiRX7LZQqGNSsYY0xd8uKLcPbZ0fT8+VVvtWwMVnNgjDF1Q3k57LVX\nNDC48EJXW2CBgYnDag6MMaa2mzABjj02mp4+Hbp0yV95TMGzmgNjjKmtVOGww6KBQZ8+bvpjCwxM\nClZzYIwxtdG0afDjH0fTkybBEUfkrzymqFjNgTHG1DYDBkQDg333dbdbtsDApMFqDowxpraYM8cF\nAxFjx0L//vkrjylaVnNgjDG1wfXXRwODevVg40YLDEy1hQoORKSPiHTwj1uLyAgReVZE9sxt8Ywx\nxiT1ww9uQqP77nPpJ55wzQi77JLfcpmiFrbm4P8BFf7xfUADQIEn09mYiNQTkS9E5DWf7iAin4rI\ntyLygojs5PN39unZ/vn2gXXc5PNnicjxgfx+Pm+2iAxOp1zGmFpkySqYNBPGT3f/l6zKd4lyZ/hw\n2GOPaHrlShg4MH/lMbVG2OCgjap+JyL1geOBgcCVwE/T3N7vgG8C6T8Bw1V1P2AVcInPvwRYpaod\ngeF+OUSkMzAAOAjoB/w/H3DUAx4FTgA6A+f4ZY0xdcmSVTBjEWwud+nN5S5d2wKE9etdbcG117r0\nHXe4YYvNmuW1WKb2CBscrBWRVkBvYIaqrvf5DcJuSETaAicBT/u0AMcAL/tFRgCRBrJTfRr//LF+\n+VOBMaq6RVXnArOBXv5vtqrOUdWtwBi/rDGmLpm9FCq1al6luvza4m9/g8aNo+kFC+D22/NXHlMr\nhR2t8DDwGbATMMjnHQ7MTGNbDwC/ByJHdQtgtapu8+mFQBv/uA2wAEBVt4nIGr98G+CTwDqDr1kQ\nk39oGmUzxtQGkRqDsPnFZOtWN/3xihUufdll8GRaLbvGhBYqOFDVP4nIWKBCVf/nsxcRbQZISkRO\nBpap6lQROTqSHW9TKZ5LlB+vBkTj5CEiA3HNIrSzOcWNqV1KG8QPBEpDV3IWpvHjoW/faHrGDDjw\nwPyVx9R6oYIDERmnqlWq6VX1vyLyD+D0EKs4HPi5iJwIlAK74WoSmopIfV970BZY7JdfCOwNLPT9\nHJoAKwP5EcHXJMqvQlWfxHekLCsrixtA5MySVa56c3O5+7Hq2ApaWxuhMVnTsZXrYxBsWigRl1+M\nKiuhrAy++MKljz8e3njD9TcwJofC9jnokyD/6DAvVtWbVLWtqrbHdSicoKrnAu8CZ/rFLgTG+cev\n+DT++Qmqqj5/gB/N0AHYD5iMa/LYz49+2Mlv45WQ+1Yz6kpHKWPyqXUz6NwmWlNQ2sClizEInzrV\nzVcQCQw+/BDefNMCA1MjktYciMid/uFOgccRPwLmZ7j9G4ExInI38AXwjM9/BnheRGbjagwGAKjq\n1yLyIjAD2AZcpaoVvqy/Ad4C6gHPqurXGZYtu5J1lCrGHy5jClXrZsX/nTr9dDe7Ibjmg+nTXaBg\nTA1J1awQqaovoWq1veI6AN6R7gZVdSIw0T+egxtpELvMZuCsBK8fCgyNk/868Hq65akxtbmjlDEm\nO2bPhv32i6ZffRVOPjl/5TF1VtLgQFUvBhCRj1T1qZopkjHG1EG/+x089JB7vMsubkKj0tL8lsnU\nWWFHKzwlIk2AA4BGMc9NyEXBjDGmTli6FPYMzET/zDPwq1/lrzzGEH60wkW4GQjXAxsDTymu74FJ\npbYOsTLGVN+wYXDjjdH06tXQpEn+ymOMF3YSpKHAmar6Ri4LU6vVtiFWxpjqW7u2ahAwdCjcfHP6\n67Hh0SZHwgYH9YF/57IgtV7kC2tfZGPqthEj4KKLounFi6F16/TXExkeHbngiAyPBvtdMRkLGxz8\nCbhFRO5S1cpcFqhWqw1DrIwx1bNlC7RsCevWufSvfw2PPlr99dnwaJNDYYODa4A9gd+LyIrgE6pq\ncxAbY0wyb7wBJ54YTc+aBfvvn9k6bXi0yaGwwcF5OS2FMcbURpWV0L07fPWVS59yCowbl51ZDq2T\ns8mhsEMZ38t1QYwxplb59FM47LCq6V47zPlWfdbJ2eRQqHsr+HsZDBWROf72yYhIXz9lsTHGmAhV\nOOmkaGDQrRtUVGQ3MIDadR8JU3DCNisMB9oA5wKR4Yxf+/xHclAuY4wpPrNmQadO0fQbb0C/frnb\nnnVyNjkSNjg4DeioqhtEpBJAVReJSJvcFc2YAmDjyE1Yv/41PPaYe9y0qZv5cKed8lsmY6opbHCw\nNXZZEWkJrIi/uDG1gI0jN2EsXgxtAtdJI0fC+efnrzzGZEGoPgfAS8AIEekAICKtcc0JY3JVMGPy\nLtk4cmPAzWwYDAzWrrXAwNQKYYODm4F5wHSgKfAtsBj4Q26KZUwBsHHkJpE1a9xwxFtucelhw1xH\nxMaN81suY7Ik7FDGrcAgYJBvTliuqpriZcYUt3THkVv/hLrhmWfg0kuj6e+/h1Y2fNDULgmDAxFp\nr6rz/OPYOy82Fj+Jh6rOyVnpjMmndMaRW/8EpzYHSJs3u46GW7a49KBBMHx4fstkTI4kqzmYDkTq\nyGbjbs8cO62XAvVyUC5TjGrbiSGdm2XZPPc1EyDl6xh79VX4+c+j6dmzYd99c79dY/IkYXCgqo0D\nj8P2TTB1VW29cg47jtz6J+Q+QMrHMVZRAZ07w3//69Knnw5//3tutmVMAQk7Q+JDCfIfyG5xTNGq\n6z37E/VDqEvz3Oc6QKrpY+yjj6B+/WhgMGWKBQamzghbI3BRgnwbs2Ocun7l3LGV648QVNfmuc91\ngFRTx5gq9O0Lhx/u0occ4moQDj44u9sxpoAlHa0gIr+KLBd4HPEjYHlOSmWKT12/Q1w6/RNqq1zf\nCKgmjrEZM+Cgg6Lp8ePhuOOyt35jikSqoYyRmoGdqFpLoMBS4MJcFMoUIbtDnM1zn+sAKdfH2CWX\nwLPPusctW8KiRdCgjgS3xsRIGhyoah8AEblbVW+pmSKZomRXzgZyGyDl6hhbuBD23jua/tvf4Jxz\nMlunMUUu7CRI2wMDcRMcSOC5yhyUyxSjun7lbHIv28fYHXfAHwITva5bB40aZW/9xhSpsKMV9hKR\nsSKyAtgGlAf+jDGmuKxa5aY/jgQGw4e7jogWGBgDhB+t8ATuzozHAuuBnsArwBU5KpcxxuTG449D\n8+bR9LJlbrZDY8x2YW/Z/FOgnapuEBFV1f+IyCXAR8BTuSueMcZkyaZNsOuuroYA4IYb3A2TjDE7\nCBscVOCaEwBW+5svrQXaJH6JMcYUiLFj3eyGEXPmQIcO+SuPMQUubHDwKXAiMBZ4C3gB2ARMyVG5\njDEmc9u2QceOMH++S59zjhuNkEu17R4jpk4KGxycT7R/wiDgeqARYNMnG2MK0/vvQ+/e0fS0adC9\nezSdi5N4bb3HiKlzwg5lXB14vAm4K2clMsYkZ1emyalCnz7w3nsuffjhMGmSG50QkauTuN2d09QS\nYYcy7iQid4rItyKywf+/S0RKc11AY0xA5KQWmUY4clJbsiq/5SoUX30FJSXRwGDCBPjgg6qBAeTu\nJk51/R4jptYI26zwGHAAcDUwH9gHuAnXITH2ngvG1B25qppOtE67Mk3sggvg+efd4zZtYN48d1fF\neHJ1Eq/r9xgxtUbY4KA/sG+geWGGiHwKzMaCA1NX5aJqOtU67cp0R/PnQ/v20fSLL8JZZyV/Ta5O\n4naPEVNLhJ0E6XugYUzeLsCS7BbHmCKSi6rpVOvM9W2Ri82QIVUDgw0bUgcGkLtbbLduBp3bRD+P\n0gYuXddrdUzRCVtz8Dzwpog8DCwE9gauAkaKyDGRhVR1QvaLaEyBysVVfKp15urKtNg6Oa5YAbvv\nHk0//DD85jfhXhvZ1+B7mM19tnuMmFogbHBwuf9/c0z+FUSnUFbgR9kolDFFIRdV06nWmYs7Exby\n8Lt4QcvfR8FvfxtdZvlyaNEi/PpigyuAbRXZK7MxtUDYoYw2lZgxsXJxFR9mndm+Mi3UTo6xJ/JV\na2CvA6PP33wzDB2a3jrj7SvAtsrCCYiMKQBhaw6MMbFycRWfi3WmUqidHIMn8vf/DXdfH31u/nxo\n1y79dSbbp0IIiIwpEBYcGJOJXLQv13SbdaEOv9tcDtvK4fwTYMUyl3fcKfD7odULDCDxvga3aYwJ\nPVrBGFNb5arnfqZmfA4nHhwNDJ74uwsMMgla4u1rUL4DImMKhNUcGFPX5aMpIxlVN+Xxxx+7dPdD\nYNjTbpbDTIOWyD7NWgLlMZ0QCyEgMqZAJAwORCRUrYKqVmavOMaYvCiU4XfTpsGPfxxNj/0XtPhR\ndoOWyL4W2/BNY2pQspqDbbjhianUy1JZjDF12YAB8MIL7nGHDvDf/yae/jgbCiUgMqYAJasd6ICb\nt+BHwG+B94B+wIH+/7tAqFlHRKRURCaLyH9E5GsR+YPP7yAin/obOb0gIjv5/J19erZ/vn1gXTf5\n/Fkicnwgv5/Pmy0ig9N5E4wxeTR3rmsyiAQGY8fCnDnZCwyWrIJJM2H8dPffblJlTEoJv32qOj/y\nWESuBcoC91b4r4hMAabgbsqUyhbgGFVdLyINgA9E5A3gWmC4qo4RkceBS/z6LgFWqWpHERkA/Ak4\nW0Q6AwOAg4C9gLdFZH+/jUeBn+FmcPxMRF5R1Rkh34fMWRWlMem74Qb485/d43r1YN062GWX7K2/\nkCd4MqaAhR2t0IQd763Q0OenpM56n2zg/xQ4BnjZ54/A3eAJ4FSfxj9/rIiIzx+jqltUdS7uxk+9\n/N9sVZ2jqluBMX7ZmmG30TUmPT/84GoLIoHB44/Dtm3ZDQwgd7dmNqaWCxscjMBdpQ8UkRNEZCDw\nFtETeEoiUk9EpgHLgPHA/4DVqrrNL7IQdwto/P8FAP75NUCLYH7MaxLl1wz7ATImvOHDYY89oumV\nK+HyyxMvn4lCneDJmAIXtlHv97ir9LNx1flLgEeAp8JuSFUrgB4i0hQYi+u7sMNi/n+8gciaJD9e\nkBO3M6UPbAYCtKvuRCqx7AfImNTWr4fGjaPpO+6A22/P7TYLdYInYwpc2HsrVAKP+7+MqOpqEZkI\nHAY0FZH6vnagLbDYLxa58+NCEamPa75YGciPCL4mUX7s9p8EngQoKysLMxojNfsBMtlW2/qwjB4N\nv/xlNL1gAbRtm/vt5uoulsbUcqGaFcS5TETeEZEvfd5RIvKLkK9v6WsMEJFdgOOAb3AjHs70i10I\njPOPX/Fp/PMTVFV9/gA/mqEDsB8wGfgM2M+PftgJ12nxlTBly4pCnWEuyHpsF4/a1Idl61Z3a+VI\nYHDJJW6So5oIDMAFVJ3bRAP10gYuXcyBljE1IGyzwp24kQAPEK09WAgMB14M8frWwAgRqYcLSF5U\n1ddEZAYwRkTuBr4AnvHLPwM8LyKzcTUGAwBU9WsReRGYgZuH4SrfXIGI/AbXD6Ie8Kyqfh1y3zJX\naDPMxbIe28WlUO+SmK7x46Fv32j666+hc+eaL4fNZ2BM2sRdkKdYSGQB8GNVXS4iq1S1mR89sFJV\ni/ZbV1ZWplOmTMl3MXJv0szEzR5Hdqr58pjkxk9P/NzPutZcOaqrshJ69YKpU136+OPhjTfc6ARj\nTF6JyFRVLUu1XNiag3pAZChiJJpoFMgzhcw6TBaXYu7DMnUqlAV+dz78EH760/yVxxhTLWGHMr4B\n3C8iO4PrgwDcBbyaq4KZLEp0UsnVycb6N2SmGPqwxHP66dHA4IAD3LwFFhgYU5TCBgfX4IYwrsGN\nHFgP7APcmKNymWyqyZNNbepMly/F1olu9mzXZDB2rEu/+irMnOlmPDTGFKWUzQq+lmB33KiB5rig\nYIGqfp/jsplsqckOk7WlM111ZHP4YbF0ohs0CB580D3eZRc3oVFpaX7LZIzJWMrgQFVVRKYDjVV1\nGW6GQ1NsaupkU1f7N+RiREghz3WwdCnsuWc0/cwzcMJp8Nm8wiyvMSYtYZsVvgD2T7mUMTXdv6FQ\nZHsK7UJunhk2rGpgsHq1CwwKtbzGmLSFHa0wEXhTRJ7D3cNg+6+gqj6b/WKZolVoM9LV1NV3tmtM\nCrF5Zt062G23aPruu2HIEPf4y5mFV15jTLWFDQ4OB+YCvWPyFbDgwEQV0oRQNTn5U7aHHxZa88zz\nz8MFF0TTixbBXntF04VWXmNMRsLeW6FPrgtiapFC6UxXk1ff2a4xKZS5DrZscXdQXLvWpX/9a3j0\n0fjlKoTyGmOyImzNASLSAjgR2FNV7xWRvYASVV2Ys9IZk47YJoSavJrNdo1JLptnwja1vPEGnHhi\nND1zppu/oKbLa4ypcaGCAxHpDfwdmIJrYrgXd9Oj64FTclY6Y8KK14SQSK6uZrNZYxIm2KhOf4ow\nTS2VldC9O3z1lUuffDK88kry6Y8LqTnJGJOxsDUHDwBnq+o7IhLpfvwp0Cs3xTImTfGaEOIppqvZ\nZMFGdftTpGpqmTwZDj00+tynn7r7JGRaXmNMUQkbHLRX1Xf848gvy9Y0Xm9MYtkYUZCspqBBPSiv\nqF1Xs9XtT5Hofdq01dUQ/OtfLt2tG3zxBZSEHe1sjKlNwp7cZ4jI8ar6ViDvOCDJ7eOMCSFbIwqS\n9TGoqIQubWtHUBBR3f4U8d6nBXPhklOj6TfegH79MiufMaaohb0suA4YJSIjgF1E5AngOeCGXBXM\n1BHZmjwo3v0jMllfoavuZFOx79NDd0cDgyZN3OgECwyMqfPCDmX8RES6Aefh5jVYAPSykQomY9ka\nURCpFfgqwSEZXF8hT0scVnVHB0T285PpcHpg2pIRI6rOY2CMqdPCjla4XlX/DAyLyb9WVe/PSclM\n3ZDN8fGtm0VP+onWV5MTI+VSstEBqYKfZ/8f3HJLNL1mTdWZD40xdV7YPge3AX+Ok38LYMFBscvn\nlXS2x8enWl8uJkbK1/sXb3RAsuCnYQk0bRpddtgwuCGLLYO1oUbGGAOkCA5E5Bj/sJ6I9AGCjbo/\nAtblqmCmhuT7Sjqd8fFhTj6p1pftiZHy/f7FShT8PPAoDLs1mvf999Aqi0M6C+19MMZkJFXNwTP+\nfylV76GgwFLgt7kolKlBhXCDnzDj49M5+SRbX7an+S2E9y8odt+2boHTDofyrS599dXw4IPZ326h\nvQ/GmIwkDQ5UtQOAiIxUVeutVBsVyw1zsnXyyXYzRrL3792vYVulSzeoBwe0zs6JMlkNSjD4+Xgi\n3H519HXffgsdO2a+/XiK5TgyxoQSaihjbGAgIn1E5MjcFMnUqOoOiatp2RzV0LlNdP9KG7h0dU/a\nyd6nSGAAbhKmrxbC+OnwTQaDfCI1KJH9jtSgLPETl3ZsBVoJv/p5NDA44jhYvDJ3gQEUz3FkjAkl\n7GiF94CbVfVDEbkRuBbYJiKPquofc1pCk1vFcsOcbI9qgOjVd2QOhOoECB1bJR4+mcjCVbBhC2wq\nd9tvUA9UXTCRqiNfghqUUY9uYMjTjWizdAYfckT0uadehpOOyX3VfrEcR8aYUMKOVugCfOIfXwYc\nDawHPgQsOChmxXLDnGyefLLReS5YtV8dqzZGH5dXRB+nKkuc7Y16pwkDh7dm7NYT6Mt4AD6Xg/nm\nwQmce2kNDVEsluPIGBNK2OCgBFAR2RcQVf0GQETsm18bFMMNc7J58sm0/0JscJFtycoSpwbl2adW\nsWHrPtvTP+PfvK0/Y5+h5Zxbk12Gi+E4MsaEEjY4+AB4BGgNjAXwgcLyHJXLmB1l6+RT3f4LmdYW\npCPRNmJrUIbfwTsr/wHAMlrShkVswzW1fLfMf71t/gFjTJrCBgcX4e6v8ANwr8/rBORgTJSpc2r6\n5FWd/gu5ri0IW5bI+/LRf+DMPtuzf8koRvPLKou222MbLFlv8w8YY9IWdrTCClW9WVVvV9X1Pu9f\nqvpAbotnCsWoR9fTfs9ySkqU9nuWM+rR9dlZcare97kQ7yZNqfovxGuKqK4SSXyTqDBleeLBKoHB\nC/ctYdzOA6os0nDnSobeuiV7N7YyxtQpCWsORGSIqg71j+9MtJyq3paLgpnCMerR9Qy8riEbt7hY\ncv7SBgy8rh6wnnOvapTZyvM1eU6JRLcbZg6CME0JbZvB8vXRGpBEr6lUdwvpSG1JstEKwVqV8o1w\n0mHR9dx/P1xzDWcD23Zez5C7dua7ZfVpt8c2ht66xX02423+AWNM+pI1K7QNPN471wUxhWvIXTtv\nDwwiNm4pYchdO3PuVRmuvKYnz4nXPFBRmXj5iGQn+4gD21ZNT5oZ/zUN6qU/K+RrL8FDd0WfW7YM\nWrbcnjz3qkaBz6KB/0tSbpt/wBiTRMLgQFWvDDy+uGaKYwrR9o5tIfPTUtMnr+rWVMQbShkUr7wd\nW8HXi1ytQFB5hTvxp7p/BMCWzfDzQ6PrOPNCuHpwlcAgKZt/wBhTDWEnQfpRgqe2AEtUNcSllylW\n7fbYxvylO5782u2xje1XqNVV0yev6tZURE7kMxdXnfkQEpe3dTO/fJyAIl4wElur8cE7cOc10edH\nvA6t26ZXq2LzDxhjqiHspd9s3M2WwN2ZMfhrVykirwC/VlXr5VQLDb11CwOvq1elaWF7h7dMg4PY\nk1ek/f2rhS4v9kSW6ciGTGoqIk0B6ZQhNpCIiFeGSK1GRQVcfDJ870cVHN0Pbh5WddlENQ/Jym2M\nMSGFDQ4uA3oDfwAWAO2AW4GPgPeAPwGPAmfmoIwmz1ynwwQd3rIheNJNNuwuGzMbZqOmIp2TbTrB\nyOZymD4Vrgu04j32Iuzbacdlv1oIs5Zk72ZOJsrmhTAG0dj20HgLiSwEOqrq5kBeQ+C/qtrWz5T4\nrarunruiZl9ZWZlOmTIl38UwEYk68JU2gCM7pX4+rJr88Y/XAbJEdrzZkyr0PBSmfebSnXvA8BEg\nSYY8JlqXqb6wn5cxRUpEpqpqWarl0pk+uT0wM5DXDqjnH69PY10m14r1yidVf4Bs3pkxdqjgVwsz\ne68Svedh2vy/+gq6do2mhz0NPXq5x8Ehl/HUxLDPuiRfQ2uNKTBhT+gPABNE5C+4ZoW2wMU+H+Ak\n4OPsF88A6Z3ss1H1ni/JhgsuWZX9kQ1LVlUdTbC53KUhvfcq2XsOyT+7Cy+EkSPd4zZt4OMvYN6K\nqsunmrLZ5izInpoeWmtMgQoVHKjqMBH5EjgL6AksAS5R1Tf98/8E/pmzUtZl6Z7si/nKJ9lwwRmL\nYK+msHh19u7MGO9Wy6quLT+d9yrRex67/uBnV74O9oneLIkXX4SzznKP944zTDHdYZSmemxeCGOA\nNJoCfCDwZg7LYuJJ92RfzFc+kf2Jd9KuVDf7YOc2mTeZRAKuRIK3UA5Ta5POe1upcONN8PwT0bwN\nG6Bhwx3LGNzuXk3h+zXhh1Ga6rF5IYwBws9zsDNwG3AO0EJVm4hIX2B/VX0klwWs89I92Rf7lU/r\nZvGDA3D7lY1heWHvkxC21ibM7IkAa1fDmUdF0w8/DL/5TbjtLl7tAqNI+YutP0mxsHkhjAHC1xwM\nB9oA5wJv+Lyvfb4FB7mU7sm+Nlz55DrASXUir+/ncwhba5Nq9kSAV8bAI3+MppcvhxYt4i+bbLtH\ndrITVa7ZvBDGhA4OTsMNZdwgIpUAqrpIRNrkrmgGSP9kX50rn0Ib3ZDLACfM3R477eX+h621ad0M\nVm+AhXHWvXmTm/444pxL4b5h0KIaN3kqhqYhY0ytEDY42Bq7rIi0BFZkvURmR/VKoNK3g9cvcSev\nZCfvdK588jW6IVlAkquq3VR9DSIitzNOpwZjeZxbWL//b7j7+mj6r2/BMYek3o9ibxoyxhS9sMHB\nS8AIEbkGQERa44YxjslVwQzxJ2QJ01aejlQ97XMRIMQLSL5a6K6+I3c2jJ2qONF0ymG2lWooYKxI\ngJTO6Ijg+reVw/knwDyQwKkAACAASURBVIplLn3cyfD7P0b3K5Xa0DRkjClqYYODm4FhwHSgIfAt\n8BRwZ47KZaBmhiUmO2nmqgZh1pL4Qc7CVdB016oTFGVSqxEvuAor2egIiM7WGMmrX+JGEvznM7jh\nkuh6nngZOuzvHoe98rdOccaYPAs7z8FWYBAwyDcnLNcw8y57IrI3MBLYE6gEnlTVB0WkOfACbvbF\necAvVHWViAjwIHAisBG4SFU/9+u6ELjFr/puVR3h8w8GngN2AV4HfpdOGXOuOu36NdH2nKynfS7m\nR1iyqupQwVjB7SUKjmYuDnczprCjEhKJNzoiUcBSWQmDLoQZ01x+90PcTIfB6Y93SaNZwDrFGWPy\nKO0pj1X1BwAR6QbcqqpnhXjZNuA6Vf1cRBoDU0VkPHAR8I6q3iMig4HBwI3ACcB+/u9Q4DHgUB9M\n3A6U4e4MOVVEXlHVVX6ZgcAnuOCgH9GRFbkT5qRf3Svgmmh7TtXTPkwgkk7gE2nPTyS4vUTb3lYJ\n3yyMP+4/8t6u3pB5EBXvfY4XcHw7E64MfA3u+wt0PXjH167amN7dFI0xJk+SBgf+5ko3AT1wTQl3\nALsD9wE/A0aE2YiqLsHNqoiqrhORb3BDI08FjvaLjQAm4oKDU4GR/sr/ExFp6vs5HA2MV9WVvnzj\ngX4iMhHYTVU/9vkjgf7kOjgIe9JP1jwQeT7eibUm2p6TTTwEqQORdAOfMCfsSTPdPiar1Yg3MiCi\nUpM/H0aYvgUAf/w9TPRzg7XaC557Deol+Volm1Y5Xp4FEsaYPEhVc/Ao8GPgLdzVfFegE+5Efpmq\nLk93gyLS3q/zU6CVDxxQ1SUisodfrA3uHg4RC31esvyFcfJzK2yfgGTNA8lOrDXV9hxZX7xAZPdG\nO7avhwl8Zi6OX+4wEwZFOig2a5i/4XuJ7sLXoJ5rFlmyEC48MZp/23A44tjU66300zNXVO7YIVOk\n6n0eiuWeGMaYWidVcHA80ENVl4nIw8B3QG9VnVSdjYlII+DvwCBVXSuJb0cb7wmtRn68MgzENT/Q\nrl27VEVOLtlJP1h9nKpdPzYdDC7itXknO1lXV7xAZPdGVXvrxzthJav6j1T5B18XZsKgiFUbq7cv\nmYpMghTvfd5WAU/dDy8955YpKYFxn8DOpe4oDNPFIVGfi9guMsVyTwxjTK2TKjhopKrLAFR1oYis\nzyAwaIALDEap6j989lIRae1rDVoDfuwXC4G9Ay9vCyz2+UfH5E/0+W3jLL8DVX0SeBKgrKwssw6L\nyU76wZNoouaBdNv5cz0nQWwgMmlm6uAl7NTBwRn+IBqERHr5F5KKyqrNLJH3ecVy+Fm3aP7Vt8LJ\ngb4G9Uqgfj23fKpbLYeVSc1JoU1uZYwpGqmCg/oi0ofAlXlsWlUnpNqIH33wDPCNqt4feOoV4ELg\nHv9/XCD/NyIyBtchcY0PIN4C/igikV+4vsBNqrpSRNaJyGG45ooLgIdTlStjya6CgyfRRM0Dicbf\nx7bzJxurH+bqsroniTCjJdKpCYi3vkILDCD+1f9LI+GJe6Ppv38AjXerusy2SuhzUDQdbyhlibi/\nsPudye2oi/XW3caYvEsVHCwDng2kV8SkFfhRiO0cDpwPTBcRP9aLm3FBwYsicgmuySJyGfY6bhjj\nbNxQxosBfBBwF/CZX+7OSOdE4EqiQxnfoCZGKqTqzBc8GSYampaqw2GYsfrJri4zOUkkGy0RDDga\n1IMSdSe80gbuyjte1XnkddWdeyCsYNt9pjZthFMPi6YvuBLOuzL+srEn8sj7O2tJ9P0oEdizyY6T\nK8UrdyadT4v51t3GmLxLGhyoavtsbERVPyB+vwCAHXpx+VEKVyVY17NUDVAi+VOALhkUs3oi4+mr\nM+QwTIfDTMfqV3ekBCRuDtm9UdX88gp3Yqtf4tZVryR+WXZvlPn+hNF0l3D9FeqVuEAmkXdfh/8b\nHE2//C78tDt8vTB+7UKiE3kwUNpW6UZStG3mJlnK1WgFuz+DMSYDac9zYOIIM+QwUdV+qsluMv0x\nT3ekxOoNsHRt9IQmRHvoN6jnrmzjDRNUhW1+XYlOuJGTYToiAVY6rwvbkTFRObeVwznHwRq/n/1O\ng+vvrDqCIVgbELnfBezYiXFm3K4vbo6GYBNERLau6u3+DMaYDFhwkA2pagByUbUfu0x1Xh+vRiH2\nxK+4k2CzhpmPHkg3MAgGWF8vyl5TQTJTP4abLo+mnxoLB3Ta8cZQYSe6SlRLkuu+FnZ/BmNMBiw4\nCCtVp75kNQCZtP+m6vAX/MGPV8Z0Ogwmk+thhfH6CTTZJf2bJlVXZSX89pfw7QyXPvincP/TsN+e\n4a7mE33G+WL3ZzDGZMCCgzAy7fmdSftv7I98pGo/0vkv8oOfqIyd27i7C2Y6Y2CuxasVqKl5Dr6d\nAVcNiKaHj4SDesCWbYk/59hALN0ApkG9zMocht2fwRhTTRYchJFpz+9M23/D/Min6nhY07I5YiCX\n7rwWPnjbPW7b3jUj1AucuON9zvECsXSIwAGtMyq2McbkkgUHYWTa87sm2n+z0Tu9YQPYmKUq/EIP\nDBZ9BxefHE3/4SH4ydHxl419DzMdcXFQgqmZjTGmQFhwEEY64/3jVfnXRPtvojJGRhqEka3AoNA9\n9icYO8o93mln+McH7n8isTU8mfSBKG1ggYExpuBZcBBGOuP9IyI305m52A1zy0X7b2xgEqukSKr2\n40k1B0F1rFoBZ/eJpq+5A044PfXrYmt4qtPHAGy0gDGmaCSYrcZU0bqZ69gXuYIsbeDSy9dXCRhG\nvdOE9ucdQMnxXWh/3gGMeqeJq0WYscidyLMp0u4dOUkFJyKKqNTCnJ44jIrKHfcnEy/+pWpgMPbD\ncIFBPB1buRN9OiLHjNUaGGOKgNUchBXvyj8wbfKod5ow8IG2bNziTmbzl+3EwAfcvaDOPXZN9qet\njdfurQpSkr2b/uRbZGKlTOZY2LgB+v8kmr7oN/DLgemtI3bEQpg7WIL7HCwgMMYUIQsOMhGoXh7y\nlz23BwYRG7eUMOQve7rgINtj9ROtL2z/gqD6JYnn+y8EazZV73VvvwrDhkTTo9+GFnukv554Ixbi\nBYtNd90xYJi91AWRNs+AMaaIWHCQiUBfhO9+iD8scXt+tqetrW67dzz168GBbaue3ApJugFLeTn8\n4mjYsM6lT/4FXH1LZmUIOydFcFbM4KyOm8tdOsImJzLGFDALDhKJd5vk2B/yQPVyu5blzF+20w6r\nadeyPH5HtP/f3r3HWVXX+x9/fWYYQERhuMllBDSviGlKKZWd1Lx2sevJREXKKDtWll00elj2k/R4\nSTQtIZVEEW/ZzTQyj/3EU5lYKZigpIDDRUAuCggMM9/zx3et2Wv2rLVvs28z+/18POYxe1322ou9\nZ7M+6/v9fD/fQqdRDiUlSeYzHXCo2oKBrnj6SZj2pdTybb+Gfffr+nHzDe6WrumcDOocvLDa/9ZU\nyiJSxZSQGCc92S8U/kceTS4c0QjHHcL0KWvp16fjRblfnzamT1nbud85/fhxx80mLkly5ECfxJev\n6FTKpQoU8k3gy1dbG3zhE6nA4Jj3wfxnixMYFDLKIKl7p7WtuopViYjEUMtBnExFbhIqI0764Hag\nmWmzh7NyfQOjh7Ywfcpav37E6OzHz7Xi4gvNHUshNzX6LoH09fnY3ervdEuZbzBuVIcEzqJasgi+\nMim1fMNdcOjbi3f8OvPnvuy10nUB9KTWGxHp9hQcxMn2H3Xc9gP2YdJJq3zyYajO4IBRuR8/2+vG\nBQDNm2Dbzq7NQ1CO4Y6lCAycg8u+DE894Zf3OxB+ej/UFblBLHx/8ukC6FWX3/uqqZRFpIqoWyFO\ntv+o47Yn1UKIu4gkHT/b6ya1DJRrgqJq0rwcTjkiFRhccTPM/EXxA4N0uXYBHDIyfn1jv/j1Q/oX\nfk4iIkWmloM4B+yT+U43qf851yqI5ZhroULmPjagc9dKtDWlGH48HX57r3+8515w35+goYx33jta\nYMGSzMmkSSWzkwKLDVtLe84iInlQcBBnRGPm4KCrfc7lmGuhArIWguqq19fDZ05MLX/zCjjpI10/\nbiGiyaTpZbJDWQpnxR5PRKQKKDhI0tVplrPJ1MqQNMyxqbHwpMMyyFoIqivungU/vym1/Ms/w55V\n1BQflsmGzEFeqf+uRESKQDkHSeLq55ej6T/TMMdDm3yAEFWf8BEmrS+hrIWgCrHtTTj57anA4HMX\nwR+eq67AIJRLPkKl/q5ERPKgloMklWr6TxrmGDZdp08HHQYT6fkLh44s3dDBBBkLQRXi97+EH30v\ntXzv49A4uMCzK5Ns3QM9tEtJRHoWBQeZlGKa5UzWbMp8cck0pC79YlMB06es7ZBzAJFCUPnYtRM+\n/l7/G+CjZ8GXLinimXZRVye2KvfflYhInhQcVIt8ixhFiyalX2y6UhCpC8K8gi6NVvjLn+B7X0kt\nz34IRo1O3L3swuCrzK0yIiLlpOAgm67OgZDraxRyMY9rZSj0WEUy6cQthSUftrbC5z/m6xcAvPsE\n+P6Mop5bl4W5ASMakyeoqqXEwnJ8N0SkIhQcZJLen1/MSXLiJnbKV0N95/H23bFG/7+ehYvOSS3f\ndA8cNK5y5xOnoR4OHpH63HtwrYqclPK7ISIVp+Agk67MgZBJXBJhIVpaUxP8hOPtuxPn4DsXwDN/\n9ssHjoMf3136Kof5MnxgAB2DsZEDffGiWrxzLtV3Q0SqgoKDTAqdAyGbTBM79UCxVRMP/Aec/9HU\nTlfOhKMnVu4kM3H4kSJtaVMtr96cXCK7pyvVd0NEqoKCg0xKVbAmn/9AG+rjp/ktoa6UQE5/7unv\neoM7Hh3UoWrirmt+AG23+ScMaIS7/1je8sehfEYdxE2iVMt3yirmJNKjKTjIpFj9yumJW7nO2Fdn\nqebsruYn5KgrJZDjnnvLQ4Nx+KI/I1nFKpog/KdfciWc8MG8zq2o8zakf651lv8MlbV6p1zrORci\nPVyVde5WmXxmWkwSV/GwNce71ZEDy35XmqkEcpy5jw1g7NkHU3fKeCZfs2+n54aBwWVc7gODwF68\nkXdgMHVGEyvW9cY5aw9a5j42IOdjZNTmwCx+m5lvwYlTq3fKxfhuiEjVUstBNl0tWBOXX+CcL2/c\nmuUudcNWH1yUMdFwxbrcSyCntxTExTwD2cQmBrUvf40fMYOvMWbYrrzOq6TzNoRaWmF8U6oSJaRG\nKYDulNOpmJNIj6XgIFeFjulOanZubfPzJITZ7knPLWNgMPexARg+/y5dXAnkuAt21OeZxSy+0L48\nlHVsYCi9e+VfNbEk8zak69uQ/YKncf0iUgMUHOSiK2O6kxK3IJXtXqZ8gmymzR7e3g0QZbjYi3nS\nhbkvb7GV/tQHyQXXcTHf4Nr27a6A3MqiztvQq67jyANItQJkCgJ1pywiNUI5B0nWbPJj2h9d5O/e\nk8Z0ZxM3C1/6MTLtU0ZJF3tHfDJi3IX5DH7FW/RrDwzG93mpQ2AA0NKanMOQZPqUtfTr07EbpqB5\nG+oMhg/o+H431PsgDZJnxBQRqSEKDuKkJxEmyeVuP0zcynSMcAx9hSXdhY8ZFr8+esGuo5V/sz+/\n4mMA3MOnMRzP73xb7HPz7Q6YdOIWZl3UzJhhuzBzjBm2i1kXNeeXbxAWLlq9ueOohDD3I1NhHxGR\nGqJuhTi5FinKNVM9Uy1+yH/4XInkMqti+nDCySdtZP2Tz3H/5hPb9zmSf/AsRwZL8S0ihXQHFDxv\nA6S6DTIFACrsIyICqOUgXi4Xg3wz1auk6yCTbHfnnYcTNvDp332qPTD4MxMx2iKBQajjxdhwrFjX\nwNizDy7eUMRscgkAkoK9Wh2uKCI1Sy0HcTIlEYJPaDtkZObktLjEtnGjqn7+g0x359HRCYexmMUc\nnrru//fPOOu6c2Fd5wBo8F6t9N+jjRXrGoLREH6ffAosFUX4WSRV9lNhHxERQC0H8bJdDHrVZw8M\n4hLburkwT+DnTPaBAbCKkTSwC95xTGLS4A1fWs3yu5YyZlhLp9EQmQosFV3fBhjSP35ba5sP3Orr\nfPAX7q/CPiJSgxQcxBnRmNRV7mXrduihiW3HDvo3DmMycwD4T+6liVWMGub/rdm6JUpSq6Apjwv3\nkP4+GTGdkZrdsqXVf1bjm+C4QxQYiEhNUrdCujWb/OiBTPmI2fqge2Ji2+wb+fPrt7Yv7slWtrNn\np4TFTN0SRa1VAD4wOLQpcyGp6L4btsYnmqavquUJlUREUMtBR2F3QKbRA7n0QfekBLY3NsPJb4d5\nPjB4+gOXM3bYTt6yfnkPJyxarYLQwD3970zJnn0bfCvAoU35BWfdOZATEekitRxE5TKEMZc+6LjE\ntm7o6Wt+xTsfvax9+f6v/JNPfaiO5Swt6HhhEFG0mRXDu/vw88hW2jhbomn6viIiNUrBQVS2C0d4\nwViwJPNFKFxeuibVl92d7HgLPnIM7wwWf8ilTOOH9JvZxq498iw8lKZLtQo6nWfk88qltHFS0GbW\nsaazRiiISI0rS7eCmd1uZuvMbHFk3SAze9TMXgp+NwbrzcxuNLNlZvacmR0Vec7kYP+XzGxyZP3R\nZrYoeM6NZklz72aR6W6xznxCW/oohOdXwePP+zLLC5Z0LLWbbdbFEotOpxzWFIhb18ETf4CPHNO+\nOIblTOOHQJlHFuQi37v7uGmGxzfBYZp6WEQkylwhs+Dk+yJm7wO2AnOcc+ODdVcDG51zV5nZJUCj\nc+7bZnY68GXgdOAY4Abn3DFmNghYCEzAp5A9AxztnNtkZn8Dvgr8FXgYuNE590i285owYYJbuHBh\nakX6BEuhcNreXCdI6lXn70Yr2GqQPp0yQO9ebTjn5zYI9evT5vMG3v86nHMqbFgHwBzOaR+VEGXm\naJu/uNP6iggTEkVEJCdm9oxzbkK2/crScuCcewLYmLb6DOCO4PEdwEcj6+c476/AQDMbAZwCPOqc\n2+ic2wQ8CpwabNvbOfcX5yOdOZFj5Sf9zjJUH7xNufZX726reHdC3HTKu3bXdQgMwLcG/HbmUjjt\nqPbAgJkPcNmwW4lT8MiCUli9WZMiiYiUQCVHK+zjnFsDEPweFqwfBbwa2a85WJdpfXPM+vxFqxpG\nhUWMGuoLOmwl5FY7wPEk7+GezSf7xbdPgPnPwn4HFX9kQSn0gNoRIiLVqBoTEuPyBVwB6+MPbjYV\nmAowevTo1IakLoVQm4M653MPusEohKSaAqG382zHORCuvd0HB4GijywoFQ05FBEpukq2HLwWdAkQ\n/A7atGkG9o3s1wSszrK+KWZ9LOfcLOfcBOfchKFDh6Y25DKMcXeb73boBi0IcXf+Ycw0l7PaA4NX\nGMvd3/x3h8AgNOnELSy/aylt8xez/K6l1RcYgIYcioiUQCWDg98A4YiDycCvI+vPDUYtHAtsCbod\n5gMnm1ljMLLhZGB+sO1NMzs2GKVwbuRYucvlDrRvg89LqK+e2lFJow/SSxnX1znGsAKHcRbzAPgY\nD/LOvV/irJO2VfKfkJs661zoSEMORURKoizdCmY2D3g/MMTMmoHvAVcB95nZ54CVwKeC3R/Gj1RY\nBmwHpgA45zaa2f8Dng72+4FzLkxyvAD4ObAH8Ejwk59sBXKiF6IqacpOH5GQPsthtKbANSfP4Ztc\nC0Abxp5sYwd7YG9WfxcJ4FtsIHuhIxER6bKyDGWsVh2GMmbKOYheiNZsqpppl8eefXBsXsHgvXfT\nv28bK9c3cOTg1fx9Q6rX5Yv8lJl8sX15zLBdLL+rsIqHZWPmaxEoEBAR6ZJchzJWY0JiZeRSgveF\nZmiunqFzSSMSXn+jntff6MVXmcGMDV9rXz+q9wZW7xrcvlx1ow+SOE2EJCJSTgoOojKV4C1TYDD3\nsQGdRghA/KiBpBEJ/djONvq3L1/OZcweNo2rp6xl2uy9qnv0QZIq6coREakF6laIVkhMUqauhHyr\nGgKd9j+Tu5nHpPblJl5lFU2AY8ywlu4ZGIBvyTnukEqfhYhIt6ZuhWIqU6GdpKqG6cI5DsJcgWmz\nh7N6Hay2Joa49QDcxmc5n9van2PQ3sqQnrhYcUaGyhRoVIKISJnVdnCwdYefMCnML4D4nIMyNWnn\nVtWw476TTtzCpMb5cMnU9gvs0Q2L+HvL+PZ9DYdLqxUVBhhVERw4/DwJA/fsXKFSoxJERMqutoOD\ncGTCjhbfbRCdujcsmQzZhzkWSbaqhun70tYGX5kELz7vVx41Ea68ha//z95Mm72LlesbGLRXK6+/\nEV+0KZ9gJGfZWgGSNG/ywYG6DkREKq56qvlUg/T8i7B2f5matOOqGvbu1UZDfec5Dn5y2qNw6pGp\nwOD6OXDVTDBrr2x457de5a2ddcRXmC7VJEqFzZYNaJ4EEZEqUdstB7nY0QKby1NBMGk+g/R1Twz8\nKKPvCOo8NY2Bn/0K6us7jXTY+lZdpxyGUMmGMXYlwVUjEkREqkJtj1Y46DC38OZ7Mu9UXwet6XMU\nVMjqV+G8D6aWL78BJh4PxI90yDQv1V3ffrW0+QaFTFClEQkiIiWl0QrFYFY9gcEt18CDd/rHDb3h\nl/8Lvfu0b44b6ZDUxD9mWEtpA4MwiTCa3Lm71U9clUQjEkREqkZtBwfhRD4N9dDS2nl7ocl1xbTp\ndfj08anlr30fTvt4+2LYlbBiXVJyYcfWg5JXRQwv8ukFpXItTy0iIhVX28FB/75w0uGwYEl8cJBv\ns3ix3Tcbbr0+tfzgk9B/7/bF+K6Ejgbv3do+z0LJix9lusjnUp5aRESqQm0HB2Gdg2qzfRt8dGJq\nefKFMGlqp93iuxJS+vVp44YLVpc+t2BcjpMiZSpPLSIiVaO2hzKWsGVg7mMDGHv2wdSdMp6xZx/M\n3McG5PbEl1+ECz6VWp73x9jAADLVKXCMGbaLWRc1dy0wGN/k7/CT9G3IPTAQEZFuo7ZbDkokvbk/\np3LFra1w/89hzs2w1wC45Eo44YPx+waSiiaNGdbStWmYG/vBhLelltNzBXJtLVizSd0IIiLdUG23\nHJRIXHP/9p11TL5m3/iWhFUr4eIpcHswNHHWg1kDA4gvmlSUhMNN230exppN/mI+blSqBSHX1oIw\nATGsXRBWnFxTPVNei4hIPLUcRIXj7Bcs6VJBnqTm/tY2P2pgxbrefPa6JnCOSTtuhZnXQkODby04\n/nQ/hDIHSUWTipJjEC0fXUiuwLLXOnfbhBUn1XogIlLVFBxE7WwpSoJiLnMkDNm9huHXTYXWP/g5\nES6+HIYOz/u1Jp24pXQJh125mCcFV6qCKCJS9dStEFWk/MS45v7oi5zJPBYznomtC+DC78CVtxQU\nGJRFoRfzpETGTAmOIiJSFRQcFCDbSIRJJ25h1kXNjBm2CzNHGHUM4nXu4UzmcRZLOIQj+Cd1N1/B\n2HMOyX00QzH1bfAjErLtU4gD9kkVmQqpCqKISLeg4CBP4UiEFet645y1j0SICxDCmREBTud3LGY8\nH+OXXMoPOY4FLOOgjMcouR0t2bsMCr2YF5rIKCIiFaecgzwljUT4woxRsbMpfvmaAczkC0zlZyxi\nPKfxCM9yZKfjbt9Zx7TZw0tbsChdLq0CXbmYq+iRiEi3pOAgT0kjEbbtrGPbunogVdfgPW1PsLDt\ns4xlOVfxbb7H5eyiT+zzMx27ZMJWgb4N8bkFyg8QEalJ6lbI0+ihSQl6qf71Puzg+zu/ze9bTsBh\nvI8nuJSrIoFBfOZj8rGLrFedzzUI7+qVHyAiIhEKDvLkuwuShzUcyT9YyAS+ybXM4vMcwbP8L+/t\ntF9Jihdl07fBTzR1/GEdm/uVHyAiIhEKDvI06cQtnW6yAerZzXeYzt94F4PYyGk8zAXcwjb6d9p3\n8N6tHUYzFGUehFxkGpY4otEXgDrpcP9bgYGISM1SzkEB0gv/HciLzOFcjuUp5nEm/8XNbGJQsNUR\n7XLo3Ss1U2JZkw9BOQQiIpITtRwUYMwwfwdutPFf3MQ/OZKDeJEzuZuzmBcJDPxe9XWuvYXg9ovL\n0EJQH/OxKodARERypJaDAkyfspbLr3fcvOt8TuKPPMKpXNj7Z7y8a1Ts/m0O2uYvLs/JhYmGmhFR\nREQKpOAgX84xyc3lU3YVLdbKF91P+f3QKUz/7GtMmx0/p0LZRiH0bUgFAKoxICIiBVJwkI/NG+HG\nK+DJP9L7sHfQ+5tXcMvIfYEX23eZOqOpQ5GksoxCAD+To7oNRESkCBQc5Oovj8P1l8O2N+H8i+AT\nk6G+vsMuJZ1COZOGejh4hFoKRESkKBQcZLPpdbj9Rpj/S9j/ILhqlv+doOSjEOpMNQhERKSkFBxk\nctctMOcn/vFnzoezL4CGCg4HVGKhiIiUgYKDOFvfgI9HqhpO/QZ88tzKnQ/4wOC4Qyp7DiIiUhMU\nHKT73QNwww9Sy/c+Do2Dy/f6YfnFaKWlYtUo0PBGERHJgYKD0M4dcMZEaGv1y584F77wjfKfR53B\n7si8C8W6iK/ZBP9alQo6drT4ZVCAICIiHSg4APjz4/D9r6aW73gYRjSV9xzqzF+4o4FB2GJQjIv3\nstc6131uc369ggMREYmo8eDAwXkfhNWv+sX/OAWmXVPeUwiHIYbN/VHFvHgnTbqUaTImERGpSbUd\nHLz0QurxT+6FAw4t7ev1a4D3JCQVLm6OX1+si3ffhvhjaTImERFJo4mXDjkc5j9b+sDASA4MIPki\nXayL9wH70GmuaU3GJCIiMWo7OBg1Bm6c60sPl5z5pMAkpb54j2j0xZPCYKNvg4opiYhIrNruVui3\nZ/ley2XJHwjXl3KooSZjEhGRHNR0cLDolb7UnTK+fHMgZMsf0MVbRESqQE0HB7t2G2CsWNebqTP8\n0MWSBghK/hMRkW6gR+UcmNmpZrbUzJaZ2SX5PHf7zjqmzR5eqlOLzx9YswkWLIFHF/nfmXISRERE\nyqTHtByYWT1w6DSYQwAACfFJREFUM3AS0Aw8bWa/cc79K9djrFxfojv7hnqfc7C42ecUhEGCKhaK\niEgV6kktB+8CljnnXnbO7QLuAc7I5wCjh+ZQUyB9REG2fZsaobUtVfkwDAKWrkmuWCgiIlJBPSk4\nGAW8GlluDtblpF+fNqZPWZt5p3D4X3Q4YEN98v7jRsGGrfFBQEtr/HNUsVBERCqsx3Qr4MsMpXOd\ndjKbCkz1S72BCfTu5dinsYXrH2zl+gfjD+6ccyvXr12+YcumjdH1QwY0Dho9dPgYM6uL7Nu2cv3a\nFRu2bNp49IHjjs7nH9Gye/eu5155cVE+z+nGhgAbKn0SNU6fQeXpM6isWnv/x+SyU08KDpqBfSPL\nTcDq9J2cc7OAWQBmttC5hRPKc3qSzr//Tu9/BekzqDx9BpWl9z9eT+pWeBo40Mz2M7PewJnAbyp8\nTiIiIt1Oj2k5cM7tNrMLgflAPXC7c+75Cp+WiIhIt9NjggMA59zDwMN5PGVWqc5FcqL3v/L0GVSe\nPoPK0vsfw5zrlLMnIiIiNawn5RyIiIhIEdRkcNCVMssCZravmT1uZi+Y2fNm9tVg/SAze9TMXgp+\nNwbrzcxuDN7v58zsqMixJgf7v2RmkyPrjzazRcFzbjTz82onvUatMrN6M/uHmT0ULO9nZk8F78+9\nQXIuZtYnWF4WbB8bOcalwfqlZnZKZH3s9yTpNWqNmQ00swfMbEnwXZio70B5mdnXgv+DFpvZPDPr\nq+9AkTjnauoHn6z4b2B/fKGDZ4FxlT6v7vQDjACOCh7vBbwIjAOuBi4J1l8C/Hfw+HTgEXwtimOB\np4L1g4CXg9+NwePGYNvfgInBcx4BTgvWx75Grf4AXwfuBh4Klu8Dzgwe3wJcEDz+EnBL8PhM4N7g\n8bjgO9AH2C/4btRn+p4kvUat/QB3AOcHj3sDA/UdKOv7Pwp4BdgjWL4POE/fgSK9v5U+gQr8QU0E\n5keWLwUurfR5decf4Nf4OS2WAiOCdSOApcHjmcBnIvsvDbZ/BpgZWT8zWDcCWBJZ375f0mvU4g++\nlsdjwAnAQ8FFZAPQK9je/reOH8UzMXjcK9jP0v/+w/2SvieZXqOWfoC9gwuTpa3Xd6B8n0FYFXdQ\n8Df9EHCKvgPF+anFboUulVmWjoKmuXcATwH7OOfWAAS/hwW7Jb3nmdY3x6wnw2vUohnAt4Bg4g4G\nA5udc7uD5ej71v5eB9u3BPvn+9lkeo1asj+wHpgddOvcamZ7ou9A2TjnVgHXAiuBNfi/6WfQd6Ao\najE4yKnMsmRnZv2BXwAXOefeyLRrzDpXwHoJmNmHgHXOuWeiq2N2dVm26bMpTC/gKOCnzrl3ANvw\nTfxJ9D4XWZBrcQa+K2AksCdwWsyu+g4UoBaDg5zKLEtmZtaADwzmOufCGSleM7MRwfYRwLpgfdJ7\nnml9U8z6TK9Ra94DfMTMluNnID0B35Iw0MzC+iXR9639vQ62DwA2kv9nsyHDa9SSZqDZOfdUsPwA\nPljQd6B8PgC84pxb75xrAR4E3o2+A0VRi8GByix3UZA1fRvwgnPuR5FNvwHCbOvJ+FyEcP25Qcb2\nscCWoDl0PnCymTUGdwEn4/vu1gBvmtmxwWudm3asuNeoKc65S51zTc65sfi/4f9xzk0CHgc+GeyW\n/hmE79sng/1dsP7MIJN7P+BAfCJc7PckeE7Sa9QM59xa4FUzOzhYdSLwL/QdKKeVwLFm1i94j8LP\nQN+BYqh00kMlfvCZwy/iM1GnVfp8utsP8F58M9pzwD+Dn9PxfXGPAS8FvwcF+xtwc/B+LwImRI71\nWWBZ8DMlsn4CsDh4zk2kCnbFvkYt/wDvJzVaYX/8f2zLgPuBPsH6vsHysmD7/pHnTwve56UEGfHB\n+tjvSdJr1NoPcCSwMPge/Ao/2kDfgfJ+BpcDS4L36U78iAN9B4rwowqJIiIi0kEtdiuIiIhIBgoO\nREREpAMFByIiItKBggMRERHpQMGBiIiIdKDgQESKwsycmR2QsO08M3uy3OckIoVRcCDSw5jZcjPb\nZWZD0tb/M7iAjy3Ca/zJzM7v6nEqIXh/PlDp8xCpZgoORHqmV/Az+QFgZocDe1TudESkO1FwINIz\n3YkvuRuaDMyJ7mBmA8xsjpmtN7MVZvZdM6sLtp1nZk+a2bVmtsnMXjGz04Jt04HjgJvMbKuZ3RQ5\n7AfM7KXgOTcHZW1Je92bzey6tHW/NbOL4v4hZnaYmT1qZhvN7DUz+06wvo+ZzTCz1cHPDDPrE2wb\nYmYPmdnm4HkLzKzOzO4ERgO/Dc79W2bW18zuMrPXg/2fNrN98nu7RXoWBQciPdNfgb3N7FAzqwc+\nDdyVts+P8ZPP7A/8Bz6YmBLZfgy+nOwQ4GrgNjMz59w0YAFwoXOuv3PuwshzPgS8EzgC+E/glJhz\nuwP4TCQQGYKviz8vfUcz2wv4I/B7/Mx7B+BLBoMveXssvozxEcC7gO8G2y7GT5wzFNgH+A7gnHPn\n4Gvyfzg496vxgdMA/CQ7g4EvAm/FnLdIzVBwINJzha0HJ+Hrz68KN0QChkudc28655YD1wHnRJ6/\nwjn3M+dcK/6CPgJ/oc3kKufcZufcSvzkNEem7+Cc+xuwBR8QgJ/Q5k/OuddijvchYK1z7jrn3I7g\nXMOZECcBP3DOrXPOrcfX2Q/PvyU43zHOuRbn3AKXXCu+BR8UHOCca3XOPeMyT0Eu0uMpOBDpue4E\nzgLOI61LAd8a0BtYEVm3AhgVWV4bPnDObQ8e9s/ymmsjj7dn2P8O4Ozg8dnBucbZFz/pTZyRdD7/\nkcHja/CT4vzBzF42s0synPOd+NkR7wm6J642PyW5SM1ScCDSQznnVuATE0/Hz3UftQF/xzwmsm40\nkdaFbIfv4undBZxhZkcAh+JnNYzzKvC2hG2r6Xz+qwGCFoaLnXP7Ax8Gvm5mYUtFh3MPWhYud86N\nA96Nb62I5muI1BwFByI92+eAE5xz26Irg66C+4DpZraXmY0Bvk7nvIQkr+FzFQrinGsGnsbftf/C\nOZfUx/8QMNzMLgoSEPcys2OCbfOA75rZ0CBv4bLw/M3sQ2Z2QJAQ+QbQGvx0OnczO97MDg+6Wt7A\nB03hviI1ScGBSA/mnPu3c25hwuYvA9uAl4EngbuB23M89A3AJ4NRCTcWeHp3AIeT3KWAc+5NfM7E\nh/FdFi8BxwebrwAWAs8Bi4C/B+sADsQnMm4F/gL8xDn3p2DblfigYrOZfQMYDjyADwxeAP4/uQdJ\nIj2SJefoiIiUjpm9D38RHuuca6v0+YhIiloORKTsgoS/rwK3KjAQqT4KDkSkrMzsUGAzfqjhjAqf\njojEULeCiIiIdKCWAxEREelAwYGIiIh0oOBAREREOlBwICIiIh0oOBAREZEOFByIiIhIB/8HCf+9\nPUZemqMAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10db82e10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#3.Visualize the monthly total spending per registered patients for all GP-practices in a scatterplot, show a trend line, and visualize the data for your city within the national scatterplot\n",
    "#Create a scatterplot\n",
    "from math import floor\n",
    "fig=plt.figure(figsize=(8, 6))\n",
    "ax=fig.add_subplot(111)\n",
    "x= monthlyandtotal['act_cost']\n",
    "y = monthlyandtotal['Total_All']\n",
    "x1= monthlyandtotal_s['act_cost']\n",
    "y1= monthlyandtotal_s['Total_All']\n",
    "ax.scatter(x, y, color='#FFBAD2')\n",
    "ax.scatter(x1, y1, color='blue')\n",
    "fit = np.polyfit(x, y, deg=1)\n",
    "ax.plot(x, fit[0] * x + fit[1], color='red')\n",
    "ax.set_title(\"Monthly total spending per registered patients (all GP-practices)\")\n",
    "ax.set_xlabel(\"Monthly costs\",fontsize=12)\n",
    "ax.set_ylabel(\"Registered patients\",fontsize=12)\n",
    "max_x = floor(monthlyandtotal.act_cost.max())\n",
    "max_y = floor(monthlyandtotal.Total_All.max())\n",
    "ax.set_xlim(0, max_x)\n",
    "ax.set_ylim(0, max_y)\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>E87723</td>\n",
       "      <td>58319.78</td>\n",
       "      <td>1</td>\n",
       "      <td>58319.780000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3543</th>\n",
       "      <td>G82651</td>\n",
       "      <td>3358.69</td>\n",
       "      <td>1</td>\n",
       "      <td>3358.690000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7452</th>\n",
       "      <td>Y01924</td>\n",
       "      <td>71547.74</td>\n",
       "      <td>112</td>\n",
       "      <td>638.819107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7607</th>\n",
       "      <td>Y02873</td>\n",
       "      <td>4960.98</td>\n",
       "      <td>20</td>\n",
       "      <td>248.049000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7458</th>\n",
       "      <td>Y02045</td>\n",
       "      <td>626.88</td>\n",
       "      <td>4</td>\n",
       "      <td>156.720000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice  act_cost  Total_All  relativecosts\n",
       "2550   E87723  58319.78          1   58319.780000\n",
       "3543   G82651   3358.69          1    3358.690000\n",
       "7452   Y01924  71547.74        112     638.819107\n",
       "7607   Y02873   4960.98         20     248.049000\n",
       "7458   Y02045    626.88          4     156.720000"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Delete outliers\n",
    "sortedrelativecosts= monthlyandtotal.sort_values(by=['relativecosts'], ascending=False)\n",
    "sortedrelativecosts.head()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>C88626</td>\n",
       "      <td>47237.04</td>\n",
       "      <td>1599</td>\n",
       "      <td>29.541614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6405</th>\n",
       "      <td>N81655</td>\n",
       "      <td>10040.82</td>\n",
       "      <td>347</td>\n",
       "      <td>28.936081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2766</th>\n",
       "      <td>F81670</td>\n",
       "      <td>84544.86</td>\n",
       "      <td>2993</td>\n",
       "      <td>28.247531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2802</th>\n",
       "      <td>F81741</td>\n",
       "      <td>143620.38</td>\n",
       "      <td>5212</td>\n",
       "      <td>27.555714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5272</th>\n",
       "      <td>L83643</td>\n",
       "      <td>50309.15</td>\n",
       "      <td>1849</td>\n",
       "      <td>27.208843</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice   act_cost  Total_All  relativecosts\n",
       "1661   C88626   47237.04       1599      29.541614\n",
       "6405   N81655   10040.82        347      28.936081\n",
       "2766   F81670   84544.86       2993      28.247531\n",
       "2802   F81741  143620.38       5212      27.555714\n",
       "5272   L83643   50309.15       1849      27.208843"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "relativecostsoutliers= sortedrelativecosts[30:-2]\n",
    "relativecostsoutliers.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10dbd9cc0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#4.Visualize the relative costs per patient of all national GP-practices in a histogram.\n",
    "\n",
    "x= relativecostsoutliers.relativecosts.values\n",
    "plt.hist(x, bins=75,color='green')\n",
    "plt.xlabel(\"Relative costs per patient\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Relative costs per patient of all national GP-practices\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7701.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>21.317316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>665.570655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.001872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>10.689451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>13.212266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>15.504289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>58319.780000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       relativecosts\n",
       "count    7701.000000\n",
       "mean       21.317316\n",
       "std       665.570655\n",
       "min         0.001872\n",
       "25%        10.689451\n",
       "50%        13.212266\n",
       "75%        15.504289\n",
       "max     58319.780000"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#5.Use descriptive statistics to show how your assigned city compares to the national level.\n",
    "#Descriptive statistics for all national GP practices\n",
    "describenational = monthlyandtotal['relativecosts'].describe()  \n",
    "describenational = pd.DataFrame(describenational)\n",
    "describenational"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>12.206562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.211350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.729879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>11.019578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>12.120582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>14.467226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>17.488283</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       relativecosts\n",
       "count      39.000000\n",
       "mean       12.206562\n",
       "std         3.211350\n",
       "min         2.729879\n",
       "25%        11.019578\n",
       "50%        12.120582\n",
       "75%        14.467226\n",
       "max        17.488283"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Descriptive statistics for Southampton\n",
    "describesouthampton = monthlyandtotal_s['relativecosts'].describe()\n",
    "describesouthampton = pd.DataFrame(describesouthampton)\n",
    "describesouthampton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>practice</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.655307</td>\n",
       "      <td>A81001</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16.937417</td>\n",
       "      <td>A81002</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.291677</td>\n",
       "      <td>A81003</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.117894</td>\n",
       "      <td>A81004</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.658443</td>\n",
       "      <td>A81005</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   relativecosts practice  Location\n",
       "0      19.655307   A81001         1\n",
       "1      16.937417   A81002         1\n",
       "2      14.291677   A81003         1\n",
       "3      16.117894   A81004         1\n",
       "4      13.658443   A81005         1"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create a boxplot to show how Southampton relates to the national level\n",
    "desc_all= monthlyandtotal.loc[:,['relativecosts','practice']]\n",
    "desc_all= desc_all.assign(Location=1)\n",
    "desc_all.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>practice</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4353</th>\n",
       "      <td>14.651596</td>\n",
       "      <td>J82002</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4358</th>\n",
       "      <td>16.419526</td>\n",
       "      <td>J82008</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4369</th>\n",
       "      <td>14.836762</td>\n",
       "      <td>J82022</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4371</th>\n",
       "      <td>6.745676</td>\n",
       "      <td>J82024</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4383</th>\n",
       "      <td>13.869761</td>\n",
       "      <td>J82040</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts practice  Location\n",
       "4353      14.651596   J82002         2\n",
       "4358      16.419526   J82008         2\n",
       "4369      14.836762   J82022         2\n",
       "4371       6.745676   J82024         2\n",
       "4383      13.869761   J82040         2"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "desc_s= monthlyandtotal_s.loc[:,['relativecosts','practice']]\n",
    "desc_s= desc_s.assign(Location=2)\n",
    "desc_s.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>practice</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.655307</td>\n",
       "      <td>A81001</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16.937417</td>\n",
       "      <td>A81002</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.291677</td>\n",
       "      <td>A81003</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.117894</td>\n",
       "      <td>A81004</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.658443</td>\n",
       "      <td>A81005</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   relativecosts practice  Location\n",
       "0      19.655307   A81001         1\n",
       "1      16.937417   A81002         1\n",
       "2      14.291677   A81003         1\n",
       "3      16.117894   A81004         1\n",
       "4      13.658443   A81005         1"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concat_desc = pd.concat([desc_all,desc_s])    \n",
    "concat_desc.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>practice</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>58319.780000</td>\n",
       "      <td>E87723</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3543</th>\n",
       "      <td>3358.690000</td>\n",
       "      <td>G82651</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7452</th>\n",
       "      <td>638.819107</td>\n",
       "      <td>Y01924</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7607</th>\n",
       "      <td>248.049000</td>\n",
       "      <td>Y02873</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7458</th>\n",
       "      <td>156.720000</td>\n",
       "      <td>Y02045</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts practice  Location\n",
       "2550   58319.780000   E87723         1\n",
       "3543    3358.690000   G82651         1\n",
       "7452     638.819107   Y01924         1\n",
       "7607     248.049000   Y02873         1\n",
       "7458     156.720000   Y02045         1"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Delete outliers to show the boxplot\n",
    "sortedconcat_desc= concat_desc.sort_values(by=['relativecosts'], ascending=False)\n",
    "sortedconcat_desc.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>practice</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>29.541614</td>\n",
       "      <td>C88626</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6405</th>\n",
       "      <td>28.936081</td>\n",
       "      <td>N81655</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2766</th>\n",
       "      <td>28.247531</td>\n",
       "      <td>F81670</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2802</th>\n",
       "      <td>27.555714</td>\n",
       "      <td>F81741</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5272</th>\n",
       "      <td>27.208843</td>\n",
       "      <td>L83643</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts practice  Location\n",
       "1661      29.541614   C88626         1\n",
       "6405      28.936081   N81655         1\n",
       "2766      28.247531   F81670         1\n",
       "2802      27.555714   F81741         1\n",
       "5272      27.208843   L83643         1"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sortedconcat_desc_outliers= sortedconcat_desc[30:-2]\n",
    "sortedconcat_desc_outliers.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/martabatlle/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:57: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "  return getattr(obj, method)(*args, **kwds)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(0, 29)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1100c8c50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bx= sortedconcat_desc_outliers.boxplot(column='relativecosts', by='Location', grid=False)\n",
    "bx.set_xlabel(\"Location\",fontsize=12)\n",
    "bx.set_ylabel(\"Relative costs\",fontsize=12)\n",
    "plt.suptitle(\"\")\n",
    "max_y = floor(sortedconcat_desc_outliers.relativecosts.max())\n",
    "ax.set_ylim(0, max_y)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment C [25 marks]\n",
    "#Using the entire dataset from the HSCIC GP Practice Prescribing data, address the following queries using a combination of narrative, tables, figures and descriptive statistcs:\n",
    "\n",
    "#Identify for all GP-practices the relative costs per patient for all statin prescriptions (simvastatin, atorvastatin, rosuvastatin, pravastatin, fluvastatin) by using the dataset from December 2015.\n",
    "\n",
    "#Identify for all GP-practice the associated Index of Multiple Deprivation (IMD) for each GP-Practice in your assigned city.\n",
    "\n",
    "#Use the entire national dataset and identify the lowest relative spenders of statins from the first decile and the highest relative spenders of statins from the last decile. Now determine for all identified GP-practices for both groups (lowest and the highest) the associated Index of Multiple Deprivation (IMD). Use these two groups to assess whether the IMD-score differs. Use descriptive statistics for your answer.\n",
    "\n",
    "#Identify for all GP-practices the associated nine English regions. Identify for each region the associated 75 mortality rate for cardiovascular diseases for the year 2015.\n",
    "\n",
    "#Visualize (using matplotlib) for each region spending for statins [x-axis] and the mortality rate [y-axis]. Assess whether relative spending for statin prescriptions in each regions correlates with the mortality rate from cardiovascular diseases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sha</th>\n",
       "      <th>pct</th>\n",
       "      <th>practice</th>\n",
       "      <th>bnf_code</th>\n",
       "      <th>bnf_name</th>\n",
       "      <th>items</th>\n",
       "      <th>nic</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>period</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0212000B0AAACAC</td>\n",
       "      <td>Atorvastatin_Tab 40mg</td>\n",
       "      <td>2</td>\n",
       "      <td>1.67</td>\n",
       "      <td>1.67</td>\n",
       "      <td>29</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0212000Y0AAABAB</td>\n",
       "      <td>Simvastatin_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.20</td>\n",
       "      <td>3</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>274</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y00327</td>\n",
       "      <td>0502030B0AAABAB</td>\n",
       "      <td>Nystatin_Oral Susp 100 000u/ml</td>\n",
       "      <td>10</td>\n",
       "      <td>25.90</td>\n",
       "      <td>24.08</td>\n",
       "      <td>300</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RXA</td>\n",
       "      <td>Y04109</td>\n",
       "      <td>0502030B0AAABAB</td>\n",
       "      <td>Nystatin_Oral Susp 100 000u/ml</td>\n",
       "      <td>1</td>\n",
       "      <td>2.59</td>\n",
       "      <td>2.41</td>\n",
       "      <td>30</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647</th>\n",
       "      <td>Q44</td>\n",
       "      <td>RY7</td>\n",
       "      <td>N85638</td>\n",
       "      <td>0212000B0AAABAB</td>\n",
       "      <td>Atorvastatin_Tab 20mg</td>\n",
       "      <td>1</td>\n",
       "      <td>0.70</td>\n",
       "      <td>0.76</td>\n",
       "      <td>14</td>\n",
       "      <td>201512</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     sha  pct practice         bnf_code  \\\n",
       "102  Q44  RXA   Y00327  0212000B0AAACAC   \n",
       "103  Q44  RXA   Y00327  0212000Y0AAABAB   \n",
       "274  Q44  RXA   Y00327  0502030B0AAABAB   \n",
       "512  Q44  RXA   Y04109  0502030B0AAABAB   \n",
       "647  Q44  RY7   N85638  0212000B0AAABAB   \n",
       "\n",
       "                                     bnf_name  items    nic  act_cost  \\\n",
       "102  Atorvastatin_Tab 40mg                         2   1.67      1.67   \n",
       "103  Simvastatin_Tab 20mg                          1   0.10      0.20   \n",
       "274  Nystatin_Oral Susp 100 000u/ml               10  25.90     24.08   \n",
       "512  Nystatin_Oral Susp 100 000u/ml                1   2.59      2.41   \n",
       "647  Atorvastatin_Tab 20mg                         1   0.70      0.76   \n",
       "\n",
       "     quantity  period  \n",
       "102        29  201512  \n",
       "103         3  201512  \n",
       "274       300  201512  \n",
       "512        30  201512  \n",
       "647        14  201512  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Identify for all GP-practices the relative costs per patient for all statin prescriptions\n",
    "statinsdataset= prescribingdataset.loc[prescribingdataset['bnf_name'].str.contains('statin', case=False)]\n",
    "statinsdataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>1816.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>6530.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>868.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>2139.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>1891.93</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  act_cost\n",
       "0   A81001   1816.80\n",
       "1   A81002   6530.36\n",
       "2   A81003    868.39\n",
       "3   A81004   2139.41\n",
       "4   A81005   1891.93"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statinsdataset= statinsdataset.groupby('practice')['act_cost'].sum().reset_index()\n",
    "statinsdataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>1816.80</td>\n",
       "      <td>4234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>6530.36</td>\n",
       "      <td>19691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>868.39</td>\n",
       "      <td>3357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>2139.41</td>\n",
       "      <td>9151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>1891.93</td>\n",
       "      <td>7883</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  act_cost  Total_All\n",
       "0   A81001   1816.80       4234\n",
       "1   A81002   6530.36      19691\n",
       "2   A81003    868.39       3357\n",
       "3   A81004   2139.41       9151\n",
       "4   A81005   1891.93       7883"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statinsdataset= pd.merge(left=statinsdataset, right=totalall, on='practice')\n",
    "statinsdataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>act_cost</th>\n",
       "      <th>Total_All</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>1816.80</td>\n",
       "      <td>4234</td>\n",
       "      <td>0.429098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>6530.36</td>\n",
       "      <td>19691</td>\n",
       "      <td>0.331642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>868.39</td>\n",
       "      <td>3357</td>\n",
       "      <td>0.258680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>2139.41</td>\n",
       "      <td>9151</td>\n",
       "      <td>0.233790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>1891.93</td>\n",
       "      <td>7883</td>\n",
       "      <td>0.240001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  act_cost  Total_All  relativecosts\n",
       "0   A81001   1816.80       4234       0.429098\n",
       "1   A81002   6530.36      19691       0.331642\n",
       "2   A81003    868.39       3357       0.258680\n",
       "3   A81004   2139.41       9151       0.233790\n",
       "4   A81005   1891.93       7883       0.240001"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Obtain the relative costs for all statin prescriptions for each GP-practice\n",
    "statinsdataset['relativecosts'] = statinsdataset['act_cost']/statinsdataset['Total_All']\n",
    "statinsdataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>0.429098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>0.331642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>0.258680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>0.233790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>0.240001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  relativecosts\n",
       "0   A81001       0.429098\n",
       "1   A81002       0.331642\n",
       "2   A81003       0.258680\n",
       "3   A81004       0.233790\n",
       "4   A81005       0.240001"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Relative costs of statins for each GP-practice\n",
    "statins_relativecosts= statinsdataset.loc[:,['practice','relativecosts']]\n",
    "statins_relativecosts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Postcode Status</th>\n",
       "      <th>LSOA code</th>\n",
       "      <th>LSOA Name</th>\n",
       "      <th>Index of Multiple Deprivation Rank</th>\n",
       "      <th>Index of Multiple Deprivation Decile</th>\n",
       "      <th>Income Rank</th>\n",
       "      <th>Income Decile</th>\n",
       "      <th>Income Score</th>\n",
       "      <th>Employment Rank</th>\n",
       "      <th>...</th>\n",
       "      <th>Barriers to Housing and Services Rank</th>\n",
       "      <th>Barriers to Housing and Services Decile</th>\n",
       "      <th>Living Environment Rank</th>\n",
       "      <th>Living Environment Decile</th>\n",
       "      <th>IDACI Rank</th>\n",
       "      <th>IDACI Decile</th>\n",
       "      <th>IDACI Score</th>\n",
       "      <th>IDAOPI Rank</th>\n",
       "      <th>IDAOPI Decile</th>\n",
       "      <th>IDAOPI Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>Live</td>\n",
       "      <td>E01033477</td>\n",
       "      <td>Stockton-on-Tees 014G E01033477</td>\n",
       "      <td>73.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>196.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.474</td>\n",
       "      <td>123.0</td>\n",
       "      <td>...</td>\n",
       "      <td>20035.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2868.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2226.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>817.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>TS18 2AW</td>\n",
       "      <td>Live</td>\n",
       "      <td>E01012267</td>\n",
       "      <td>Stockton-on-Tees 014F E01012267</td>\n",
       "      <td>551.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>433.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.434</td>\n",
       "      <td>215.0</td>\n",
       "      <td>...</td>\n",
       "      <td>25114.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>16862.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4415.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.354</td>\n",
       "      <td>427.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TS26 8DB</td>\n",
       "      <td>Live</td>\n",
       "      <td>E01011999</td>\n",
       "      <td>Hartlepool 007D E01011999</td>\n",
       "      <td>967.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>746.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.402</td>\n",
       "      <td>678.0</td>\n",
       "      <td>...</td>\n",
       "      <td>27634.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>6264.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1071.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.481</td>\n",
       "      <td>2268.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>TS1 3BE</td>\n",
       "      <td>Live</td>\n",
       "      <td>E01012068</td>\n",
       "      <td>Middlesbrough 001A E01012068</td>\n",
       "      <td>1914.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3124.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.306</td>\n",
       "      <td>6166.0</td>\n",
       "      <td>...</td>\n",
       "      <td>16397.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4060.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2212.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>948.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>TS14 7DJ</td>\n",
       "      <td>Live</td>\n",
       "      <td>E01012117</td>\n",
       "      <td>Redcar and Cleveland 018A E01012117</td>\n",
       "      <td>7082.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5343.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.252</td>\n",
       "      <td>4058.0</td>\n",
       "      <td>...</td>\n",
       "      <td>31777.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>19703.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6666.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.300</td>\n",
       "      <td>5907.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.299</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Postcode Postcode Status  LSOA code  \\\n",
       "0  TS18 1HU                             Live  E01033477   \n",
       "1  TS18 2AW                             Live  E01012267   \n",
       "2  TS26 8DB                             Live  E01011999   \n",
       "3  TS1 3BE                              Live  E01012068   \n",
       "4  TS14 7DJ                             Live  E01012117   \n",
       "\n",
       "                             LSOA Name  Index of Multiple Deprivation Rank  \\\n",
       "0      Stockton-on-Tees 014G E01033477                                73.0   \n",
       "1      Stockton-on-Tees 014F E01012267                               551.0   \n",
       "2            Hartlepool 007D E01011999                               967.0   \n",
       "3         Middlesbrough 001A E01012068                              1914.0   \n",
       "4  Redcar and Cleveland 018A E01012117                              7082.0   \n",
       "\n",
       "   Index of Multiple Deprivation Decile  Income Rank  Income Decile  \\\n",
       "0                                   1.0        196.0            1.0   \n",
       "1                                   1.0        433.0            1.0   \n",
       "2                                   1.0        746.0            1.0   \n",
       "3                                   1.0       3124.0            1.0   \n",
       "4                                   3.0       5343.0            2.0   \n",
       "\n",
       "   Income Score  Employment Rank      ...       \\\n",
       "0         0.474            123.0      ...        \n",
       "1         0.434            215.0      ...        \n",
       "2         0.402            678.0      ...        \n",
       "3         0.306           6166.0      ...        \n",
       "4         0.252           4058.0      ...        \n",
       "\n",
       "   Barriers to Housing and Services Rank  \\\n",
       "0                                20035.0   \n",
       "1                                25114.0   \n",
       "2                                27634.0   \n",
       "3                                16397.0   \n",
       "4                                31777.0   \n",
       "\n",
       "   Barriers to Housing and Services Decile  Living Environment Rank  \\\n",
       "0                                      7.0                   2868.0   \n",
       "1                                      8.0                  16862.0   \n",
       "2                                      9.0                   6264.0   \n",
       "3                                      5.0                   4060.0   \n",
       "4                                     10.0                  19703.0   \n",
       "\n",
       "   Living Environment Decile  IDACI Rank  IDACI Decile  IDACI Score  \\\n",
       "0                        1.0      2226.0           1.0        0.422   \n",
       "1                        6.0      4415.0           2.0        0.354   \n",
       "2                        2.0      1071.0           1.0        0.481   \n",
       "3                        2.0      2212.0           1.0        0.422   \n",
       "4                        6.0      6666.0           3.0        0.300   \n",
       "\n",
       "   IDAOPI Rank  IDAOPI Decile  IDAOPI Score  \n",
       "0        817.0            1.0         0.500  \n",
       "1        427.0            1.0         0.552  \n",
       "2       2268.0            1.0         0.409  \n",
       "3        948.0            1.0         0.488  \n",
       "4       5907.0            2.0         0.299  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Identify for all GP-practice the associated Index of Multiple Deprivation (IMD) for each GP-Practice in your assigned city.\n",
    "url_4 = 'https://s3.eu-west-2.amazonaws.com/dmhr-data/deprivation-by-postcode.csv'\n",
    "imd = pd.read_csv(url_4)\n",
    "imd.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>period</th>\n",
       "      <th>practice</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Postcode Status</th>\n",
       "      <th>...</th>\n",
       "      <th>Barriers to Housing and Services Rank</th>\n",
       "      <th>Barriers to Housing and Services Decile</th>\n",
       "      <th>Living Environment Rank</th>\n",
       "      <th>Living Environment Decile</th>\n",
       "      <th>IDACI Rank</th>\n",
       "      <th>IDACI Decile</th>\n",
       "      <th>IDACI Score</th>\n",
       "      <th>IDAOPI Rank</th>\n",
       "      <th>IDAOPI Decile</th>\n",
       "      <th>IDAOPI Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>20035.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2868.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2226.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>817.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>20035.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2868.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2226.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>817.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>20035.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2868.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2226.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>817.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>20035.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2868.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2226.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>817.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81025</td>\n",
       "      <td>THE DOVECOT SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>TS18 1HU</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>20035.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2868.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2226.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422</td>\n",
       "      <td>817.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   period practice                              practicename  \\\n",
       "0  201512   A81001  THE DENSHAM SURGERY                        \n",
       "1  201512   A81001  THE DENSHAM SURGERY                        \n",
       "2  201512   A81001  THE DENSHAM SURGERY                        \n",
       "3  201512   A81001  THE DENSHAM SURGERY                        \n",
       "4  201512   A81025  THE DOVECOT SURGERY                        \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  THE HEALTH CENTRE          LAWSON STREET               \n",
       "1  THE HEALTH CENTRE          LAWSON STREET               \n",
       "2  THE HEALTH CENTRE          LAWSON STREET               \n",
       "3  THE HEALTH CENTRE          LAWSON STREET               \n",
       "4  THE HEALTH CENTRE          LAWSON STREET               \n",
       "\n",
       "                        city                     county  \\\n",
       "0  STOCKTON ON TEES           CLEVELAND                   \n",
       "1  STOCKTON ON TEES           CLEVELAND                   \n",
       "2  STOCKTON ON TEES           CLEVELAND                   \n",
       "3  STOCKTON ON TEES           CLEVELAND                   \n",
       "4  STOCKTON ON TEES           CLEVELAND                   \n",
       "\n",
       "                    postcode                   Postcode Postcode Status  \\\n",
       "0  TS18 1HU                   TS18 1HU                             Live   \n",
       "1  TS18 1HU                   TS18 1HU                             Live   \n",
       "2  TS18 1HU                   TS18 1HU                             Live   \n",
       "3  TS18 1HU                   TS18 1HU                             Live   \n",
       "4  TS18 1HU                   TS18 1HU                             Live   \n",
       "\n",
       "       ...      Barriers to Housing and Services Rank  \\\n",
       "0      ...                                    20035.0   \n",
       "1      ...                                    20035.0   \n",
       "2      ...                                    20035.0   \n",
       "3      ...                                    20035.0   \n",
       "4      ...                                    20035.0   \n",
       "\n",
       "  Barriers to Housing and Services Decile  Living Environment Rank  \\\n",
       "0                                     7.0                   2868.0   \n",
       "1                                     7.0                   2868.0   \n",
       "2                                     7.0                   2868.0   \n",
       "3                                     7.0                   2868.0   \n",
       "4                                     7.0                   2868.0   \n",
       "\n",
       "   Living Environment Decile  IDACI Rank  IDACI Decile  IDACI Score  \\\n",
       "0                        1.0      2226.0           1.0        0.422   \n",
       "1                        1.0      2226.0           1.0        0.422   \n",
       "2                        1.0      2226.0           1.0        0.422   \n",
       "3                        1.0      2226.0           1.0        0.422   \n",
       "4                        1.0      2226.0           1.0        0.422   \n",
       "\n",
       "   IDAOPI Rank  IDAOPI Decile  IDAOPI Score  \n",
       "0        817.0            1.0           0.5  \n",
       "1        817.0            1.0           0.5  \n",
       "2        817.0            1.0           0.5  \n",
       "3        817.0            1.0           0.5  \n",
       "4        817.0            1.0           0.5  \n",
       "\n",
       "[5 rows x 36 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "practice_imd_df= pd.merge(left=practicedataset, right=imd, left_on='postcode', right_on='Postcode')\n",
    "practice_imd_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>period</th>\n",
       "      <th>practice</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Postcode Status</th>\n",
       "      <th>...</th>\n",
       "      <th>Barriers to Housing and Services Rank</th>\n",
       "      <th>Barriers to Housing and Services Decile</th>\n",
       "      <th>Living Environment Rank</th>\n",
       "      <th>Living Environment Decile</th>\n",
       "      <th>IDACI Rank</th>\n",
       "      <th>IDACI Decile</th>\n",
       "      <th>IDACI Score</th>\n",
       "      <th>IDAOPI Rank</th>\n",
       "      <th>IDAOPI Decile</th>\n",
       "      <th>IDAOPI Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6625</th>\n",
       "      <td>201512</td>\n",
       "      <td>J82002</td>\n",
       "      <td>LORDSHILL HEALTH CENTRE</td>\n",
       "      <td>LORDSHILL HEALTH CENTRE</td>\n",
       "      <td>LORDSHILL DISTRICT CENTRE</td>\n",
       "      <td>LORDSHILL SOUTHAMPTON</td>\n",
       "      <td>HAMPSHIRE</td>\n",
       "      <td>SO16 8HY</td>\n",
       "      <td>SO16 8HY</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>14942.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13455.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>11285.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.216</td>\n",
       "      <td>3053.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6630</th>\n",
       "      <td>201512</td>\n",
       "      <td>J82008</td>\n",
       "      <td>WEST END SURGERY</td>\n",
       "      <td>WEST END SURGERY</td>\n",
       "      <td>MOORGREEN ROAD  WEST END</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td>HAMPSHIRE</td>\n",
       "      <td>SO30 3PY</td>\n",
       "      <td>SO30 3PY</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>14280.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16156.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>21264.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.100</td>\n",
       "      <td>20376.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6650</th>\n",
       "      <td>201512</td>\n",
       "      <td>J82022</td>\n",
       "      <td>VICTOR STREET SURGERY</td>\n",
       "      <td>VICTOR STREET SURGERY</td>\n",
       "      <td>VICTOR STREET  SHIRLEY</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td>HAMPSHIRE</td>\n",
       "      <td>SO15 5SY</td>\n",
       "      <td>SO15 5SY</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>15405.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5426.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2509.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.411</td>\n",
       "      <td>3363.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6652</th>\n",
       "      <td>201512</td>\n",
       "      <td>J82024</td>\n",
       "      <td>NICHOLS TOWN SURGERY</td>\n",
       "      <td>NICHOLS TOWN SURGERY</td>\n",
       "      <td>FANSHAWE WING  RSH HOSP.</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "      <td>SO14 0YG</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>6371.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>214.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15012.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.164</td>\n",
       "      <td>755.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6653</th>\n",
       "      <td>201512</td>\n",
       "      <td>J82024</td>\n",
       "      <td>NICHOLS TOWN SURGERY</td>\n",
       "      <td>NICHOLS TOWN SURGERY</td>\n",
       "      <td>FANSHAWE WING  RSH HOSP.</td>\n",
       "      <td>SOUTHAMPTON</td>\n",
       "      <td></td>\n",
       "      <td>SO14 0YG</td>\n",
       "      <td>SO14 0YG</td>\n",
       "      <td>Live</td>\n",
       "      <td>...</td>\n",
       "      <td>6371.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>214.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15012.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.164</td>\n",
       "      <td>755.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.509</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      period practice                              practicename  \\\n",
       "6625  201512   J82002  LORDSHILL HEALTH CENTRE                    \n",
       "6630  201512   J82008  WEST END SURGERY                           \n",
       "6650  201512   J82022  VICTOR STREET SURGERY                      \n",
       "6652  201512   J82024  NICHOLS TOWN SURGERY                       \n",
       "6653  201512   J82024  NICHOLS TOWN SURGERY                       \n",
       "\n",
       "                     centrename                     street  \\\n",
       "6625  LORDSHILL HEALTH CENTRE    LORDSHILL DISTRICT CENTRE   \n",
       "6630  WEST END SURGERY           MOORGREEN ROAD  WEST END    \n",
       "6650  VICTOR STREET SURGERY      VICTOR STREET  SHIRLEY      \n",
       "6652  NICHOLS TOWN SURGERY       FANSHAWE WING  RSH HOSP.    \n",
       "6653  NICHOLS TOWN SURGERY       FANSHAWE WING  RSH HOSP.    \n",
       "\n",
       "                           city                     county  \\\n",
       "6625  LORDSHILL SOUTHAMPTON      HAMPSHIRE                   \n",
       "6630  SOUTHAMPTON                HAMPSHIRE                   \n",
       "6650  SOUTHAMPTON                HAMPSHIRE                   \n",
       "6652  SOUTHAMPTON                                            \n",
       "6653  SOUTHAMPTON                                            \n",
       "\n",
       "                       postcode                   Postcode Postcode Status  \\\n",
       "6625  SO16 8HY                   SO16 8HY                             Live   \n",
       "6630  SO30 3PY                   SO30 3PY                             Live   \n",
       "6650  SO15 5SY                   SO15 5SY                             Live   \n",
       "6652  SO14 0YG                   SO14 0YG                             Live   \n",
       "6653  SO14 0YG                   SO14 0YG                             Live   \n",
       "\n",
       "          ...      Barriers to Housing and Services Rank  \\\n",
       "6625      ...                                    14942.0   \n",
       "6630      ...                                    14280.0   \n",
       "6650      ...                                    15405.0   \n",
       "6652      ...                                     6371.0   \n",
       "6653      ...                                     6371.0   \n",
       "\n",
       "     Barriers to Housing and Services Decile  Living Environment Rank  \\\n",
       "6625                                     5.0                  13455.0   \n",
       "6630                                     5.0                  16156.0   \n",
       "6650                                     5.0                   5426.0   \n",
       "6652                                     2.0                    214.0   \n",
       "6653                                     2.0                    214.0   \n",
       "\n",
       "      Living Environment Decile  IDACI Rank  IDACI Decile  IDACI Score  \\\n",
       "6625                        5.0     11285.0           4.0        0.216   \n",
       "6630                        5.0     21264.0           7.0        0.100   \n",
       "6650                        2.0      2509.0           1.0        0.411   \n",
       "6652                        1.0     15012.0           5.0        0.164   \n",
       "6653                        1.0     15012.0           5.0        0.164   \n",
       "\n",
       "      IDAOPI Rank  IDAOPI Decile  IDAOPI Score  \n",
       "6625       3053.0            1.0         0.376  \n",
       "6630      20376.0            7.0         0.116  \n",
       "6650       3363.0            2.0         0.366  \n",
       "6652        755.0            1.0         0.509  \n",
       "6653        755.0            1.0         0.509  \n",
       "\n",
       "[5 rows x 36 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Select only Southampton\n",
    "practice_imd_df_s= practice_imd_df[practice_imd_df['city'].str.contains('SOUTHAMPTON')]\n",
    "practice_imd_df_s.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>Index of Multiple Deprivation Rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6881</th>\n",
       "      <td>J82174</td>\n",
       "      <td>31994.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6769</th>\n",
       "      <td>J82064</td>\n",
       "      <td>31197.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6763</th>\n",
       "      <td>J82056</td>\n",
       "      <td>30992.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17861</th>\n",
       "      <td>Y05074</td>\n",
       "      <td>28736.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6757</th>\n",
       "      <td>Y01765</td>\n",
       "      <td>27568.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      practice  Index of Multiple Deprivation Rank\n",
       "6881    J82174                             31994.0\n",
       "6769    J82064                             31197.0\n",
       "6763    J82056                             30992.0\n",
       "17861   Y05074                             28736.0\n",
       "6757    Y01765                             27568.0"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Index of Multiple Deprivation for each GP-practice in Southampton\n",
    "imdperpractice_s= practice_imd_df_s.loc[:,['practice','Index of Multiple Deprivation Rank']]\n",
    "imdperpractice_s= imdperpractice_s.drop_duplicates(['practice','Index of Multiple Deprivation Rank'])\n",
    "imdperpractice_s= imdperpractice_s.sort_values('Index of Multiple Deprivation Rank',ascending=False)\n",
    "imdperpractice_s.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2549</th>\n",
       "      <td>E87723</td>\n",
       "      <td>998.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4151</th>\n",
       "      <td>H84608</td>\n",
       "      <td>2.308263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3540</th>\n",
       "      <td>G82651</td>\n",
       "      <td>2.060000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7650</th>\n",
       "      <td>Y04786</td>\n",
       "      <td>1.985886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>E81635</td>\n",
       "      <td>1.203671</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice  relativecosts\n",
       "2549   E87723     998.150000\n",
       "4151   H84608       2.308263\n",
       "3540   G82651       2.060000\n",
       "7650   Y04786       1.985886\n",
       "2010   E81635       1.203671"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Use the entire national dataset and identify the lowest relative spenders of statins from the first decile and the highest relative spenders of statins from the last decile. Now determine for all identified GP-practices for both groups (lowest and the highest) the associated Index of Multiple Deprivation (IMD). Use these two groups to assess whether the IMD-score differs. Use descriptive statistics for your answer.\n",
    "statins_relativecosts= statins_relativecosts.sort_values('relativecosts',ascending=False)\n",
    "statins_relativecosts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3617874224096951"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Highest relative spenders of statins\n",
    "#Top decile \n",
    "topthreshold= statins_relativecosts['relativecosts'].quantile(.90)\n",
    "topthreshold"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.12478754094090619"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Lower decile\n",
    "lowerthreshold= statins_relativecosts['relativecosts'].quantile(.10)\n",
    "lowerthreshold\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2549</th>\n",
       "      <td>E87723</td>\n",
       "      <td>998.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4151</th>\n",
       "      <td>H84608</td>\n",
       "      <td>2.308263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3540</th>\n",
       "      <td>G82651</td>\n",
       "      <td>2.060000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7650</th>\n",
       "      <td>Y04786</td>\n",
       "      <td>1.985886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>E81635</td>\n",
       "      <td>1.203671</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice  relativecosts\n",
       "2549   E87723     998.150000\n",
       "4151   H84608       2.308263\n",
       "3540   G82651       2.060000\n",
       "7650   Y04786       1.985886\n",
       "2010   E81635       1.203671"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Use the values obtained above (top decile and lower decile) to select the highest and lowest deciles\n",
    "#Highest decile\n",
    "topdecile= statins_relativecosts.loc[statins_relativecosts['relativecosts'] >= 0.3617874224096951]\n",
    "topdecile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>852</th>\n",
       "      <td>B86019</td>\n",
       "      <td>0.124762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4783</th>\n",
       "      <td>K82064</td>\n",
       "      <td>0.124712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>861</th>\n",
       "      <td>B86031</td>\n",
       "      <td>0.124667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2565</th>\n",
       "      <td>E87755</td>\n",
       "      <td>0.124626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1780</th>\n",
       "      <td>D82013</td>\n",
       "      <td>0.124583</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice  relativecosts\n",
       "852    B86019       0.124762\n",
       "4783   K82064       0.124712\n",
       "861    B86031       0.124667\n",
       "2565   E87755       0.124626\n",
       "1780   D82013       0.124583"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Lowest decile\n",
    "lowestdecile= statins_relativecosts.loc[statins_relativecosts['relativecosts'] <= 0.12478754094090619]\n",
    "lowestdecile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>Index of Multiple Deprivation Rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6812</th>\n",
       "      <td>J82099</td>\n",
       "      <td>32841.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15818</th>\n",
       "      <td>Y03405</td>\n",
       "      <td>32839.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7079</th>\n",
       "      <td>K81060</td>\n",
       "      <td>32837.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7192</th>\n",
       "      <td>K82047</td>\n",
       "      <td>32819.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12371</th>\n",
       "      <td>H81130</td>\n",
       "      <td>32807.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      practice  Index of Multiple Deprivation Rank\n",
       "6812    J82099                             32841.0\n",
       "15818   Y03405                             32839.0\n",
       "7079    K81060                             32837.0\n",
       "7192    K82047                             32819.0\n",
       "12371   H81130                             32807.0"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Index of Multiple Deprivation for all GP-practices\n",
    "imdperpractice= practice_imd_df.loc[:,['practice','Index of Multiple Deprivation Rank']]\n",
    "imdperpractice= imdperpractice.drop_duplicates(['practice','Index of Multiple Deprivation Rank'])\n",
    "imdperpractice= imdperpractice.sort_values('Index of Multiple Deprivation Rank',ascending=False)\n",
    "imdperpractice.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>Index of Multiple Deprivation Rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6827</th>\n",
       "      <td>J82116</td>\n",
       "      <td>32701.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1625</th>\n",
       "      <td>B86010</td>\n",
       "      <td>32639.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9985</th>\n",
       "      <td>N81018</td>\n",
       "      <td>32469.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5211</th>\n",
       "      <td>G82013</td>\n",
       "      <td>32306.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2180</th>\n",
       "      <td>C83031</td>\n",
       "      <td>32189.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice  Index of Multiple Deprivation Rank\n",
       "6827   J82116                             32701.0\n",
       "1625   B86010                             32639.0\n",
       "9985   N81018                             32469.0\n",
       "5211   G82013                             32306.0\n",
       "2180   C83031                             32189.0"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Find IMD of the top decile spenders practices\n",
    "m=topdecile.practice.unique().tolist()\n",
    "n=imdperpractice.practice.isin(m)\n",
    "mo=imdperpractice[n]\n",
    "mo.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>Index of Multiple Deprivation Rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7079</th>\n",
       "      <td>K81060</td>\n",
       "      <td>32837.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7108</th>\n",
       "      <td>K81092</td>\n",
       "      <td>32795.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7402</th>\n",
       "      <td>K84079</td>\n",
       "      <td>32749.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7597</th>\n",
       "      <td>L81632</td>\n",
       "      <td>32619.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15259</th>\n",
       "      <td>Y02379</td>\n",
       "      <td>32313.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      practice  Index of Multiple Deprivation Rank\n",
       "7079    K81060                             32837.0\n",
       "7108    K81092                             32795.0\n",
       "7402    K84079                             32749.0\n",
       "7597    L81632                             32619.0\n",
       "15259   Y02379                             32313.0"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Find IMD of the lowest decile spenders practices\n",
    "c=lowestdecile.practice.unique().tolist()\n",
    "v=imdperpractice.practice.isin(c)\n",
    "la=imdperpractice[v]\n",
    "la.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>768.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.764665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>36.001164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.361829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.388937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.423868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.486841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>998.150000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       relativecosts\n",
       "count     768.000000\n",
       "mean        1.764665\n",
       "std        36.001164\n",
       "min         0.361829\n",
       "25%         0.388937\n",
       "50%         0.423868\n",
       "75%         0.486841\n",
       "max       998.150000"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Descriptive statistics for the top decile\n",
    "topdecile.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>768.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.088580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.032740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.073019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.097779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.114465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.124762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       relativecosts\n",
       "count     768.000000\n",
       "mean        0.088580\n",
       "std         0.032740\n",
       "min         0.000501\n",
       "25%         0.073019\n",
       "50%         0.097779\n",
       "75%         0.114465\n",
       "max         0.124762"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Descriptive statistics for the lowest decile\n",
    "lowestdecile.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Do IMD scores differ between the highest and lowest spenders of statins? \n",
    "#Yes, the top decile mean is 1.76 (SD= 36.00) and the lowest decile mean is 0.089(SD=0.033).\n",
    "\n",
    "topdecile= topdecile.assign(Location=1)\n",
    "lowestdecile= lowestdecile.assign(Location=2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2549</th>\n",
       "      <td>998.150000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4151</th>\n",
       "      <td>2.308263</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3540</th>\n",
       "      <td>2.060000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7650</th>\n",
       "      <td>1.985886</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>1.203671</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts  Location\n",
       "2549     998.150000         1\n",
       "4151       2.308263         1\n",
       "3540       2.060000         1\n",
       "7650       1.985886         1\n",
       "2010       1.203671         1"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "topdecile_relative= topdecile.loc[:,['relativecosts', 'Location']]\n",
    "lowestdecile_relative= lowestdecile.loc[:,['relativecosts', 'Location']]\n",
    "topdecile_relative.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2549</th>\n",
       "      <td>998.150000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4151</th>\n",
       "      <td>2.308263</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3540</th>\n",
       "      <td>2.060000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7650</th>\n",
       "      <td>1.985886</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>1.203671</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts  Location\n",
       "2549     998.150000         1\n",
       "4151       2.308263         1\n",
       "3540       2.060000         1\n",
       "7650       1.985886         1\n",
       "2010       1.203671         1"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boxplotdeciles= pd.concat([topdecile_relative, lowestdecile_relative])\n",
    "boxplotdeciles.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2549</th>\n",
       "      <td>998.150000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4151</th>\n",
       "      <td>2.308263</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3540</th>\n",
       "      <td>2.060000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7650</th>\n",
       "      <td>1.985886</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>1.203671</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts  Location\n",
       "2549     998.150000         1\n",
       "4151       2.308263         1\n",
       "3540       2.060000         1\n",
       "7650       1.985886         1\n",
       "2010       1.203671         1"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Delete outliers\n",
    "sortedboxplotdeciles= boxplotdeciles.sort_values(by=['relativecosts'], ascending=False)\n",
    "sortedboxplotdeciles.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2142</th>\n",
       "      <td>0.712724</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647</th>\n",
       "      <td>0.706241</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3572</th>\n",
       "      <td>0.705864</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1507</th>\n",
       "      <td>0.703529</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>843</th>\n",
       "      <td>0.689738</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      relativecosts  Location\n",
       "2142       0.712724         1\n",
       "647        0.706241         1\n",
       "3572       0.705864         1\n",
       "1507       0.703529         1\n",
       "843        0.689738         1"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boxplotdecilesoutliers= sortedboxplotdeciles[30:-2]\n",
    "boxplotdecilesoutliers.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/martabatlle/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:57: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "  return getattr(obj, method)(*args, **kwds)\n",
      "/Users/martabatlle/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py:3239: UserWarning: Attempting to set identical bottom==top results\n",
      "in singular transformations; automatically expanding.\n",
      "bottom=0, top=0\n",
      "  'bottom=%s, top=%s') % (bottom, top))\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(-0.001, 0.001)"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nMzPL7b8Bisp23Y1MgMYAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10eeacac8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "boxd= boxplotdecilesoutliers.boxplot(column='relativecosts', by='Location', grid=False)\n",
    "boxd.set_xlabel(\"Location\",fontsize=12)\n",
    "boxd.set_ylabel(\"Relative costs\",fontsize=12)\n",
    "plt.suptitle(\"\")\n",
    "max_y = floor(boxplotdecilesoutliers.relativecosts.max())\n",
    "ax.set_ylim(0, max_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>period</th>\n",
       "      <th>practice</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 1HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81002</td>\n",
       "      <td>QUEENS PARK MEDICAL CENTRE</td>\n",
       "      <td>QUEENS PARK MEDICAL CTR</td>\n",
       "      <td>FARRER STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS18 2AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81003</td>\n",
       "      <td>VICTORIA MEDICAL PRACTICE</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>VICTORIA ROAD</td>\n",
       "      <td>HARTLEPOOL</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS26 8DB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81004</td>\n",
       "      <td>WOODLANDS ROAD SURGERY</td>\n",
       "      <td>6 WOODLANDS ROAD</td>\n",
       "      <td></td>\n",
       "      <td>MIDDLESBROUGH</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS1 3BE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81005</td>\n",
       "      <td>SPRINGWOOD SURGERY</td>\n",
       "      <td>SPRINGWOOD SURGERY</td>\n",
       "      <td>RECTORY LANE</td>\n",
       "      <td>GUISBOROUGH</td>\n",
       "      <td></td>\n",
       "      <td>TS14 7DJ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   period practice                              practicename  \\\n",
       "0  201512   A81001  THE DENSHAM SURGERY                        \n",
       "1  201512   A81002  QUEENS PARK MEDICAL CENTRE                 \n",
       "2  201512   A81003  VICTORIA MEDICAL PRACTICE                  \n",
       "3  201512   A81004  WOODLANDS ROAD SURGERY                     \n",
       "4  201512   A81005  SPRINGWOOD SURGERY                         \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  THE HEALTH CENTRE          LAWSON STREET               \n",
       "1  QUEENS PARK MEDICAL CTR    FARRER STREET               \n",
       "2  THE HEALTH CENTRE          VICTORIA ROAD               \n",
       "3  6 WOODLANDS ROAD                                       \n",
       "4  SPRINGWOOD SURGERY         RECTORY LANE                \n",
       "\n",
       "                        city                     county  \\\n",
       "0  STOCKTON ON TEES           CLEVELAND                   \n",
       "1  STOCKTON ON TEES           CLEVELAND                   \n",
       "2  HARTLEPOOL                 CLEVELAND                   \n",
       "3  MIDDLESBROUGH              CLEVELAND                   \n",
       "4  GUISBOROUGH                                            \n",
       "\n",
       "                    postcode  \n",
       "0  TS18 1HU                   \n",
       "1  TS18 2AW                   \n",
       "2  TS26 8DB                   \n",
       "3  TS1 3BE                    \n",
       "4  TS14 7DJ                   "
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Identify for all GP-practices the associated nine English regions. Identify for each region the associated 75 mortality rate for cardiovascular diseases for the year 2015.\n",
    "\n",
    "practicedataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>postcode</th>\n",
       "      <th>Postcode 2</th>\n",
       "      <th>Postcode 3</th>\n",
       "      <th>Date Introduced</th>\n",
       "      <th>User Type</th>\n",
       "      <th>Easting</th>\n",
       "      <th>Northing</th>\n",
       "      <th>Positional Quality</th>\n",
       "      <th>County Code</th>\n",
       "      <th>County Name</th>\n",
       "      <th>...</th>\n",
       "      <th>Middle Super Output Area Code</th>\n",
       "      <th>Middle Super Output Area Name</th>\n",
       "      <th>Output Area Classification Code</th>\n",
       "      <th>Output Area Classification Name</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Spatial Accuracy</th>\n",
       "      <th>Last Uploaded</th>\n",
       "      <th>Location</th>\n",
       "      <th>Socrata ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>S20 6RU</td>\n",
       "      <td>S20  6RU</td>\n",
       "      <td>S20 6RU</td>\n",
       "      <td>06-1997</td>\n",
       "      <td>0</td>\n",
       "      <td>441432.0</td>\n",
       "      <td>382852.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02001671</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6B3</td>\n",
       "      <td>Suburbanites;Semi-detached suburbia;Semi-detac...</td>\n",
       "      <td>-1.379193</td>\n",
       "      <td>53.340953</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.340953, -1.379193)</td>\n",
       "      <td>1311804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>TW4 7BD</td>\n",
       "      <td>TW4  7BD</td>\n",
       "      <td>TW4 7BD</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>512373.0</td>\n",
       "      <td>175453.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000541</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4B1</td>\n",
       "      <td>Multicultural metropolitans;Challenged Asian t...</td>\n",
       "      <td>-0.383652</td>\n",
       "      <td>51.466899</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.466899, -0.383652)</td>\n",
       "      <td>1630253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GU513ZQ</td>\n",
       "      <td>GU51 3ZQ</td>\n",
       "      <td>GU51 3ZQ</td>\n",
       "      <td>05-2003</td>\n",
       "      <td>1</td>\n",
       "      <td>481569.0</td>\n",
       "      <td>155037.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000014</td>\n",
       "      <td>Hampshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004757</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6B4</td>\n",
       "      <td>Suburbanites;Semi-detached suburbia;Older work...</td>\n",
       "      <td>-0.831674</td>\n",
       "      <td>51.288637</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.288637, -0.831674)</td>\n",
       "      <td>652126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>OX4 6BE</td>\n",
       "      <td>OX4  6BE</td>\n",
       "      <td>OX4 6BE</td>\n",
       "      <td>06-2000</td>\n",
       "      <td>0</td>\n",
       "      <td>455440.0</td>\n",
       "      <td>203036.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000025</td>\n",
       "      <td>Oxfordshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005956</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4A1</td>\n",
       "      <td>Multicultural metropolitans;Rented family livi...</td>\n",
       "      <td>-1.198788</td>\n",
       "      <td>51.723313</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.723313, -1.198788)</td>\n",
       "      <td>1158807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>TA7 9JH</td>\n",
       "      <td>TA7  9JH</td>\n",
       "      <td>TA7 9JH</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>338745.0</td>\n",
       "      <td>139337.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000027</td>\n",
       "      <td>Somerset</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006072</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1A2</td>\n",
       "      <td>Rural residents;Farming communities;Establishe...</td>\n",
       "      <td>-2.877144</td>\n",
       "      <td>51.149999</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.149999, -2.877144)</td>\n",
       "      <td>1547901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CO124PS</td>\n",
       "      <td>CO12 4PS</td>\n",
       "      <td>CO12 4PS</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>623480.0</td>\n",
       "      <td>231987.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000012</td>\n",
       "      <td>Essex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004574</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8A1</td>\n",
       "      <td>Hard-pressed living;Industrious communities;In...</td>\n",
       "      <td>1.250003</td>\n",
       "      <td>51.941475</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.941475, 1.250003)</td>\n",
       "      <td>326121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>G15 7DS</td>\n",
       "      <td>G15  7DS</td>\n",
       "      <td>G15 7DS</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>251920.0</td>\n",
       "      <td>671413.0</td>\n",
       "      <td>1</td>\n",
       "      <td>S99999999</td>\n",
       "      <td>(pseudo) Scotland</td>\n",
       "      <td>...</td>\n",
       "      <td>S02001976</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7C2</td>\n",
       "      <td>Constrained city dwellers;White communities;Co...</td>\n",
       "      <td>-4.370735</td>\n",
       "      <td>55.912955</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(55.912955, -4.370735)</td>\n",
       "      <td>584541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>LE4 4LU</td>\n",
       "      <td>LE4  4LU</td>\n",
       "      <td>LE4 4LU</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>459285.0</td>\n",
       "      <td>309986.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000018</td>\n",
       "      <td>Leicestershire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005364</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8A1</td>\n",
       "      <td>Hard-pressed living;Industrious communities;In...</td>\n",
       "      <td>-1.124441</td>\n",
       "      <td>52.684332</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.684332, -1.124441)</td>\n",
       "      <td>846727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>SG180BW</td>\n",
       "      <td>SG18 0BW</td>\n",
       "      <td>SG18 0BW</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>519092.0</td>\n",
       "      <td>245120.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02003603</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8D2</td>\n",
       "      <td>Hard-pressed living;Migration and churn;Hard-p...</td>\n",
       "      <td>-0.263092</td>\n",
       "      <td>52.091621</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.091621, -0.263092)</td>\n",
       "      <td>1387276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CM2 7FH</td>\n",
       "      <td>CM2  7FH</td>\n",
       "      <td>CM2 7FH</td>\n",
       "      <td>01-2008</td>\n",
       "      <td>0</td>\n",
       "      <td>571961.0</td>\n",
       "      <td>205620.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000012</td>\n",
       "      <td>Essex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004498</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A2</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>0.488242</td>\n",
       "      <td>51.722934</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.722934, 0.488242)</td>\n",
       "      <td>312757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CT119AA</td>\n",
       "      <td>CT11 9AA</td>\n",
       "      <td>CT11 9AA</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>1</td>\n",
       "      <td>638186.0</td>\n",
       "      <td>165007.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000016</td>\n",
       "      <td>Kent</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005147</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A1</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>1.418013</td>\n",
       "      <td>51.334232</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.334232, 1.418013)</td>\n",
       "      <td>346281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>OX277AA</td>\n",
       "      <td>OX27 7AA</td>\n",
       "      <td>OX27 7AA</td>\n",
       "      <td>03-2016</td>\n",
       "      <td>0</td>\n",
       "      <td>454209.0</td>\n",
       "      <td>225371.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000025</td>\n",
       "      <td>Oxfordshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005931</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B1</td>\n",
       "      <td>Rural residents;Rural tenants;Rural life</td>\n",
       "      <td>-1.213118</td>\n",
       "      <td>51.924228</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.924228, -1.213118)</td>\n",
       "      <td>1154352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>RM1 3HJ</td>\n",
       "      <td>RM1  3HJ</td>\n",
       "      <td>RM1 3HJ</td>\n",
       "      <td>07-2007</td>\n",
       "      <td>0</td>\n",
       "      <td>551503.0</td>\n",
       "      <td>189117.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000476</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2C1</td>\n",
       "      <td>Cosmopolitans;Comfortable cosmopolitan;Migrant...</td>\n",
       "      <td>0.185157</td>\n",
       "      <td>51.580556</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.580556, 0.185157)</td>\n",
       "      <td>1296400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>TA9 4AG</td>\n",
       "      <td>TA9  4AG</td>\n",
       "      <td>TA9 4AG</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>332699.0</td>\n",
       "      <td>146864.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000027</td>\n",
       "      <td>Somerset</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006065</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5A3</td>\n",
       "      <td>Urbanites;Urban professionals and families;Fam...</td>\n",
       "      <td>-2.964984</td>\n",
       "      <td>51.216991</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.216991, -2.964984)</td>\n",
       "      <td>1548670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>M3  1NG</td>\n",
       "      <td>M3   1NG</td>\n",
       "      <td>M3 1NG</td>\n",
       "      <td>04-2006</td>\n",
       "      <td>0</td>\n",
       "      <td>383772.0</td>\n",
       "      <td>398993.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006915</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2B2</td>\n",
       "      <td>Cosmopolitans;Inner city students;Multicultura...</td>\n",
       "      <td>-2.246035</td>\n",
       "      <td>53.487397</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.487397, -2.246035)</td>\n",
       "      <td>927077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>NR147UJ</td>\n",
       "      <td>NR14 7UJ</td>\n",
       "      <td>NR14 7UJ</td>\n",
       "      <td>12-1995</td>\n",
       "      <td>0</td>\n",
       "      <td>632211.0</td>\n",
       "      <td>304743.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000020</td>\n",
       "      <td>Norfolk</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005604</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B2</td>\n",
       "      <td>Rural residents;Rural tenants;Rural white-coll...</td>\n",
       "      <td>1.426820</td>\n",
       "      <td>52.590847</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.590847, 1.42682)</td>\n",
       "      <td>1097102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>NW4 3TT</td>\n",
       "      <td>NW4  3TT</td>\n",
       "      <td>NW4 3TT</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>522633.0</td>\n",
       "      <td>187861.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000062</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4B1</td>\n",
       "      <td>Multicultural metropolitans;Challenged Asian t...</td>\n",
       "      <td>-0.231705</td>\n",
       "      <td>51.576284</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.576284, -0.231705)</td>\n",
       "      <td>1124407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>S44 6SF</td>\n",
       "      <td>S44  6SF</td>\n",
       "      <td>S44 6SF</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>446738.0</td>\n",
       "      <td>371163.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000007</td>\n",
       "      <td>Derbyshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004048</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8A1</td>\n",
       "      <td>Hard-pressed living;Industrious communities;In...</td>\n",
       "      <td>-1.301224</td>\n",
       "      <td>53.235451</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.235451, -1.301224)</td>\n",
       "      <td>1320447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>TW184RJ</td>\n",
       "      <td>TW18 4RJ</td>\n",
       "      <td>TW18 4RJ</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>503725.0</td>\n",
       "      <td>171992.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000030</td>\n",
       "      <td>Surrey</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006406</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5A3</td>\n",
       "      <td>Urbanites;Urban professionals and families;Fam...</td>\n",
       "      <td>-0.509116</td>\n",
       "      <td>51.437439</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.437439, -0.509116)</td>\n",
       "      <td>1627501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>WA156UZ</td>\n",
       "      <td>WA15 6UZ</td>\n",
       "      <td>WA15 6UZ</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>379107.0</td>\n",
       "      <td>389325.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02001280</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8A1</td>\n",
       "      <td>Hard-pressed living;Industrious communities;In...</td>\n",
       "      <td>-2.315693</td>\n",
       "      <td>53.400332</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.400332, -2.315693)</td>\n",
       "      <td>1664808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>PR7 6LE</td>\n",
       "      <td>PR7  6LE</td>\n",
       "      <td>PR7 6LE</td>\n",
       "      <td>07-1986</td>\n",
       "      <td>0</td>\n",
       "      <td>355152.0</td>\n",
       "      <td>419416.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000017</td>\n",
       "      <td>Lancashire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005193</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5B3</td>\n",
       "      <td>Urbanites;Ageing urban living;Self-sufficient ...</td>\n",
       "      <td>-2.680276</td>\n",
       "      <td>53.669285</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.669285, -2.680276)</td>\n",
       "      <td>1255061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>SE187PZ</td>\n",
       "      <td>SE18 7PZ</td>\n",
       "      <td>SE18 7PZ</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>544774.0</td>\n",
       "      <td>178224.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000319</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4B1</td>\n",
       "      <td>Multicultural metropolitans;Challenged Asian t...</td>\n",
       "      <td>0.083638</td>\n",
       "      <td>51.484445</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.484445, 0.083638)</td>\n",
       "      <td>1371490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>BL1 3JE</td>\n",
       "      <td>BL1  3JE</td>\n",
       "      <td>BL1 3JE</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>370658.0</td>\n",
       "      <td>410734.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000994</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4B2</td>\n",
       "      <td>Multicultural metropolitans;Challenged Asian t...</td>\n",
       "      <td>-2.444772</td>\n",
       "      <td>53.592355</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.592355, -2.444772)</td>\n",
       "      <td>127148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>NP263ED</td>\n",
       "      <td>NP26 3ED</td>\n",
       "      <td>NP26 3ED</td>\n",
       "      <td>06-1999</td>\n",
       "      <td>0</td>\n",
       "      <td>343405.0</td>\n",
       "      <td>185940.0</td>\n",
       "      <td>1</td>\n",
       "      <td>W99999999</td>\n",
       "      <td>(pseudo) Wales</td>\n",
       "      <td>...</td>\n",
       "      <td>W02000346</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1A1</td>\n",
       "      <td>Rural residents;Farming communities;Rural work...</td>\n",
       "      <td>-2.817959</td>\n",
       "      <td>51.569477</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.569477, -2.817959)</td>\n",
       "      <td>1087985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>DH6 1EG</td>\n",
       "      <td>DH6  1EG</td>\n",
       "      <td>DH6 1EG</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>431991.0</td>\n",
       "      <td>542216.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004311</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8A1</td>\n",
       "      <td>Hard-pressed living;Industrious communities;In...</td>\n",
       "      <td>-1.504224</td>\n",
       "      <td>54.773849</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(54.773849, -1.504224)</td>\n",
       "      <td>433657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>CF3 0BG</td>\n",
       "      <td>CF3  0BG</td>\n",
       "      <td>CF3 0BG</td>\n",
       "      <td>09-1981</td>\n",
       "      <td>0</td>\n",
       "      <td>323293.0</td>\n",
       "      <td>180818.0</td>\n",
       "      <td>1</td>\n",
       "      <td>W99999999</td>\n",
       "      <td>(pseudo) Wales</td>\n",
       "      <td>...</td>\n",
       "      <td>W02000382</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A3</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>-3.106971</td>\n",
       "      <td>51.521050</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.52105, -3.106971)</td>\n",
       "      <td>269331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>PE285NW</td>\n",
       "      <td>PE28 5NW</td>\n",
       "      <td>PE28 5NW</td>\n",
       "      <td>06-2000</td>\n",
       "      <td>0</td>\n",
       "      <td>511711.0</td>\n",
       "      <td>282917.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000003</td>\n",
       "      <td>Cambridgeshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02003756</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B2</td>\n",
       "      <td>Rural residents;Rural tenants;Rural white-coll...</td>\n",
       "      <td>-0.358265</td>\n",
       "      <td>52.432843</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.432843, -0.358265)</td>\n",
       "      <td>1186640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>TN3 9PL</td>\n",
       "      <td>TN3  9PL</td>\n",
       "      <td>TN3 9PL</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>553285.0</td>\n",
       "      <td>135310.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000011</td>\n",
       "      <td>East Sussex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004404</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6A2</td>\n",
       "      <td>Suburbanites;Suburban achievers;Comfortable su...</td>\n",
       "      <td>0.187712</td>\n",
       "      <td>51.096614</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.096614, 0.187712)</td>\n",
       "      <td>1574267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>NN100BT</td>\n",
       "      <td>NN10 0BT</td>\n",
       "      <td>NN10 0BT</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>496391.0</td>\n",
       "      <td>267211.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000021</td>\n",
       "      <td>Northamptonshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005636</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8D2</td>\n",
       "      <td>Hard-pressed living;Migration and churn;Hard-p...</td>\n",
       "      <td>-0.588049</td>\n",
       "      <td>52.294582</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.294582, -0.588049)</td>\n",
       "      <td>1063496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>SY109EX</td>\n",
       "      <td>SY10 9EX</td>\n",
       "      <td>SY10 9EX</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>328414.0</td>\n",
       "      <td>326082.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006027</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1A1</td>\n",
       "      <td>Rural residents;Farming communities;Rural work...</td>\n",
       "      <td>-3.063888</td>\n",
       "      <td>52.827490</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.82749, -3.063888)</td>\n",
       "      <td>1524711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756159</th>\n",
       "      <td>EC1N8JJ</td>\n",
       "      <td>EC1N 8JJ</td>\n",
       "      <td>EC1N 8JJ</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>531261.0</td>\n",
       "      <td>181953.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000192</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3B3</td>\n",
       "      <td>Ethnicity central;Endeavouring ethnic mix;Mult...</td>\n",
       "      <td>-0.109470</td>\n",
       "      <td>51.521250</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.52125, -0.10947)</td>\n",
       "      <td>508568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756160</th>\n",
       "      <td>ML1 4PX</td>\n",
       "      <td>ML1  4PX</td>\n",
       "      <td>ML1 4PX</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>276745.0</td>\n",
       "      <td>660104.0</td>\n",
       "      <td>1</td>\n",
       "      <td>S99999999</td>\n",
       "      <td>(pseudo) Scotland</td>\n",
       "      <td>...</td>\n",
       "      <td>S02002160</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7C2</td>\n",
       "      <td>Constrained city dwellers;White communities;Co...</td>\n",
       "      <td>-3.968701</td>\n",
       "      <td>55.818408</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(55.818408, -3.968701)</td>\n",
       "      <td>974890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756161</th>\n",
       "      <td>EH4 4JZ</td>\n",
       "      <td>EH4  4JZ</td>\n",
       "      <td>EH4 4JZ</td>\n",
       "      <td>02-1994</td>\n",
       "      <td>0</td>\n",
       "      <td>322554.0</td>\n",
       "      <td>676444.0</td>\n",
       "      <td>1</td>\n",
       "      <td>S99999999</td>\n",
       "      <td>(pseudo) Scotland</td>\n",
       "      <td>...</td>\n",
       "      <td>S02001670</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8D3</td>\n",
       "      <td>Hard-pressed living;Migration and churn;Hard-P...</td>\n",
       "      <td>-3.242529</td>\n",
       "      <td>55.974715</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(55.974715, -3.242529)</td>\n",
       "      <td>525997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756162</th>\n",
       "      <td>S40 2JT</td>\n",
       "      <td>S40  2JT</td>\n",
       "      <td>S40 2JT</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>437646.0</td>\n",
       "      <td>369298.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000007</td>\n",
       "      <td>Derbyshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004067</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7C3</td>\n",
       "      <td>Constrained city dwellers;White communities;Ou...</td>\n",
       "      <td>-1.437651</td>\n",
       "      <td>53.219427</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.219427, -1.437651)</td>\n",
       "      <td>1316451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756163</th>\n",
       "      <td>LE5 1WT</td>\n",
       "      <td>LE5  1WT</td>\n",
       "      <td>LE5 1WT</td>\n",
       "      <td>04-2017</td>\n",
       "      <td>0</td>\n",
       "      <td>463836.0</td>\n",
       "      <td>306562.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006815</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4A1</td>\n",
       "      <td>Multicultural metropolitans;Rented family livi...</td>\n",
       "      <td>-1.057782</td>\n",
       "      <td>52.653058</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.653058, -1.057782)</td>\n",
       "      <td>848129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756164</th>\n",
       "      <td>SP5 3JA</td>\n",
       "      <td>SP5  3JA</td>\n",
       "      <td>SP5 3JA</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>416983.0</td>\n",
       "      <td>122020.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006677</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B2</td>\n",
       "      <td>Rural residents;Rural tenants;Rural white-coll...</td>\n",
       "      <td>-1.759358</td>\n",
       "      <td>50.997319</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(50.997319, -1.759358)</td>\n",
       "      <td>1464326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756165</th>\n",
       "      <td>GU170HJ</td>\n",
       "      <td>GU17 0HJ</td>\n",
       "      <td>GU17 0HJ</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>484566.0</td>\n",
       "      <td>160404.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000014</td>\n",
       "      <td>Hampshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004753</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8B1</td>\n",
       "      <td>Hard-pressed living;Challenged terraced worker...</td>\n",
       "      <td>-0.787435</td>\n",
       "      <td>51.336448</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.336448, -0.787435)</td>\n",
       "      <td>640085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756166</th>\n",
       "      <td>EX331LG</td>\n",
       "      <td>EX33 1LG</td>\n",
       "      <td>EX33 1LG</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>245169.0</td>\n",
       "      <td>137676.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000008</td>\n",
       "      <td>Devon</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004179</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1A3</td>\n",
       "      <td>Rural residents;Farming communities;Agricultur...</td>\n",
       "      <td>-4.213542</td>\n",
       "      <td>51.117396</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.117396, -4.213542)</td>\n",
       "      <td>558330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756167</th>\n",
       "      <td>BN273RN</td>\n",
       "      <td>BN27 3RN</td>\n",
       "      <td>BN27 3RN</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>552701.0</td>\n",
       "      <td>111498.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000011</td>\n",
       "      <td>East Sussex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004420</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6A3</td>\n",
       "      <td>Suburbanites;Suburban achievers;Detached retir...</td>\n",
       "      <td>0.169378</td>\n",
       "      <td>50.882801</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(50.882801, 0.169378)</td>\n",
       "      <td>151934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756168</th>\n",
       "      <td>SW153TJ</td>\n",
       "      <td>SW15 3TJ</td>\n",
       "      <td>SW15 3TJ</td>\n",
       "      <td>10-1985</td>\n",
       "      <td>0</td>\n",
       "      <td>522931.0</td>\n",
       "      <td>173469.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000938</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5A2</td>\n",
       "      <td>Urbanites;Urban professionals and families;Mul...</td>\n",
       "      <td>-0.232421</td>\n",
       "      <td>51.446876</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.446876, -0.232421)</td>\n",
       "      <td>1506463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756169</th>\n",
       "      <td>IP300RF</td>\n",
       "      <td>IP30 0RF</td>\n",
       "      <td>IP30 0RF</td>\n",
       "      <td>12-1997</td>\n",
       "      <td>0</td>\n",
       "      <td>597720.0</td>\n",
       "      <td>259011.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000029</td>\n",
       "      <td>Suffolk</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006266</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B2</td>\n",
       "      <td>Rural residents;Rural tenants;Rural white-coll...</td>\n",
       "      <td>0.891407</td>\n",
       "      <td>52.193872</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.193872, 0.891407)</td>\n",
       "      <td>743960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756170</th>\n",
       "      <td>GL543ER</td>\n",
       "      <td>GL54 3ER</td>\n",
       "      <td>GL54 3ER</td>\n",
       "      <td>06-1996</td>\n",
       "      <td>0</td>\n",
       "      <td>411403.0</td>\n",
       "      <td>214444.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000013</td>\n",
       "      <td>Gloucestershire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004619</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B2</td>\n",
       "      <td>Rural residents;Rural tenants;Rural white-coll...</td>\n",
       "      <td>-1.835938</td>\n",
       "      <td>51.828499</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.828499, -1.835938)</td>\n",
       "      <td>629367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756171</th>\n",
       "      <td>EX314BA</td>\n",
       "      <td>EX31 4BA</td>\n",
       "      <td>EX31 4BA</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>250705.0</td>\n",
       "      <td>134825.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000008</td>\n",
       "      <td>Devon</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004179</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5A3</td>\n",
       "      <td>Urbanites;Urban professionals and families;Fam...</td>\n",
       "      <td>-4.133350</td>\n",
       "      <td>51.093245</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.093245, -4.13335)</td>\n",
       "      <td>557139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756172</th>\n",
       "      <td>PO197PZ</td>\n",
       "      <td>PO19 7PZ</td>\n",
       "      <td>PO19 7PZ</td>\n",
       "      <td>06-2002</td>\n",
       "      <td>0</td>\n",
       "      <td>487335.0</td>\n",
       "      <td>104832.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000032</td>\n",
       "      <td>West Sussex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006570</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5A1</td>\n",
       "      <td>Urbanites;Urban professionals and families;Whi...</td>\n",
       "      <td>-0.761113</td>\n",
       "      <td>50.836439</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(50.836439, -0.761113)</td>\n",
       "      <td>1228972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756173</th>\n",
       "      <td>LL574HR</td>\n",
       "      <td>LL57 4HR</td>\n",
       "      <td>LL57 4HR</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>259576.0</td>\n",
       "      <td>371097.0</td>\n",
       "      <td>1</td>\n",
       "      <td>W99999999</td>\n",
       "      <td>(pseudo) Wales</td>\n",
       "      <td>...</td>\n",
       "      <td>W02000012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1C1</td>\n",
       "      <td>Rural residents;Ageing rural dwellers;Rural em...</td>\n",
       "      <td>-4.104586</td>\n",
       "      <td>53.218316</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.218316, -4.104586)</td>\n",
       "      <td>871523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756174</th>\n",
       "      <td>ST3 2LG</td>\n",
       "      <td>ST3  2LG</td>\n",
       "      <td>ST3 2LG</td>\n",
       "      <td>10-2008</td>\n",
       "      <td>0</td>\n",
       "      <td>390551.0</td>\n",
       "      <td>343535.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02002977</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A3</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>-2.142207</td>\n",
       "      <td>52.989064</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.989064, -2.142207)</td>\n",
       "      <td>1493849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756175</th>\n",
       "      <td>GU154PE</td>\n",
       "      <td>GU15 4PE</td>\n",
       "      <td>GU15 4PE</td>\n",
       "      <td>01-1992</td>\n",
       "      <td>0</td>\n",
       "      <td>486018.0</td>\n",
       "      <td>161107.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02003366</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4A2</td>\n",
       "      <td>Multicultural metropolitans;Rented family livi...</td>\n",
       "      <td>-0.766427</td>\n",
       "      <td>51.342550</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.34255, -0.766427)</td>\n",
       "      <td>639359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756176</th>\n",
       "      <td>CV227RN</td>\n",
       "      <td>CV22 7RN</td>\n",
       "      <td>CV22 7RN</td>\n",
       "      <td>10-1984</td>\n",
       "      <td>0</td>\n",
       "      <td>448688.0</td>\n",
       "      <td>273965.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000031</td>\n",
       "      <td>Warwickshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006502</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7D1</td>\n",
       "      <td>Constrained city dwellers;Ageing city dwellers...</td>\n",
       "      <td>-1.286450</td>\n",
       "      <td>52.361586</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.361586, -1.28645)</td>\n",
       "      <td>365119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756177</th>\n",
       "      <td>PL6 5AX</td>\n",
       "      <td>PL6  5AX</td>\n",
       "      <td>PL6 5AX</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>248621.0</td>\n",
       "      <td>58344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02003129</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6B2</td>\n",
       "      <td>Suburbanites;Semi-detached suburbia;White subu...</td>\n",
       "      <td>-4.131604</td>\n",
       "      <td>50.405420</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(50.40542, -4.131604)</td>\n",
       "      <td>1217789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756178</th>\n",
       "      <td>LU1 4EZ</td>\n",
       "      <td>LU1  4EZ</td>\n",
       "      <td>LU1 4EZ</td>\n",
       "      <td>06-1996</td>\n",
       "      <td>0</td>\n",
       "      <td>506163.0</td>\n",
       "      <td>218965.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02003651</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6B2</td>\n",
       "      <td>Suburbanites;Semi-detached suburbia;White subu...</td>\n",
       "      <td>-0.459813</td>\n",
       "      <td>51.859182</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.859182, -0.459813)</td>\n",
       "      <td>905603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756179</th>\n",
       "      <td>SA611BU</td>\n",
       "      <td>SA61 1BU</td>\n",
       "      <td>SA61 1BU</td>\n",
       "      <td>06-2000</td>\n",
       "      <td>1</td>\n",
       "      <td>194757.0</td>\n",
       "      <td>215208.0</td>\n",
       "      <td>1</td>\n",
       "      <td>W99999999</td>\n",
       "      <td>(pseudo) Wales</td>\n",
       "      <td>...</td>\n",
       "      <td>W02000131</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5B3</td>\n",
       "      <td>Urbanites;Ageing urban living;Self-sufficient ...</td>\n",
       "      <td>-4.977914</td>\n",
       "      <td>51.797758</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.797758, -4.977914)</td>\n",
       "      <td>1356632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756180</th>\n",
       "      <td>CB114EX</td>\n",
       "      <td>CB11 4EX</td>\n",
       "      <td>CB11 4EX</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>548341.0</td>\n",
       "      <td>234392.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000012</td>\n",
       "      <td>Essex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004593</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1B2</td>\n",
       "      <td>Rural residents;Rural tenants;Rural white-coll...</td>\n",
       "      <td>0.158920</td>\n",
       "      <td>51.988188</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.988188, 0.15892)</td>\n",
       "      <td>255140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756181</th>\n",
       "      <td>N19 3EU</td>\n",
       "      <td>N19  3EU</td>\n",
       "      <td>N19 3EU</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>529743.0</td>\n",
       "      <td>187113.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02000555</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3D1</td>\n",
       "      <td>Ethnicity central;Aspirational techies;New EU ...</td>\n",
       "      <td>-0.129410</td>\n",
       "      <td>51.567974</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.567974, -0.12941)</td>\n",
       "      <td>992426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756182</th>\n",
       "      <td>NG310DX</td>\n",
       "      <td>NG31 0DX</td>\n",
       "      <td>NG31 0DX</td>\n",
       "      <td>07-2008</td>\n",
       "      <td>1</td>\n",
       "      <td>491515.0</td>\n",
       "      <td>335558.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000019</td>\n",
       "      <td>Lincolnshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02005479</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A1</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>-0.640640</td>\n",
       "      <td>52.909668</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(52.909668, -0.64064)</td>\n",
       "      <td>1051623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756183</th>\n",
       "      <td>HP6 5HY</td>\n",
       "      <td>HP6  5HY</td>\n",
       "      <td>HP6 5HY</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>496348.0</td>\n",
       "      <td>198710.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000002</td>\n",
       "      <td>Buckinghamshire</td>\n",
       "      <td>...</td>\n",
       "      <td>E02003681</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5B1</td>\n",
       "      <td>Urbanites;Ageing urban living;Delayed retirement</td>\n",
       "      <td>-0.607900</td>\n",
       "      <td>51.678901</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.678901, -0.6079)</td>\n",
       "      <td>693107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756184</th>\n",
       "      <td>SN103SW</td>\n",
       "      <td>SN10 3SW</td>\n",
       "      <td>SN10 3SW</td>\n",
       "      <td>03-1988</td>\n",
       "      <td>0</td>\n",
       "      <td>401746.0</td>\n",
       "      <td>161341.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006637</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8A1</td>\n",
       "      <td>Hard-pressed living;Industrious communities;In...</td>\n",
       "      <td>-1.976315</td>\n",
       "      <td>51.351144</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.351144, -1.976315)</td>\n",
       "      <td>1427374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756185</th>\n",
       "      <td>M22 9XS</td>\n",
       "      <td>M22  9XS</td>\n",
       "      <td>M22 9XS</td>\n",
       "      <td>05-1994</td>\n",
       "      <td>0</td>\n",
       "      <td>383451.0</td>\n",
       "      <td>387853.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02001093</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A3</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>-2.250283</td>\n",
       "      <td>53.387256</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(53.387256, -2.250283)</td>\n",
       "      <td>920680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756186</th>\n",
       "      <td>TN364BQ</td>\n",
       "      <td>TN36 4BQ</td>\n",
       "      <td>TN36 4BQ</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>587631.0</td>\n",
       "      <td>116549.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000011</td>\n",
       "      <td>East Sussex</td>\n",
       "      <td>...</td>\n",
       "      <td>E02004395</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7C3</td>\n",
       "      <td>Constrained city dwellers;White communities;Ou...</td>\n",
       "      <td>0.668004</td>\n",
       "      <td>50.917895</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(50.917895, 0.668004)</td>\n",
       "      <td>1577103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756187</th>\n",
       "      <td>TA1 3DU</td>\n",
       "      <td>TA1  3DU</td>\n",
       "      <td>TA1 3DU</td>\n",
       "      <td>01-1980</td>\n",
       "      <td>0</td>\n",
       "      <td>323338.0</td>\n",
       "      <td>124119.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E10000027</td>\n",
       "      <td>Somerset</td>\n",
       "      <td>...</td>\n",
       "      <td>E02006108</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7A2</td>\n",
       "      <td>Constrained city dwellers;Challenged diversity...</td>\n",
       "      <td>-3.094147</td>\n",
       "      <td>51.011323</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(51.011323, -3.094147)</td>\n",
       "      <td>1537801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1756188</th>\n",
       "      <td>NE270RX</td>\n",
       "      <td>NE27 0RX</td>\n",
       "      <td>NE27 0RX</td>\n",
       "      <td>09-2005</td>\n",
       "      <td>0</td>\n",
       "      <td>430387.0</td>\n",
       "      <td>571841.0</td>\n",
       "      <td>1</td>\n",
       "      <td>E99999999</td>\n",
       "      <td>(pseudo) England (UA/MD/LB)</td>\n",
       "      <td>...</td>\n",
       "      <td>E02001744</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8C1</td>\n",
       "      <td>Hard-pressed living;Hard pressed ageing worker...</td>\n",
       "      <td>-1.526041</td>\n",
       "      <td>55.040158</td>\n",
       "      <td>Postcode Level</td>\n",
       "      <td>21/09/2017</td>\n",
       "      <td>(55.040158, -1.526041)</td>\n",
       "      <td>1011533</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1756189 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        postcode Postcode 2 Postcode 3 Date Introduced  User Type   Easting  \\\n",
       "0        S20 6RU   S20  6RU    S20 6RU         06-1997          0  441432.0   \n",
       "1        TW4 7BD   TW4  7BD    TW4 7BD         01-1980          0  512373.0   \n",
       "2        GU513ZQ   GU51 3ZQ   GU51 3ZQ         05-2003          1  481569.0   \n",
       "3        OX4 6BE   OX4  6BE    OX4 6BE         06-2000          0  455440.0   \n",
       "4        TA7 9JH   TA7  9JH    TA7 9JH         01-1980          0  338745.0   \n",
       "5        CO124PS   CO12 4PS   CO12 4PS         01-1980          0  623480.0   \n",
       "6        G15 7DS   G15  7DS    G15 7DS         01-1980          0  251920.0   \n",
       "7        LE4 4LU   LE4  4LU    LE4 4LU         01-1980          0  459285.0   \n",
       "8        SG180BW   SG18 0BW   SG18 0BW         01-1980          0  519092.0   \n",
       "9        CM2 7FH   CM2  7FH    CM2 7FH         01-2008          0  571961.0   \n",
       "10       CT119AA   CT11 9AA   CT11 9AA         01-1980          1  638186.0   \n",
       "11       OX277AA   OX27 7AA   OX27 7AA         03-2016          0  454209.0   \n",
       "12       RM1 3HJ   RM1  3HJ    RM1 3HJ         07-2007          0  551503.0   \n",
       "13       TA9 4AG   TA9  4AG    TA9 4AG         01-1980          0  332699.0   \n",
       "14       M3  1NG   M3   1NG     M3 1NG         04-2006          0  383772.0   \n",
       "15       NR147UJ   NR14 7UJ   NR14 7UJ         12-1995          0  632211.0   \n",
       "16       NW4 3TT   NW4  3TT    NW4 3TT         01-1980          0  522633.0   \n",
       "17       S44 6SF   S44  6SF    S44 6SF         01-1980          0  446738.0   \n",
       "18       TW184RJ   TW18 4RJ   TW18 4RJ         01-1980          0  503725.0   \n",
       "19       WA156UZ   WA15 6UZ   WA15 6UZ         01-1980          0  379107.0   \n",
       "20       PR7 6LE   PR7  6LE    PR7 6LE         07-1986          0  355152.0   \n",
       "21       SE187PZ   SE18 7PZ   SE18 7PZ         01-1980          0  544774.0   \n",
       "22       BL1 3JE   BL1  3JE    BL1 3JE         01-1980          0  370658.0   \n",
       "23       NP263ED   NP26 3ED   NP26 3ED         06-1999          0  343405.0   \n",
       "24       DH6 1EG   DH6  1EG    DH6 1EG         01-1980          0  431991.0   \n",
       "25       CF3 0BG   CF3  0BG    CF3 0BG         09-1981          0  323293.0   \n",
       "26       PE285NW   PE28 5NW   PE28 5NW         06-2000          0  511711.0   \n",
       "27       TN3 9PL   TN3  9PL    TN3 9PL         01-1980          0  553285.0   \n",
       "28       NN100BT   NN10 0BT   NN10 0BT         01-1980          0  496391.0   \n",
       "29       SY109EX   SY10 9EX   SY10 9EX         01-1980          0  328414.0   \n",
       "...          ...        ...        ...             ...        ...       ...   \n",
       "1756159  EC1N8JJ   EC1N 8JJ   EC1N 8JJ         01-1980          0  531261.0   \n",
       "1756160  ML1 4PX   ML1  4PX    ML1 4PX         01-1980          0  276745.0   \n",
       "1756161  EH4 4JZ   EH4  4JZ    EH4 4JZ         02-1994          0  322554.0   \n",
       "1756162  S40 2JT   S40  2JT    S40 2JT         01-1980          0  437646.0   \n",
       "1756163  LE5 1WT   LE5  1WT    LE5 1WT         04-2017          0  463836.0   \n",
       "1756164  SP5 3JA   SP5  3JA    SP5 3JA         01-1980          0  416983.0   \n",
       "1756165  GU170HJ   GU17 0HJ   GU17 0HJ         01-1980          0  484566.0   \n",
       "1756166  EX331LG   EX33 1LG   EX33 1LG         01-1980          0  245169.0   \n",
       "1756167  BN273RN   BN27 3RN   BN27 3RN         01-1980          0  552701.0   \n",
       "1756168  SW153TJ   SW15 3TJ   SW15 3TJ         10-1985          0  522931.0   \n",
       "1756169  IP300RF   IP30 0RF   IP30 0RF         12-1997          0  597720.0   \n",
       "1756170  GL543ER   GL54 3ER   GL54 3ER         06-1996          0  411403.0   \n",
       "1756171  EX314BA   EX31 4BA   EX31 4BA         01-1980          0  250705.0   \n",
       "1756172  PO197PZ   PO19 7PZ   PO19 7PZ         06-2002          0  487335.0   \n",
       "1756173  LL574HR   LL57 4HR   LL57 4HR         01-1980          0  259576.0   \n",
       "1756174  ST3 2LG   ST3  2LG    ST3 2LG         10-2008          0  390551.0   \n",
       "1756175  GU154PE   GU15 4PE   GU15 4PE         01-1992          0  486018.0   \n",
       "1756176  CV227RN   CV22 7RN   CV22 7RN         10-1984          0  448688.0   \n",
       "1756177  PL6 5AX   PL6  5AX    PL6 5AX         01-1980          0  248621.0   \n",
       "1756178  LU1 4EZ   LU1  4EZ    LU1 4EZ         06-1996          0  506163.0   \n",
       "1756179  SA611BU   SA61 1BU   SA61 1BU         06-2000          1  194757.0   \n",
       "1756180  CB114EX   CB11 4EX   CB11 4EX         01-1980          0  548341.0   \n",
       "1756181  N19 3EU   N19  3EU    N19 3EU         01-1980          0  529743.0   \n",
       "1756182  NG310DX   NG31 0DX   NG31 0DX         07-2008          1  491515.0   \n",
       "1756183  HP6 5HY   HP6  5HY    HP6 5HY         01-1980          0  496348.0   \n",
       "1756184  SN103SW   SN10 3SW   SN10 3SW         03-1988          0  401746.0   \n",
       "1756185  M22 9XS   M22  9XS    M22 9XS         05-1994          0  383451.0   \n",
       "1756186  TN364BQ   TN36 4BQ   TN36 4BQ         01-1980          0  587631.0   \n",
       "1756187  TA1 3DU   TA1  3DU    TA1 3DU         01-1980          0  323338.0   \n",
       "1756188  NE270RX   NE27 0RX   NE27 0RX         09-2005          0  430387.0   \n",
       "\n",
       "         Northing  Positional Quality County Code  \\\n",
       "0        382852.0                   1   E99999999   \n",
       "1        175453.0                   1   E99999999   \n",
       "2        155037.0                   1   E10000014   \n",
       "3        203036.0                   1   E10000025   \n",
       "4        139337.0                   1   E10000027   \n",
       "5        231987.0                   1   E10000012   \n",
       "6        671413.0                   1   S99999999   \n",
       "7        309986.0                   1   E10000018   \n",
       "8        245120.0                   1   E99999999   \n",
       "9        205620.0                   1   E10000012   \n",
       "10       165007.0                   1   E10000016   \n",
       "11       225371.0                   1   E10000025   \n",
       "12       189117.0                   1   E99999999   \n",
       "13       146864.0                   1   E10000027   \n",
       "14       398993.0                   1   E99999999   \n",
       "15       304743.0                   1   E10000020   \n",
       "16       187861.0                   1   E99999999   \n",
       "17       371163.0                   1   E10000007   \n",
       "18       171992.0                   1   E10000030   \n",
       "19       389325.0                   1   E99999999   \n",
       "20       419416.0                   1   E10000017   \n",
       "21       178224.0                   1   E99999999   \n",
       "22       410734.0                   1   E99999999   \n",
       "23       185940.0                   1   W99999999   \n",
       "24       542216.0                   1   E99999999   \n",
       "25       180818.0                   1   W99999999   \n",
       "26       282917.0                   1   E10000003   \n",
       "27       135310.0                   1   E10000011   \n",
       "28       267211.0                   1   E10000021   \n",
       "29       326082.0                   1   E99999999   \n",
       "...           ...                 ...         ...   \n",
       "1756159  181953.0                   1   E99999999   \n",
       "1756160  660104.0                   1   S99999999   \n",
       "1756161  676444.0                   1   S99999999   \n",
       "1756162  369298.0                   1   E10000007   \n",
       "1756163  306562.0                   1   E99999999   \n",
       "1756164  122020.0                   1   E99999999   \n",
       "1756165  160404.0                   1   E10000014   \n",
       "1756166  137676.0                   1   E10000008   \n",
       "1756167  111498.0                   1   E10000011   \n",
       "1756168  173469.0                   1   E99999999   \n",
       "1756169  259011.0                   1   E10000029   \n",
       "1756170  214444.0                   1   E10000013   \n",
       "1756171  134825.0                   1   E10000008   \n",
       "1756172  104832.0                   1   E10000032   \n",
       "1756173  371097.0                   1   W99999999   \n",
       "1756174  343535.0                   1   E99999999   \n",
       "1756175  161107.0                   1   E99999999   \n",
       "1756176  273965.0                   1   E10000031   \n",
       "1756177   58344.0                   1   E99999999   \n",
       "1756178  218965.0                   1   E99999999   \n",
       "1756179  215208.0                   1   W99999999   \n",
       "1756180  234392.0                   1   E10000012   \n",
       "1756181  187113.0                   1   E99999999   \n",
       "1756182  335558.0                   1   E10000019   \n",
       "1756183  198710.0                   1   E10000002   \n",
       "1756184  161341.0                   1   E99999999   \n",
       "1756185  387853.0                   1   E99999999   \n",
       "1756186  116549.0                   1   E10000011   \n",
       "1756187  124119.0                   1   E10000027   \n",
       "1756188  571841.0                   1   E99999999   \n",
       "\n",
       "                         County Name    ...     Middle Super Output Area Code  \\\n",
       "0        (pseudo) England (UA/MD/LB)    ...                         E02001671   \n",
       "1        (pseudo) England (UA/MD/LB)    ...                         E02000541   \n",
       "2                          Hampshire    ...                         E02004757   \n",
       "3                        Oxfordshire    ...                         E02005956   \n",
       "4                           Somerset    ...                         E02006072   \n",
       "5                              Essex    ...                         E02004574   \n",
       "6                  (pseudo) Scotland    ...                         S02001976   \n",
       "7                     Leicestershire    ...                         E02005364   \n",
       "8        (pseudo) England (UA/MD/LB)    ...                         E02003603   \n",
       "9                              Essex    ...                         E02004498   \n",
       "10                              Kent    ...                         E02005147   \n",
       "11                       Oxfordshire    ...                         E02005931   \n",
       "12       (pseudo) England (UA/MD/LB)    ...                         E02000476   \n",
       "13                          Somerset    ...                         E02006065   \n",
       "14       (pseudo) England (UA/MD/LB)    ...                         E02006915   \n",
       "15                           Norfolk    ...                         E02005604   \n",
       "16       (pseudo) England (UA/MD/LB)    ...                         E02000062   \n",
       "17                        Derbyshire    ...                         E02004048   \n",
       "18                            Surrey    ...                         E02006406   \n",
       "19       (pseudo) England (UA/MD/LB)    ...                         E02001280   \n",
       "20                        Lancashire    ...                         E02005193   \n",
       "21       (pseudo) England (UA/MD/LB)    ...                         E02000319   \n",
       "22       (pseudo) England (UA/MD/LB)    ...                         E02000994   \n",
       "23                    (pseudo) Wales    ...                         W02000346   \n",
       "24       (pseudo) England (UA/MD/LB)    ...                         E02004311   \n",
       "25                    (pseudo) Wales    ...                         W02000382   \n",
       "26                    Cambridgeshire    ...                         E02003756   \n",
       "27                       East Sussex    ...                         E02004404   \n",
       "28                  Northamptonshire    ...                         E02005636   \n",
       "29       (pseudo) England (UA/MD/LB)    ...                         E02006027   \n",
       "...                              ...    ...                               ...   \n",
       "1756159  (pseudo) England (UA/MD/LB)    ...                         E02000192   \n",
       "1756160            (pseudo) Scotland    ...                         S02002160   \n",
       "1756161            (pseudo) Scotland    ...                         S02001670   \n",
       "1756162                   Derbyshire    ...                         E02004067   \n",
       "1756163  (pseudo) England (UA/MD/LB)    ...                         E02006815   \n",
       "1756164  (pseudo) England (UA/MD/LB)    ...                         E02006677   \n",
       "1756165                    Hampshire    ...                         E02004753   \n",
       "1756166                        Devon    ...                         E02004179   \n",
       "1756167                  East Sussex    ...                         E02004420   \n",
       "1756168  (pseudo) England (UA/MD/LB)    ...                         E02000938   \n",
       "1756169                      Suffolk    ...                         E02006266   \n",
       "1756170              Gloucestershire    ...                         E02004619   \n",
       "1756171                        Devon    ...                         E02004179   \n",
       "1756172                  West Sussex    ...                         E02006570   \n",
       "1756173               (pseudo) Wales    ...                         W02000012   \n",
       "1756174  (pseudo) England (UA/MD/LB)    ...                         E02002977   \n",
       "1756175  (pseudo) England (UA/MD/LB)    ...                         E02003366   \n",
       "1756176                 Warwickshire    ...                         E02006502   \n",
       "1756177  (pseudo) England (UA/MD/LB)    ...                         E02003129   \n",
       "1756178  (pseudo) England (UA/MD/LB)    ...                         E02003651   \n",
       "1756179               (pseudo) Wales    ...                         W02000131   \n",
       "1756180                        Essex    ...                         E02004593   \n",
       "1756181  (pseudo) England (UA/MD/LB)    ...                         E02000555   \n",
       "1756182                 Lincolnshire    ...                         E02005479   \n",
       "1756183              Buckinghamshire    ...                         E02003681   \n",
       "1756184  (pseudo) England (UA/MD/LB)    ...                         E02006637   \n",
       "1756185  (pseudo) England (UA/MD/LB)    ...                         E02001093   \n",
       "1756186                  East Sussex    ...                         E02004395   \n",
       "1756187                     Somerset    ...                         E02006108   \n",
       "1756188  (pseudo) England (UA/MD/LB)    ...                         E02001744   \n",
       "\n",
       "        Middle Super Output Area Name Output Area Classification Code  \\\n",
       "0                                 NaN                             6B3   \n",
       "1                                 NaN                             4B1   \n",
       "2                                 NaN                             6B4   \n",
       "3                                 NaN                             4A1   \n",
       "4                                 NaN                             1A2   \n",
       "5                                 NaN                             8A1   \n",
       "6                                 NaN                             7C2   \n",
       "7                                 NaN                             8A1   \n",
       "8                                 NaN                             8D2   \n",
       "9                                 NaN                             7A2   \n",
       "10                                NaN                             7A1   \n",
       "11                                NaN                             1B1   \n",
       "12                                NaN                             2C1   \n",
       "13                                NaN                             5A3   \n",
       "14                                NaN                             2B2   \n",
       "15                                NaN                             1B2   \n",
       "16                                NaN                             4B1   \n",
       "17                                NaN                             8A1   \n",
       "18                                NaN                             5A3   \n",
       "19                                NaN                             8A1   \n",
       "20                                NaN                             5B3   \n",
       "21                                NaN                             4B1   \n",
       "22                                NaN                             4B2   \n",
       "23                                NaN                             1A1   \n",
       "24                                NaN                             8A1   \n",
       "25                                NaN                             7A3   \n",
       "26                                NaN                             1B2   \n",
       "27                                NaN                             6A2   \n",
       "28                                NaN                             8D2   \n",
       "29                                NaN                             1A1   \n",
       "...                               ...                             ...   \n",
       "1756159                           NaN                             3B3   \n",
       "1756160                           NaN                             7C2   \n",
       "1756161                           NaN                             8D3   \n",
       "1756162                           NaN                             7C3   \n",
       "1756163                           NaN                             4A1   \n",
       "1756164                           NaN                             1B2   \n",
       "1756165                           NaN                             8B1   \n",
       "1756166                           NaN                             1A3   \n",
       "1756167                           NaN                             6A3   \n",
       "1756168                           NaN                             5A2   \n",
       "1756169                           NaN                             1B2   \n",
       "1756170                           NaN                             1B2   \n",
       "1756171                           NaN                             5A3   \n",
       "1756172                           NaN                             5A1   \n",
       "1756173                           NaN                             1C1   \n",
       "1756174                           NaN                             7A3   \n",
       "1756175                           NaN                             4A2   \n",
       "1756176                           NaN                             7D1   \n",
       "1756177                           NaN                             6B2   \n",
       "1756178                           NaN                             6B2   \n",
       "1756179                           NaN                             5B3   \n",
       "1756180                           NaN                             1B2   \n",
       "1756181                           NaN                             3D1   \n",
       "1756182                           NaN                             7A1   \n",
       "1756183                           NaN                             5B1   \n",
       "1756184                           NaN                             8A1   \n",
       "1756185                           NaN                             7A3   \n",
       "1756186                           NaN                             7C3   \n",
       "1756187                           NaN                             7A2   \n",
       "1756188                           NaN                             8C1   \n",
       "\n",
       "                           Output Area Classification Name Longitude  \\\n",
       "0        Suburbanites;Semi-detached suburbia;Semi-detac... -1.379193   \n",
       "1        Multicultural metropolitans;Challenged Asian t... -0.383652   \n",
       "2        Suburbanites;Semi-detached suburbia;Older work... -0.831674   \n",
       "3        Multicultural metropolitans;Rented family livi... -1.198788   \n",
       "4        Rural residents;Farming communities;Establishe... -2.877144   \n",
       "5        Hard-pressed living;Industrious communities;In...  1.250003   \n",
       "6        Constrained city dwellers;White communities;Co... -4.370735   \n",
       "7        Hard-pressed living;Industrious communities;In... -1.124441   \n",
       "8        Hard-pressed living;Migration and churn;Hard-p... -0.263092   \n",
       "9        Constrained city dwellers;Challenged diversity...  0.488242   \n",
       "10       Constrained city dwellers;Challenged diversity...  1.418013   \n",
       "11                Rural residents;Rural tenants;Rural life -1.213118   \n",
       "12       Cosmopolitans;Comfortable cosmopolitan;Migrant...  0.185157   \n",
       "13       Urbanites;Urban professionals and families;Fam... -2.964984   \n",
       "14       Cosmopolitans;Inner city students;Multicultura... -2.246035   \n",
       "15       Rural residents;Rural tenants;Rural white-coll...  1.426820   \n",
       "16       Multicultural metropolitans;Challenged Asian t... -0.231705   \n",
       "17       Hard-pressed living;Industrious communities;In... -1.301224   \n",
       "18       Urbanites;Urban professionals and families;Fam... -0.509116   \n",
       "19       Hard-pressed living;Industrious communities;In... -2.315693   \n",
       "20       Urbanites;Ageing urban living;Self-sufficient ... -2.680276   \n",
       "21       Multicultural metropolitans;Challenged Asian t...  0.083638   \n",
       "22       Multicultural metropolitans;Challenged Asian t... -2.444772   \n",
       "23       Rural residents;Farming communities;Rural work... -2.817959   \n",
       "24       Hard-pressed living;Industrious communities;In... -1.504224   \n",
       "25       Constrained city dwellers;Challenged diversity... -3.106971   \n",
       "26       Rural residents;Rural tenants;Rural white-coll... -0.358265   \n",
       "27       Suburbanites;Suburban achievers;Comfortable su...  0.187712   \n",
       "28       Hard-pressed living;Migration and churn;Hard-p... -0.588049   \n",
       "29       Rural residents;Farming communities;Rural work... -3.063888   \n",
       "...                                                    ...       ...   \n",
       "1756159  Ethnicity central;Endeavouring ethnic mix;Mult... -0.109470   \n",
       "1756160  Constrained city dwellers;White communities;Co... -3.968701   \n",
       "1756161  Hard-pressed living;Migration and churn;Hard-P... -3.242529   \n",
       "1756162  Constrained city dwellers;White communities;Ou... -1.437651   \n",
       "1756163  Multicultural metropolitans;Rented family livi... -1.057782   \n",
       "1756164  Rural residents;Rural tenants;Rural white-coll... -1.759358   \n",
       "1756165  Hard-pressed living;Challenged terraced worker... -0.787435   \n",
       "1756166  Rural residents;Farming communities;Agricultur... -4.213542   \n",
       "1756167  Suburbanites;Suburban achievers;Detached retir...  0.169378   \n",
       "1756168  Urbanites;Urban professionals and families;Mul... -0.232421   \n",
       "1756169  Rural residents;Rural tenants;Rural white-coll...  0.891407   \n",
       "1756170  Rural residents;Rural tenants;Rural white-coll... -1.835938   \n",
       "1756171  Urbanites;Urban professionals and families;Fam... -4.133350   \n",
       "1756172  Urbanites;Urban professionals and families;Whi... -0.761113   \n",
       "1756173  Rural residents;Ageing rural dwellers;Rural em... -4.104586   \n",
       "1756174  Constrained city dwellers;Challenged diversity... -2.142207   \n",
       "1756175  Multicultural metropolitans;Rented family livi... -0.766427   \n",
       "1756176  Constrained city dwellers;Ageing city dwellers... -1.286450   \n",
       "1756177  Suburbanites;Semi-detached suburbia;White subu... -4.131604   \n",
       "1756178  Suburbanites;Semi-detached suburbia;White subu... -0.459813   \n",
       "1756179  Urbanites;Ageing urban living;Self-sufficient ... -4.977914   \n",
       "1756180  Rural residents;Rural tenants;Rural white-coll...  0.158920   \n",
       "1756181  Ethnicity central;Aspirational techies;New EU ... -0.129410   \n",
       "1756182  Constrained city dwellers;Challenged diversity... -0.640640   \n",
       "1756183   Urbanites;Ageing urban living;Delayed retirement -0.607900   \n",
       "1756184  Hard-pressed living;Industrious communities;In... -1.976315   \n",
       "1756185  Constrained city dwellers;Challenged diversity... -2.250283   \n",
       "1756186  Constrained city dwellers;White communities;Ou...  0.668004   \n",
       "1756187  Constrained city dwellers;Challenged diversity... -3.094147   \n",
       "1756188  Hard-pressed living;Hard pressed ageing worker... -1.526041   \n",
       "\n",
       "          Latitude Spatial Accuracy Last Uploaded                Location  \\\n",
       "0        53.340953   Postcode Level    21/09/2017  (53.340953, -1.379193)   \n",
       "1        51.466899   Postcode Level    21/09/2017  (51.466899, -0.383652)   \n",
       "2        51.288637   Postcode Level    21/09/2017  (51.288637, -0.831674)   \n",
       "3        51.723313   Postcode Level    21/09/2017  (51.723313, -1.198788)   \n",
       "4        51.149999   Postcode Level    21/09/2017  (51.149999, -2.877144)   \n",
       "5        51.941475   Postcode Level    21/09/2017   (51.941475, 1.250003)   \n",
       "6        55.912955   Postcode Level    21/09/2017  (55.912955, -4.370735)   \n",
       "7        52.684332   Postcode Level    21/09/2017  (52.684332, -1.124441)   \n",
       "8        52.091621   Postcode Level    21/09/2017  (52.091621, -0.263092)   \n",
       "9        51.722934   Postcode Level    21/09/2017   (51.722934, 0.488242)   \n",
       "10       51.334232   Postcode Level    21/09/2017   (51.334232, 1.418013)   \n",
       "11       51.924228   Postcode Level    21/09/2017  (51.924228, -1.213118)   \n",
       "12       51.580556   Postcode Level    21/09/2017   (51.580556, 0.185157)   \n",
       "13       51.216991   Postcode Level    21/09/2017  (51.216991, -2.964984)   \n",
       "14       53.487397   Postcode Level    21/09/2017  (53.487397, -2.246035)   \n",
       "15       52.590847   Postcode Level    21/09/2017    (52.590847, 1.42682)   \n",
       "16       51.576284   Postcode Level    21/09/2017  (51.576284, -0.231705)   \n",
       "17       53.235451   Postcode Level    21/09/2017  (53.235451, -1.301224)   \n",
       "18       51.437439   Postcode Level    21/09/2017  (51.437439, -0.509116)   \n",
       "19       53.400332   Postcode Level    21/09/2017  (53.400332, -2.315693)   \n",
       "20       53.669285   Postcode Level    21/09/2017  (53.669285, -2.680276)   \n",
       "21       51.484445   Postcode Level    21/09/2017   (51.484445, 0.083638)   \n",
       "22       53.592355   Postcode Level    21/09/2017  (53.592355, -2.444772)   \n",
       "23       51.569477   Postcode Level    21/09/2017  (51.569477, -2.817959)   \n",
       "24       54.773849   Postcode Level    21/09/2017  (54.773849, -1.504224)   \n",
       "25       51.521050   Postcode Level    21/09/2017   (51.52105, -3.106971)   \n",
       "26       52.432843   Postcode Level    21/09/2017  (52.432843, -0.358265)   \n",
       "27       51.096614   Postcode Level    21/09/2017   (51.096614, 0.187712)   \n",
       "28       52.294582   Postcode Level    21/09/2017  (52.294582, -0.588049)   \n",
       "29       52.827490   Postcode Level    21/09/2017   (52.82749, -3.063888)   \n",
       "...            ...              ...           ...                     ...   \n",
       "1756159  51.521250   Postcode Level    21/09/2017    (51.52125, -0.10947)   \n",
       "1756160  55.818408   Postcode Level    21/09/2017  (55.818408, -3.968701)   \n",
       "1756161  55.974715   Postcode Level    21/09/2017  (55.974715, -3.242529)   \n",
       "1756162  53.219427   Postcode Level    21/09/2017  (53.219427, -1.437651)   \n",
       "1756163  52.653058   Postcode Level    21/09/2017  (52.653058, -1.057782)   \n",
       "1756164  50.997319   Postcode Level    21/09/2017  (50.997319, -1.759358)   \n",
       "1756165  51.336448   Postcode Level    21/09/2017  (51.336448, -0.787435)   \n",
       "1756166  51.117396   Postcode Level    21/09/2017  (51.117396, -4.213542)   \n",
       "1756167  50.882801   Postcode Level    21/09/2017   (50.882801, 0.169378)   \n",
       "1756168  51.446876   Postcode Level    21/09/2017  (51.446876, -0.232421)   \n",
       "1756169  52.193872   Postcode Level    21/09/2017   (52.193872, 0.891407)   \n",
       "1756170  51.828499   Postcode Level    21/09/2017  (51.828499, -1.835938)   \n",
       "1756171  51.093245   Postcode Level    21/09/2017   (51.093245, -4.13335)   \n",
       "1756172  50.836439   Postcode Level    21/09/2017  (50.836439, -0.761113)   \n",
       "1756173  53.218316   Postcode Level    21/09/2017  (53.218316, -4.104586)   \n",
       "1756174  52.989064   Postcode Level    21/09/2017  (52.989064, -2.142207)   \n",
       "1756175  51.342550   Postcode Level    21/09/2017   (51.34255, -0.766427)   \n",
       "1756176  52.361586   Postcode Level    21/09/2017   (52.361586, -1.28645)   \n",
       "1756177  50.405420   Postcode Level    21/09/2017   (50.40542, -4.131604)   \n",
       "1756178  51.859182   Postcode Level    21/09/2017  (51.859182, -0.459813)   \n",
       "1756179  51.797758   Postcode Level    21/09/2017  (51.797758, -4.977914)   \n",
       "1756180  51.988188   Postcode Level    21/09/2017    (51.988188, 0.15892)   \n",
       "1756181  51.567974   Postcode Level    21/09/2017   (51.567974, -0.12941)   \n",
       "1756182  52.909668   Postcode Level    21/09/2017   (52.909668, -0.64064)   \n",
       "1756183  51.678901   Postcode Level    21/09/2017    (51.678901, -0.6079)   \n",
       "1756184  51.351144   Postcode Level    21/09/2017  (51.351144, -1.976315)   \n",
       "1756185  53.387256   Postcode Level    21/09/2017  (53.387256, -2.250283)   \n",
       "1756186  50.917895   Postcode Level    21/09/2017   (50.917895, 0.668004)   \n",
       "1756187  51.011323   Postcode Level    21/09/2017  (51.011323, -3.094147)   \n",
       "1756188  55.040158   Postcode Level    21/09/2017  (55.040158, -1.526041)   \n",
       "\n",
       "        Socrata ID  \n",
       "0          1311804  \n",
       "1          1630253  \n",
       "2           652126  \n",
       "3          1158807  \n",
       "4          1547901  \n",
       "5           326121  \n",
       "6           584541  \n",
       "7           846727  \n",
       "8          1387276  \n",
       "9           312757  \n",
       "10          346281  \n",
       "11         1154352  \n",
       "12         1296400  \n",
       "13         1548670  \n",
       "14          927077  \n",
       "15         1097102  \n",
       "16         1124407  \n",
       "17         1320447  \n",
       "18         1627501  \n",
       "19         1664808  \n",
       "20         1255061  \n",
       "21         1371490  \n",
       "22          127148  \n",
       "23         1087985  \n",
       "24          433657  \n",
       "25          269331  \n",
       "26         1186640  \n",
       "27         1574267  \n",
       "28         1063496  \n",
       "29         1524711  \n",
       "...            ...  \n",
       "1756159     508568  \n",
       "1756160     974890  \n",
       "1756161     525997  \n",
       "1756162    1316451  \n",
       "1756163     848129  \n",
       "1756164    1464326  \n",
       "1756165     640085  \n",
       "1756166     558330  \n",
       "1756167     151934  \n",
       "1756168    1506463  \n",
       "1756169     743960  \n",
       "1756170     629367  \n",
       "1756171     557139  \n",
       "1756172    1228972  \n",
       "1756173     871523  \n",
       "1756174    1493849  \n",
       "1756175     639359  \n",
       "1756176     365119  \n",
       "1756177    1217789  \n",
       "1756178     905603  \n",
       "1756179    1356632  \n",
       "1756180     255140  \n",
       "1756181     992426  \n",
       "1756182    1051623  \n",
       "1756183     693107  \n",
       "1756184    1427374  \n",
       "1756185     920680  \n",
       "1756186    1577103  \n",
       "1756187    1537801  \n",
       "1756188    1011533  \n",
       "\n",
       "[1756189 rows x 36 columns]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "urlpos = 'https://s3.eu-west-2.amazonaws.com/dmhr-data/postcodes.csv'\n",
    "colsnew= ['postcode', 'Postcode 2', 'Postcode 3', 'Date Introduced',\n",
    "       'User Type', 'Easting', 'Northing', 'Positional Quality', 'County Code',\n",
    "       'County Name', 'Local Authority Code', 'Local Authority Name',\n",
    "       'Ward Code', 'Ward Name', 'Country Code', 'Country Name', 'Region Code',\n",
    "       'region', 'Parliamentary Constituency Code',\n",
    "       'Parliamentary Constituency Name', 'European Electoral Region Code',\n",
    "       'European Electoral Region Name', 'Primary Care Trust Code',\n",
    "       'Primary Care Trust Name', 'Lower Super Output Area Code',\n",
    "       'Lower Super Output Area Name', 'Middle Super Output Area Code',\n",
    "       'Middle Super Output Area Name', 'Output Area Classification Code',\n",
    "       'Output Area Classification Name', 'Longitude', 'Latitude',\n",
    "       'Spatial Accuracy', 'Last Uploaded', 'Location', 'Socrata ID']\n",
    "postcodesdataset = pd.read_csv(urlpos, index_col=False, names=colsnew, skiprows=1)\n",
    "postcodesdataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['postcode', 'Postcode 2', 'Postcode 3', 'Date Introduced', 'User Type',\n",
       "       'Easting', 'Northing', 'Positional Quality', 'County Code',\n",
       "       'County Name', 'Local Authority Code', 'Local Authority Name',\n",
       "       'Ward Code', 'Ward Name', 'Country Code', 'Country Name', 'Region Code',\n",
       "       'region', 'Parliamentary Constituency Code',\n",
       "       'Parliamentary Constituency Name', 'European Electoral Region Code',\n",
       "       'European Electoral Region Name', 'Primary Care Trust Code',\n",
       "       'Primary Care Trust Name', 'Lower Super Output Area Code',\n",
       "       'Lower Super Output Area Name', 'Middle Super Output Area Code',\n",
       "       'Middle Super Output Area Name', 'Output Area Classification Code',\n",
       "       'Output Area Classification Name', 'Longitude', 'Latitude',\n",
       "       'Spatial Accuracy', 'Last Uploaded', 'Location', 'Socrata ID'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postcodesdataset.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>region</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Yorkshire and The Humber</td>\n",
       "      <td>S20 6RU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>London</td>\n",
       "      <td>TW4 7BD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>South East</td>\n",
       "      <td>GU513ZQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>South East</td>\n",
       "      <td>OX4 6BE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>South West</td>\n",
       "      <td>TA7 9JH</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     region postcode\n",
       "0  Yorkshire and The Humber  S20 6RU\n",
       "1                    London  TW4 7BD\n",
       "2                South East  GU513ZQ\n",
       "3                South East  OX4 6BE\n",
       "4                South West  TA7 9JH"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postcodes_reduced= postcodesdataset.loc[:,['region','postcode']]\n",
    "postcodes_reduced.head() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove unnecessary spaces in the postcode dataset\n",
    "def removewhitespace(x):\n",
    "    x= \"\".join(x.split())\n",
    "    return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['S206RU',\n",
       " 'TW47BD',\n",
       " 'GU513ZQ',\n",
       " 'OX46BE',\n",
       " 'TA79JH',\n",
       " 'CO124PS',\n",
       " 'G157DS',\n",
       " 'LE44LU',\n",
       " 'SG180BW',\n",
       " 'CM27FH',\n",
       " 'CT119AA',\n",
       " 'OX277AA',\n",
       " 'RM13HJ',\n",
       " 'TA94AG',\n",
       " 'M31NG',\n",
       " 'NR147UJ',\n",
       " 'NW43TT',\n",
       " 'S446SF',\n",
       " 'TW184RJ',\n",
       " 'WA156UZ',\n",
       " 'PR76LE',\n",
       " 'SE187PZ',\n",
       " 'BL13JE',\n",
       " 'NP263ED',\n",
       " 'DH61EG',\n",
       " 'CF30BG',\n",
       " 'PE285NW',\n",
       " 'TN39PL',\n",
       " 'NN100BT',\n",
       " 'SY109EX',\n",
       " 'BB52HX',\n",
       " 'DN345AL',\n",
       " 'L720LW',\n",
       " 'BT307TB',\n",
       " 'WF132DT',\n",
       " 'CV65DD',\n",
       " 'CH13EF',\n",
       " 'SY120LN',\n",
       " 'BT945AG',\n",
       " 'CA48DW',\n",
       " 'ST66TU',\n",
       " 'PL254EH',\n",
       " 'NN57LD',\n",
       " 'WA95SP',\n",
       " 'ML30NG',\n",
       " 'ME157PA',\n",
       " 'HR13DU',\n",
       " 'G679DU',\n",
       " 'CF144BG',\n",
       " 'KA48AB',\n",
       " 'EH224HX',\n",
       " 'CV211EP',\n",
       " 'ME105JW',\n",
       " 'ST179ZG',\n",
       " 'BS375TB',\n",
       " 'GY13FL',\n",
       " 'M297EB',\n",
       " 'PO381DH',\n",
       " 'CT117TB',\n",
       " 'NG242JY',\n",
       " 'BN86NT',\n",
       " 'LL654AN',\n",
       " 'WD172AJ',\n",
       " 'NN96PL',\n",
       " 'OX12PH',\n",
       " 'HP124LS',\n",
       " 'LN121HB',\n",
       " 'TQ33LY',\n",
       " 'BS13QY',\n",
       " 'BA20BH',\n",
       " 'OX129SR',\n",
       " 'AL51LN',\n",
       " 'TA187PA',\n",
       " 'EC2A4RD',\n",
       " 'SO195FF',\n",
       " 'GU28EA',\n",
       " 'S87NW',\n",
       " 'HP65QS',\n",
       " 'M336WY',\n",
       " 'WF177EW',\n",
       " 'NR302FD',\n",
       " 'IP215LT',\n",
       " 'SA131SG',\n",
       " 'SO419NU',\n",
       " 'KT65PY',\n",
       " 'MK88DJ',\n",
       " 'AB167PJ',\n",
       " 'CF831SL',\n",
       " 'N103AD',\n",
       " 'SN68TW',\n",
       " 'CO101JY',\n",
       " 'B757JZ',\n",
       " 'DT12DW',\n",
       " 'EH113RR',\n",
       " 'CO92PA',\n",
       " 'LL652US',\n",
       " 'PH107LL',\n",
       " 'TD58QQ',\n",
       " 'DE223AJ',\n",
       " 'WV38DZ',\n",
       " 'TQ88HS',\n",
       " 'LE651US',\n",
       " 'DG54EL',\n",
       " 'NN82PN',\n",
       " 'HX37JG',\n",
       " 'SK101BT',\n",
       " 'NE296DL',\n",
       " 'CO91EF',\n",
       " 'TA49UE',\n",
       " 'BN996FN',\n",
       " 'WA28QH',\n",
       " 'S94ES',\n",
       " 'TS80UT',\n",
       " 'PL15EJ',\n",
       " 'KT199QQ',\n",
       " 'SE18HX',\n",
       " 'NG349EX',\n",
       " 'HS20PX',\n",
       " 'OX142NW',\n",
       " 'HA04GF',\n",
       " 'SN15DG',\n",
       " 'SO165JD',\n",
       " 'SK152UZ',\n",
       " 'DY31HH',\n",
       " 'NR192TT',\n",
       " 'BN272LH',\n",
       " 'S730AG',\n",
       " 'BT621NY',\n",
       " 'CA287UF',\n",
       " 'BS45AY',\n",
       " 'NG347AW',\n",
       " 'GU28LG',\n",
       " 'CR02SP',\n",
       " 'PR14TY',\n",
       " 'BN36WD',\n",
       " 'DG89PR',\n",
       " 'L394TT',\n",
       " 'EH36PE',\n",
       " 'HP108HX',\n",
       " 'HU128RN',\n",
       " 'PH13PD',\n",
       " 'ML126WJ',\n",
       " 'GL510BP',\n",
       " 'BT411NZ',\n",
       " 'DN227UH',\n",
       " 'FY60EZ',\n",
       " 'LS298TL',\n",
       " 'ME86SW',\n",
       " 'WA93WU',\n",
       " 'KA129NA',\n",
       " 'YO152HF',\n",
       " 'SK119AF',\n",
       " 'LA229JP',\n",
       " 'IM51WU',\n",
       " 'PE276HH',\n",
       " 'SW22TR',\n",
       " 'BN212TP',\n",
       " 'BS139PH',\n",
       " 'DA76YB',\n",
       " 'CB43BN',\n",
       " 'SW178QP',\n",
       " 'HX29TX',\n",
       " 'NG82QL',\n",
       " 'BL53ZJ',\n",
       " 'MK451XE',\n",
       " 'AL100SZ',\n",
       " 'PE85PQ',\n",
       " 'DL15LW',\n",
       " 'EH218LX',\n",
       " 'S703JD',\n",
       " 'IG119PQ',\n",
       " 'BL79XQ',\n",
       " 'SM54LQ',\n",
       " 'OX299TY',\n",
       " 'TS43DH',\n",
       " 'SP62LS',\n",
       " 'TR184PA',\n",
       " 'SA132AL',\n",
       " 'NP70LN',\n",
       " 'E33QS',\n",
       " 'TN184XB',\n",
       " 'SK30PZ',\n",
       " 'YO178NW',\n",
       " 'TR36NB',\n",
       " 'SS67NT',\n",
       " 'S401UR',\n",
       " 'MK56EG',\n",
       " 'L131BE',\n",
       " 'SO452QH',\n",
       " 'NR47RU',\n",
       " 'BT343XB',\n",
       " 'CW123RZ',\n",
       " 'NN32SS',\n",
       " 'BD63RZ',\n",
       " 'DL117GU',\n",
       " 'TA201RX',\n",
       " 'G811RX',\n",
       " 'CR28NU',\n",
       " 'GU478HQ',\n",
       " 'SK61LA',\n",
       " 'SA199UF',\n",
       " 'WR40NH',\n",
       " 'BS50BW',\n",
       " 'RG87BT',\n",
       " 'BN162UG',\n",
       " 'SA200JB',\n",
       " 'E32ZT',\n",
       " 'PE155WG',\n",
       " 'SE38ER',\n",
       " 'SL90NG',\n",
       " 'G349AR',\n",
       " 'BS233AQ',\n",
       " 'GL45GN',\n",
       " 'GL20JL',\n",
       " 'FY45EN',\n",
       " 'SS12HT',\n",
       " 'SY45TR',\n",
       " 'IP265BJ',\n",
       " 'CV77FW',\n",
       " 'NE100RY',\n",
       " 'LS298SE',\n",
       " 'BD227LN',\n",
       " 'CV33BY',\n",
       " 'M415GS',\n",
       " 'HD64EF',\n",
       " 'NP116BJ',\n",
       " 'WR127PT',\n",
       " 'PA318NY',\n",
       " 'BD163AG',\n",
       " 'DH23AB',\n",
       " 'OL84BB',\n",
       " 'OX43SX',\n",
       " 'MK418RQ',\n",
       " 'SL72AW',\n",
       " 'TR72QT',\n",
       " 'CA93NF',\n",
       " 'MK159EU',\n",
       " 'NG13AY',\n",
       " 'TR113BA',\n",
       " 'LU79BL',\n",
       " 'SM45AF',\n",
       " 'GL12NG',\n",
       " 'WF20XH',\n",
       " 'EN91TS',\n",
       " 'W112LD',\n",
       " 'BN107AE',\n",
       " 'SN32GU',\n",
       " 'NW51HR',\n",
       " 'WR117RQ',\n",
       " 'EH46DS',\n",
       " 'TN342HG',\n",
       " 'CO12UF',\n",
       " 'B440NY',\n",
       " 'G729JN',\n",
       " 'FK15DL',\n",
       " 'PO77XU',\n",
       " 'PO228HD',\n",
       " 'SP13RB',\n",
       " 'BT413NL',\n",
       " 'SN55QH',\n",
       " 'NP76AH',\n",
       " 'TQ110EH',\n",
       " 'GL51SY',\n",
       " 'B129BH',\n",
       " 'WF15NJ',\n",
       " 'CH600AL',\n",
       " 'S648AB',\n",
       " 'LS157TB',\n",
       " 'CB224PL',\n",
       " 'CT179RB',\n",
       " 'CF643UL',\n",
       " 'NG32BJ',\n",
       " 'WV112EG',\n",
       " 'B799DH',\n",
       " 'BD71BE',\n",
       " 'M283EX',\n",
       " 'BH152EQ',\n",
       " 'DT102NF',\n",
       " 'LN35SR',\n",
       " 'PO130FQ',\n",
       " 'SO182PG',\n",
       " 'DH34HU',\n",
       " 'IP309NX',\n",
       " 'BH166HH',\n",
       " 'DE248GU',\n",
       " 'PA86EN',\n",
       " 'WA144SS',\n",
       " 'TA26HF',\n",
       " 'OX182JL',\n",
       " 'TA248SB',\n",
       " 'PR23XX',\n",
       " 'YO411JX',\n",
       " 'TN56UQ',\n",
       " 'NE639LG',\n",
       " 'TR276HE',\n",
       " 'S65BP',\n",
       " 'CT125FS',\n",
       " 'GY13SZ',\n",
       " 'GU166RD',\n",
       " 'G329JL',\n",
       " 'PA40SZ',\n",
       " 'BN107ED',\n",
       " 'MK159HZ',\n",
       " 'TW152HN',\n",
       " 'TN163YE',\n",
       " 'EH76DY',\n",
       " 'PR11QF',\n",
       " 'SM13RY',\n",
       " 'RG263TU',\n",
       " 'BT294GS',\n",
       " 'EH288QH',\n",
       " 'NE32DT',\n",
       " 'HR68QD',\n",
       " 'GL504AB',\n",
       " 'WF50AF',\n",
       " 'DY103TR',\n",
       " 'W1B1QG',\n",
       " 'BR76AL',\n",
       " 'LS142XU',\n",
       " 'WD246PR',\n",
       " 'LL421NN',\n",
       " 'G49AJ',\n",
       " 'DH59HG',\n",
       " 'SA433BA',\n",
       " 'HA49HD',\n",
       " 'SA312PF',\n",
       " 'WA36PB',\n",
       " 'SY41BW',\n",
       " 'S445LN',\n",
       " 'DE74LS',\n",
       " 'BL24AX',\n",
       " 'CH469RP',\n",
       " 'AL52SX',\n",
       " 'CM29TH',\n",
       " 'SG47BG',\n",
       " 'GL193LA',\n",
       " 'BT714BP',\n",
       " 'BB98PF',\n",
       " 'CF340BF',\n",
       " 'CV61FT',\n",
       " 'BT205PF',\n",
       " 'KA151DN',\n",
       " 'TF33AJ',\n",
       " 'NP190JR',\n",
       " 'SY208EJ',\n",
       " 'EH510LP',\n",
       " 'FY60QY',\n",
       " 'BT161UA',\n",
       " 'SN36JR',\n",
       " 'DT29DG',\n",
       " 'WF33DE',\n",
       " 'RH98NF',\n",
       " 'ME207QU',\n",
       " 'ML75LH',\n",
       " 'NE340HQ',\n",
       " 'NE23DR',\n",
       " 'BT389EE',\n",
       " 'SW62BX',\n",
       " 'MK420LT',\n",
       " 'EH145DF',\n",
       " 'DE224NJ',\n",
       " 'SK86EN',\n",
       " 'NP225LE',\n",
       " 'NP198DA',\n",
       " 'S730JW',\n",
       " 'IP279DR',\n",
       " 'PO141FJ',\n",
       " 'DE119BQ',\n",
       " 'SE15LH',\n",
       " 'CA66DA',\n",
       " 'B677LH',\n",
       " 'DE223HD',\n",
       " 'B903LT',\n",
       " 'RM124LF',\n",
       " 'PE339XA',\n",
       " 'RH164HJ',\n",
       " 'SY25HF',\n",
       " 'BB114HQ',\n",
       " 'NG150AS',\n",
       " 'NN135QR',\n",
       " 'IP144NU',\n",
       " 'NG83HD',\n",
       " 'CM12NJ',\n",
       " 'WA110TP',\n",
       " 'BN132SZ',\n",
       " 'NE312RR',\n",
       " 'PL198QZ',\n",
       " 'CB87JG',\n",
       " 'DL140LD',\n",
       " 'TW208RD',\n",
       " 'RG65UE',\n",
       " 'PE251DR',\n",
       " 'BB129PP',\n",
       " 'CM16HY',\n",
       " 'ST14BZ',\n",
       " 'M264JR',\n",
       " 'BA69PQ',\n",
       " 'EX173JD',\n",
       " 'ML15LT',\n",
       " 'DN76JL',\n",
       " 'TF29PY',\n",
       " 'RH15JR',\n",
       " 'GL116AQ',\n",
       " 'PL66HL',\n",
       " 'CO45LF',\n",
       " 'BS154TJ',\n",
       " 'M145QN',\n",
       " 'ST119DX',\n",
       " 'GU206QG',\n",
       " 'B262JL',\n",
       " 'AL101EF',\n",
       " 'ME171XH',\n",
       " 'SK82NF',\n",
       " 'N19ZJ',\n",
       " 'S367AB',\n",
       " 'WA119BA',\n",
       " 'CV238BL',\n",
       " 'ST37FN',\n",
       " 'WR144HJ',\n",
       " 'DD51ER',\n",
       " 'HA11QF',\n",
       " 'S59FE',\n",
       " 'OL139QB',\n",
       " 'DN146RP',\n",
       " 'LE33RY',\n",
       " 'KY76ER',\n",
       " 'BR26AE',\n",
       " 'GL115BT',\n",
       " 'EH268PD',\n",
       " 'N31PJ',\n",
       " 'YO225AT',\n",
       " 'SY132EW',\n",
       " 'SO173EA',\n",
       " 'RG302AE',\n",
       " 'M401NA',\n",
       " 'PE262RW',\n",
       " 'TN158AZ',\n",
       " 'WA128PE',\n",
       " 'EH145QG',\n",
       " 'OL99LE',\n",
       " 'BN212XF',\n",
       " 'BT715ES',\n",
       " 'NG229PF',\n",
       " 'HA53LN',\n",
       " 'EH496ED',\n",
       " 'S103YR',\n",
       " 'PA160JE',\n",
       " 'EH127RL',\n",
       " 'OL146BB',\n",
       " 'CV32JT',\n",
       " 'BT440EW',\n",
       " 'RM187BA',\n",
       " 'RM38EN',\n",
       " 'BL35JB',\n",
       " 'S214HW',\n",
       " 'WN34TB',\n",
       " 'RM109NY',\n",
       " 'DY117RB',\n",
       " 'BS353SG',\n",
       " 'CH655BQ',\n",
       " 'CF34HN',\n",
       " 'ME206AP',\n",
       " 'GU273BA',\n",
       " 'S352PF',\n",
       " 'SE120NL',\n",
       " 'M446PB',\n",
       " 'OL120NG',\n",
       " 'PO78SB',\n",
       " 'LE85WZ',\n",
       " 'DT94EX',\n",
       " 'G158DE',\n",
       " 'SA154HH',\n",
       " 'GL77DL',\n",
       " 'DA157WB',\n",
       " 'EH104SF',\n",
       " 'CH499BN',\n",
       " 'EX175DJ',\n",
       " 'RM37TZ',\n",
       " 'S705BE',\n",
       " 'WS138HB',\n",
       " 'BS106QJ',\n",
       " 'LS251HZ',\n",
       " 'G444AT',\n",
       " 'LU29QF',\n",
       " 'RM109EL',\n",
       " 'BT622HB',\n",
       " 'SA147BB',\n",
       " 'CR06BG',\n",
       " 'WV156PR',\n",
       " 'RG264NE',\n",
       " 'SN67NJ',\n",
       " 'CO40NA',\n",
       " 'SK176UH',\n",
       " 'OL114BS',\n",
       " 'SA65SU',\n",
       " 'PO345DH',\n",
       " 'EX52HA',\n",
       " 'BR52PP',\n",
       " 'N193TT',\n",
       " 'BH152EH',\n",
       " 'M274AA',\n",
       " 'G750DY',\n",
       " 'TR126TH',\n",
       " 'SO197NE',\n",
       " 'GL543QX',\n",
       " 'TA36TF',\n",
       " 'NR339JX',\n",
       " 'NR257QL',\n",
       " 'BR51RB',\n",
       " 'BT132QD',\n",
       " 'EX109SJ',\n",
       " 'NP198DG',\n",
       " 'PE275JB',\n",
       " 'PA59TH',\n",
       " 'EX327JJ',\n",
       " 'CR85JA',\n",
       " 'TN184AX',\n",
       " 'CM219DB',\n",
       " 'PL268SP',\n",
       " 'OL148QL',\n",
       " 'BD108SX',\n",
       " 'BS84LT',\n",
       " 'EH92ND',\n",
       " 'TW45EN',\n",
       " 'PH149QY',\n",
       " 'BN251SQ',\n",
       " 'SW71BJ',\n",
       " 'CR82JR',\n",
       " 'M337FH',\n",
       " 'HD46PH',\n",
       " 'PR86AJ',\n",
       " 'DL117RZ',\n",
       " 'KY26UE',\n",
       " 'HR96DX',\n",
       " 'BN176BX',\n",
       " 'L408JX',\n",
       " 'GU33RQ',\n",
       " 'L15BU',\n",
       " 'AB210GT',\n",
       " 'NG197ER',\n",
       " 'TF108NP',\n",
       " 'TR148UG',\n",
       " 'W114HQ',\n",
       " 'TN147EF',\n",
       " 'NW19SP',\n",
       " 'CT13TL',\n",
       " 'DY51GU',\n",
       " 'CT45EB',\n",
       " 'PE112YJ',\n",
       " 'G732SL',\n",
       " 'WC2N4EZ',\n",
       " 'CF434SF',\n",
       " 'LL146HW',\n",
       " 'E148EG',\n",
       " 'PO382AR',\n",
       " 'TW184PP',\n",
       " 'SR67UF',\n",
       " 'SW33EE',\n",
       " 'TN49JX',\n",
       " 'IP327HP',\n",
       " 'NN128EU',\n",
       " 'SS72SF',\n",
       " 'RG46TD',\n",
       " 'CB87PF',\n",
       " 'NW52QN',\n",
       " 'CV214EN',\n",
       " 'DN227FG',\n",
       " 'S64RP',\n",
       " 'NW14XR',\n",
       " 'DY51PR',\n",
       " 'PH394NP',\n",
       " 'E176NA',\n",
       " 'LS185HR',\n",
       " 'NE639NA',\n",
       " 'AB515RP',\n",
       " 'N32QY',\n",
       " 'BH104AQ',\n",
       " 'CH646QS',\n",
       " 'KA151BS',\n",
       " 'RG109GT',\n",
       " 'TQ46LW',\n",
       " 'NP190BT',\n",
       " 'CM12ND',\n",
       " 'NN39ER',\n",
       " 'RM124NN',\n",
       " 'B974LR',\n",
       " 'WR141FG',\n",
       " 'HP109EN',\n",
       " 'DD111AA',\n",
       " 'DG12NS',\n",
       " 'WF28AF',\n",
       " 'GL25QX',\n",
       " 'CT118AY',\n",
       " 'PO180DU',\n",
       " 'YO153BJ',\n",
       " 'NG75NL',\n",
       " 'MK438QQ',\n",
       " 'IV301SF',\n",
       " 'E32HR',\n",
       " 'IV170RX',\n",
       " 'GU266YE',\n",
       " 'GY93AH',\n",
       " 'EN51SE',\n",
       " 'SO238SD',\n",
       " 'SO510GG',\n",
       " 'TN206QB',\n",
       " 'HP160ZN',\n",
       " 'WV164AG',\n",
       " 'L73EU',\n",
       " 'BD120TY',\n",
       " 'GU342SY',\n",
       " 'WN23NL',\n",
       " 'BT350LU',\n",
       " 'NE64PR',\n",
       " 'DT65DP',\n",
       " 'TS42WB',\n",
       " 'DN32NB',\n",
       " 'EX84PS',\n",
       " 'CV227EZ',\n",
       " 'BS217YF',\n",
       " 'TN62BE',\n",
       " 'ST54BL',\n",
       " 'OX143US',\n",
       " 'IV361LA',\n",
       " 'E161NJ',\n",
       " 'IP124RA',\n",
       " 'SA175EH',\n",
       " 'BD131BD',\n",
       " 'ST147SH',\n",
       " 'BB54QF',\n",
       " 'G467UT',\n",
       " 'TA28PE',\n",
       " 'BT703BT',\n",
       " 'CW28ER',\n",
       " 'ML12PL',\n",
       " 'CH438TW',\n",
       " 'LD38LJ',\n",
       " 'WS151GH',\n",
       " 'TA203ND',\n",
       " 'NW116XX',\n",
       " 'KW172BL',\n",
       " 'SK62PB',\n",
       " 'MK451AH',\n",
       " 'MK109EH',\n",
       " 'S89JD',\n",
       " 'NR93AY',\n",
       " 'EH44BZ',\n",
       " 'NR133SS',\n",
       " 'PE283NY',\n",
       " 'TW137DY',\n",
       " 'TA42NR',\n",
       " 'RH136PA',\n",
       " 'NG96JR',\n",
       " 'NG219JE',\n",
       " 'BT521LE',\n",
       " 'SK64GA',\n",
       " 'WR49EP',\n",
       " 'NW104JT',\n",
       " 'TS175EY',\n",
       " 'ST34DR',\n",
       " 'TN12NB',\n",
       " 'ME195JE',\n",
       " 'PH26DQ',\n",
       " 'AB534NG',\n",
       " 'BN133JH',\n",
       " 'NP207BG',\n",
       " 'BS41LJ',\n",
       " 'BS81NB',\n",
       " 'BD194UA',\n",
       " 'B82TJ',\n",
       " 'TW165JY',\n",
       " 'MK184EU',\n",
       " 'WF103QF',\n",
       " 'SL98NQ',\n",
       " 'PL51LT',\n",
       " 'SY210BX',\n",
       " 'BD87EY',\n",
       " 'EH193FY',\n",
       " 'E48BP',\n",
       " 'SS41LJ',\n",
       " 'HP225SY',\n",
       " 'BR49EL',\n",
       " 'RG224WJ',\n",
       " 'NN110GD',\n",
       " 'BT248JJ',\n",
       " 'LU71SH',\n",
       " 'BT944FL',\n",
       " 'E40AW',\n",
       " 'WN50AY',\n",
       " 'IP124UX',\n",
       " 'PH337BY',\n",
       " 'WD64ER',\n",
       " 'SP78QD',\n",
       " 'TS54QF',\n",
       " 'SY162DH',\n",
       " 'B650SQ',\n",
       " 'WN67QD',\n",
       " 'SM19NJ',\n",
       " 'CO101JR',\n",
       " 'KA204JD',\n",
       " 'DY148JJ',\n",
       " 'S613SD',\n",
       " 'SY186HA',\n",
       " 'SL25JW',\n",
       " 'ML12UE',\n",
       " 'TS121BU',\n",
       " 'DH96PE',\n",
       " 'UB95NE',\n",
       " 'BA202ED',\n",
       " 'IP313BB',\n",
       " 'CM112LL',\n",
       " 'CF244LF',\n",
       " 'GU343QA',\n",
       " 'GL556QF',\n",
       " 'SO302GQ',\n",
       " 'NG123GT',\n",
       " 'BN220BQ',\n",
       " 'HP39XD',\n",
       " 'IP45TP',\n",
       " 'CW26JJ',\n",
       " 'SG127EF',\n",
       " 'SP78PH',\n",
       " 'BN79LJ',\n",
       " 'PO215BH',\n",
       " 'HA36TY',\n",
       " 'CA118EH',\n",
       " 'L302PH',\n",
       " 'BH151RL',\n",
       " 'DL131QU',\n",
       " 'GL27EN',\n",
       " 'SP40JU',\n",
       " 'CH40SJ',\n",
       " 'DN200EW',\n",
       " 'BA53EL',\n",
       " 'TN255PQ',\n",
       " 'BT522QQ',\n",
       " 'SW114AJ',\n",
       " 'SN77PH',\n",
       " 'TD90HA',\n",
       " 'PR40LN',\n",
       " 'DN67SN',\n",
       " 'TW151UR',\n",
       " 'E174FT',\n",
       " 'BA116SY',\n",
       " 'CA139NU',\n",
       " 'DL81FE',\n",
       " 'WS152YF',\n",
       " 'DD96RN',\n",
       " 'DY12BN',\n",
       " 'PO229DF',\n",
       " 'LU27JR',\n",
       " 'EN19RW',\n",
       " 'G29LJ',\n",
       " 'SA312EN',\n",
       " 'TW183LH',\n",
       " 'SO182NG',\n",
       " 'OL68BG',\n",
       " 'CH448BZ',\n",
       " 'TN224QE',\n",
       " 'SA154RN',\n",
       " 'SG52JJ',\n",
       " 'PH185UQ',\n",
       " 'TW107JU',\n",
       " 'KY146JE',\n",
       " 'G513ET',\n",
       " 'BT436HF',\n",
       " 'GU105RS',\n",
       " 'CH426PQ',\n",
       " 'PL125JX',\n",
       " 'M191JF',\n",
       " 'EH139JY',\n",
       " 'LU79QJ',\n",
       " 'CA255AP',\n",
       " 'EX167HJ',\n",
       " 'B263NY',\n",
       " 'HR28DF',\n",
       " 'B476LG',\n",
       " 'IP145PA',\n",
       " 'TW197BG',\n",
       " 'BB102JQ',\n",
       " 'IG27PU',\n",
       " 'SS30QJ',\n",
       " 'S174PY',\n",
       " 'RH67PH',\n",
       " 'UB24LH',\n",
       " 'G468LX',\n",
       " 'RG64DL',\n",
       " 'UB48LA',\n",
       " 'BS207QJ',\n",
       " 'SW21HZ',\n",
       " 'DE236TH',\n",
       " 'CM20ES',\n",
       " 'DD48SQ',\n",
       " 'WD186QE',\n",
       " 'SN102RH',\n",
       " 'LL546NZ',\n",
       " 'OL26JG',\n",
       " 'TS185LW',\n",
       " 'NN72QG',\n",
       " 'BB15AN',\n",
       " 'TS146GG',\n",
       " 'LS279SD',\n",
       " 'EX332AN',\n",
       " 'SA43AR',\n",
       " 'SK151DD',\n",
       " 'CM14UQ',\n",
       " 'PA286JF',\n",
       " 'CT110HF',\n",
       " 'IG88AN',\n",
       " 'DY68EU',\n",
       " 'GL539JJ',\n",
       " 'YO411HW',\n",
       " 'BN99TL',\n",
       " 'TD98EW',\n",
       " 'EX166WY',\n",
       " 'SN138QD',\n",
       " 'G535HE',\n",
       " 'WV11JS',\n",
       " 'E20SE',\n",
       " 'AB514LJ',\n",
       " 'BN85HN',\n",
       " 'CF402RH',\n",
       " 'CB237YE',\n",
       " 'BT465TR',\n",
       " 'SR70EU',\n",
       " 'M278XB',\n",
       " 'BH256TZ',\n",
       " 'IG118ED',\n",
       " 'CB237ZT',\n",
       " 'LU33EP',\n",
       " 'WF83LS',\n",
       " 'SW113TG',\n",
       " 'LE72JD',\n",
       " 'PO188FF',\n",
       " 'PH14QJ',\n",
       " 'WD196UJ',\n",
       " 'WF61FE',\n",
       " 'E66ER',\n",
       " 'NG55BJ',\n",
       " 'NE425FH',\n",
       " 'CW48PB',\n",
       " 'PO110HU',\n",
       " 'ST61LW',\n",
       " 'NN71JN',\n",
       " 'HA26BT',\n",
       " 'EN55RR',\n",
       " 'WA33HE',\n",
       " 'SR29JP',\n",
       " 'N165JL',\n",
       " 'LS64PS',\n",
       " 'DN148RQ',\n",
       " 'WC1H9HG',\n",
       " 'PO77EX',\n",
       " 'OL26DW',\n",
       " 'IG117EQ',\n",
       " 'SK68DY',\n",
       " 'YO433PR',\n",
       " 'TR36AD',\n",
       " 'BB185TD',\n",
       " 'BL67YW',\n",
       " 'KA197PD',\n",
       " 'GU513NL',\n",
       " 'WA139RW',\n",
       " 'B675RD',\n",
       " 'DN185QT',\n",
       " 'CM82EU',\n",
       " 'SE114DA',\n",
       " 'NP234NP',\n",
       " 'RM155JA',\n",
       " 'WF34PA',\n",
       " 'PL75YW',\n",
       " 'SW1X9SF',\n",
       " 'CO78SQ',\n",
       " 'OL69LA',\n",
       " 'B75DQ',\n",
       " 'PL157SG',\n",
       " 'OX283QX',\n",
       " 'BD111DL',\n",
       " 'E58JS',\n",
       " 'WF19SJ',\n",
       " 'DN75EL',\n",
       " 'JE45TD',\n",
       " 'SP102LP',\n",
       " 'CH73DH',\n",
       " 'S668PE',\n",
       " 'NP167AG',\n",
       " 'SY42AN',\n",
       " 'TS260RB',\n",
       " 'TS176BZ',\n",
       " 'EH218DX',\n",
       " 'CM72SR',\n",
       " 'BN254PL',\n",
       " 'HU68HL',\n",
       " 'AB314SN',\n",
       " 'CA40NN',\n",
       " 'DE143BH',\n",
       " 'E201AH',\n",
       " 'YO167JD',\n",
       " 'ST63WD',\n",
       " 'ME123TL',\n",
       " 'LE53NT',\n",
       " 'M334GA',\n",
       " 'KT35NU',\n",
       " 'RH150RQ',\n",
       " 'BT350LH',\n",
       " 'CF313BF',\n",
       " 'WV107HG',\n",
       " 'SE62BP',\n",
       " 'M188YE',\n",
       " 'BB101PT',\n",
       " 'CF642RE',\n",
       " 'IP16BF',\n",
       " 'LA220JX',\n",
       " 'W24XZ',\n",
       " 'TQ14TY',\n",
       " 'WR26JU',\n",
       " 'CA174AG',\n",
       " 'DH45NH',\n",
       " 'LA28PG',\n",
       " 'LL142HU',\n",
       " 'KT197DE',\n",
       " 'S651PX',\n",
       " 'SO238BW',\n",
       " 'BB33AW',\n",
       " 'NP236LS',\n",
       " 'SN151PG',\n",
       " 'BS200DH',\n",
       " 'M74NP',\n",
       " 'BT204RA',\n",
       " 'SN103ES',\n",
       " 'DE556FW',\n",
       " 'WA11XH',\n",
       " 'DH13UN',\n",
       " 'NE270FA',\n",
       " 'CV109LJ',\n",
       " 'EH51NY',\n",
       " 'CF645FB',\n",
       " 'IV361PJ',\n",
       " 'CM11BW',\n",
       " 'DN227AH',\n",
       " 'CV230JR',\n",
       " 'NR136DE',\n",
       " 'NR104PQ',\n",
       " 'JE33ES',\n",
       " 'UB32EA',\n",
       " 'EX379SA',\n",
       " 'CV49PD',\n",
       " 'EH414ES',\n",
       " 'SK179EZ',\n",
       " 'BA16PJ',\n",
       " 'G132TX',\n",
       " 'TN172QG',\n",
       " 'S434FG',\n",
       " 'IM21JA',\n",
       " 'SW46TA',\n",
       " 'DE130TB',\n",
       " 'SG192TG',\n",
       " 'IP270JH',\n",
       " 'DL54QH',\n",
       " 'SO321ES',\n",
       " 'CW25LT',\n",
       " 'YO433FZ',\n",
       " 'NR295DY',\n",
       " 'WV109DY',\n",
       " 'LE60YT',\n",
       " 'BS351JS',\n",
       " 'WD77BH',\n",
       " 'W86PL',\n",
       " 'CT12AW',\n",
       " 'LE96PH',\n",
       " 'IG11BA',\n",
       " 'FK70HG',\n",
       " 'EH209RT',\n",
       " 'M250DN',\n",
       " 'PH29RU',\n",
       " 'PA344ED',\n",
       " 'PE216QW',\n",
       " 'S71RS',\n",
       " 'N127HH',\n",
       " 'EN61HU',\n",
       " 'L342SF',\n",
       " 'DN45PQ',\n",
       " 'EN89JN',\n",
       " 'FY52QQ',\n",
       " 'EH481AS',\n",
       " 'NN82EB',\n",
       " 'OL102LA',\n",
       " 'LL114TE',\n",
       " 'SO168JD',\n",
       " 'CA74EG',\n",
       " 'BT307BF',\n",
       " 'DA40LD',\n",
       " 'DG11JB',\n",
       " 'TQ121NH',\n",
       " 'YO304TE',\n",
       " 'BB67UQ',\n",
       " 'WF179BU',\n",
       " 'AB422FB',\n",
       " 'PH106UD',\n",
       " 'BS13JD',\n",
       " ...]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postcodes_reduced['postcode']= postcodes_reduced.loc[:,'postcode'].apply(removewhitespace)\n",
    "postcodes_reduced.head()\n",
    "postcodes_reduced.postcode.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['TS181HU',\n",
       " 'TS182AW',\n",
       " 'TS268DB',\n",
       " 'TS13BE',\n",
       " 'TS147DJ',\n",
       " 'TS182AT',\n",
       " 'TS247PW',\n",
       " 'TS66TD',\n",
       " 'TS56HF',\n",
       " 'TS247PW',\n",
       " 'TS36AL',\n",
       " 'TS122FF',\n",
       " 'TS232LA',\n",
       " 'TS101TZ',\n",
       " 'TS13QY',\n",
       " 'TS170EE',\n",
       " 'TS104NW',\n",
       " 'TS37RL',\n",
       " 'TS43BU',\n",
       " 'TS66TD',\n",
       " 'TS122TG',\n",
       " 'TS12NX',\n",
       " 'TS181HU',\n",
       " 'TS56HA',\n",
       " 'TS159DD',\n",
       " 'TS12NX',\n",
       " 'TS13RY',\n",
       " 'TS247PW',\n",
       " 'TS147DJ',\n",
       " 'TS36AL',\n",
       " 'TS170EE',\n",
       " 'TS13RX',\n",
       " 'TS202UZ',\n",
       " 'TS12NX',\n",
       " 'TS36AL',\n",
       " 'TS169EA',\n",
       " 'TS232DG',\n",
       " 'TS249DN',\n",
       " 'TS69QG',\n",
       " 'TS60HA',\n",
       " 'TS251QU',\n",
       " 'TS101SR',\n",
       " 'TS181YE',\n",
       " 'TS116BW',\n",
       " 'TS117BL',\n",
       " 'TS36AL',\n",
       " 'TS55NN',\n",
       " 'TS104NW',\n",
       " 'TS134HW',\n",
       " 'TS101UA',\n",
       " 'TS232JW',\n",
       " 'TS232LS',\n",
       " 'TS80TL',\n",
       " 'TS268DB',\n",
       " 'TS240NZ',\n",
       " 'TS12NX',\n",
       " 'TS66TD',\n",
       " 'TS211JS',\n",
       " 'TS182BP',\n",
       " 'TS104NW',\n",
       " 'TS253DQ',\n",
       " 'TS232DG',\n",
       " 'TS103LA',\n",
       " 'TS176NP',\n",
       " 'TS182AT',\n",
       " 'TS232DG',\n",
       " 'TS80TL',\n",
       " 'TS251AX',\n",
       " 'TS268DB',\n",
       " 'TS121BJ',\n",
       " 'TS39NB',\n",
       " 'TS268DD',\n",
       " 'TS182EP',\n",
       " 'LA127BT',\n",
       " 'CA93QX',\n",
       " 'LA229BP',\n",
       " 'CA166QR',\n",
       " 'LA141LF',\n",
       " 'LA145ES',\n",
       " 'LA139SH',\n",
       " 'LA145JY',\n",
       " 'CA81NL',\n",
       " 'CA174RB',\n",
       " 'CA78DS',\n",
       " 'CA11EB',\n",
       " 'CA11DG',\n",
       " 'CA11ED',\n",
       " 'CA11BP',\n",
       " 'CA12HE',\n",
       " 'CA27AJ',\n",
       " 'CA139HT',\n",
       " 'CA57PZ',\n",
       " 'CA145UR',\n",
       " 'CA201PN',\n",
       " 'LA94JE',\n",
       " 'LA97HR',\n",
       " 'LA96SA',\n",
       " 'CA124DB',\n",
       " 'CA75JH',\n",
       " 'LA62HQ',\n",
       " 'CA103LW',\n",
       " 'CA158EL',\n",
       " 'LA184BY',\n",
       " 'LA77PW',\n",
       " 'CA118HW',\n",
       " 'CA118HW',\n",
       " 'CA74AH',\n",
       " 'CA101RW',\n",
       " 'LA158AB',\n",
       " 'CA287PD',\n",
       " 'CA287RG',\n",
       " 'CA222BD',\n",
       " 'CA79QD',\n",
       " 'LA232EG',\n",
       " 'CA142DL',\n",
       " 'CA143FT',\n",
       " 'CA142ED',\n",
       " 'CA142AJ',\n",
       " 'CA39JZ',\n",
       " 'LA117DJ',\n",
       " 'CA73HH',\n",
       " 'CA139HT',\n",
       " 'CA287BA',\n",
       " 'CA287PA',\n",
       " 'LA142LR',\n",
       " 'CA125JY',\n",
       " 'CA222DB',\n",
       " 'LA117JY',\n",
       " 'LA127BT',\n",
       " 'LA231BA',\n",
       " 'LA143HY',\n",
       " 'LA139RX',\n",
       " 'LA50DP',\n",
       " 'CA287BU',\n",
       " 'LA105DL',\n",
       " 'LA218ER',\n",
       " 'CA101DQ',\n",
       " 'LA158AF',\n",
       " 'CA110PD',\n",
       " 'LA167JP',\n",
       " 'CA142RW',\n",
       " 'LA145SL',\n",
       " 'CA40HP',\n",
       " 'CA11LB',\n",
       " 'CA11LB',\n",
       " 'LA220NU',\n",
       " 'CA65XA',\n",
       " 'LA116PH',\n",
       " 'DL166QA',\n",
       " 'DL150EQ',\n",
       " 'SR78LF',\n",
       " 'DL13RT',\n",
       " 'DL36HZ',\n",
       " 'TS274LQ',\n",
       " 'DL42HP',\n",
       " 'DH33SL',\n",
       " 'DL39JP',\n",
       " 'DH11QW',\n",
       " 'SR85TW',\n",
       " 'DL14YL',\n",
       " 'DH12QW',\n",
       " 'DL146AB',\n",
       " 'DH98AD',\n",
       " 'DH63HW',\n",
       " 'DH85YA',\n",
       " 'DH62JL',\n",
       " 'DL159HU',\n",
       " 'DL146RP',\n",
       " 'DH78NH',\n",
       " 'DH90AB',\n",
       " 'DH46RQ',\n",
       " 'DL147EJ',\n",
       " 'DH76JW',\n",
       " 'DH64DH',\n",
       " 'DH33QD',\n",
       " 'DH34LE',\n",
       " 'DH77DG',\n",
       " 'DL38SQ',\n",
       " 'DL135AF',\n",
       " 'DH21HS',\n",
       " 'DL37JR',\n",
       " 'DL132XD',\n",
       " 'DH15BH',\n",
       " 'DL55LH',\n",
       " 'NE166HU',\n",
       " 'DL15JN',\n",
       " 'SR79AB',\n",
       " 'TS285PZ',\n",
       " 'DL120QE',\n",
       " 'SR84QP',\n",
       " 'DL178JJ',\n",
       " 'DL128HT',\n",
       " 'DL30PD',\n",
       " 'DL22DS',\n",
       " 'DH80BW',\n",
       " 'DH23DJ',\n",
       " 'SR77JE',\n",
       " 'DL166ED',\n",
       " 'TS213BN',\n",
       " 'DH12UW',\n",
       " 'SR84LD',\n",
       " 'DL135NX',\n",
       " 'DL23BE',\n",
       " 'DL54SE',\n",
       " 'SR84PF',\n",
       " 'DL21AA',\n",
       " 'SR77JE',\n",
       " 'DH70LP',\n",
       " 'DH97XT',\n",
       " 'DL166BQ',\n",
       " 'TS285PZ',\n",
       " 'DH62LQ',\n",
       " 'DH79YT',\n",
       " 'NE177SB',\n",
       " 'DH62LT',\n",
       " 'DH70BD',\n",
       " 'DL149SU',\n",
       " 'DH62TH',\n",
       " 'DH78SJ',\n",
       " 'NE657UW',\n",
       " 'NE639UT',\n",
       " 'NE226JX',\n",
       " 'NE662NL',\n",
       " 'NE209SD',\n",
       " 'NE707ER',\n",
       " 'NE241DX',\n",
       " 'NE209SD',\n",
       " 'NE227DU',\n",
       " 'NE241DX',\n",
       " 'NE630XX',\n",
       " 'NE425PW',\n",
       " 'NE455LG',\n",
       " 'NE625RA',\n",
       " 'NE662NR',\n",
       " 'NE650HD',\n",
       " 'NE461QJ',\n",
       " 'NE236QN',\n",
       " 'TD151LL',\n",
       " 'NE482HE',\n",
       " 'NE630NG',\n",
       " 'NE615LX',\n",
       " 'NE236US',\n",
       " 'NE611JX',\n",
       " 'NE716BL',\n",
       " 'NE461QJ',\n",
       " 'NE499AP',\n",
       " 'NE418DH',\n",
       " 'NE611BJ',\n",
       " 'NE237EF',\n",
       " 'NE236QN',\n",
       " 'NE611JX',\n",
       " 'NE464BU',\n",
       " 'NE614EG',\n",
       " 'NE231XZ',\n",
       " 'TD152HB',\n",
       " 'NE476LA',\n",
       " 'NE437LL',\n",
       " 'NE716BL',\n",
       " 'NE659PR',\n",
       " 'NE657DG',\n",
       " 'NE95EY',\n",
       " 'NE82XB',\n",
       " 'NE391PW',\n",
       " 'NE108PH',\n",
       " 'NE81RQ',\n",
       " 'NE119AD',\n",
       " 'NE95XY',\n",
       " 'DH32QT',\n",
       " 'NE109QG',\n",
       " 'NE215AE',\n",
       " 'NE109QG',\n",
       " 'NE81HR',\n",
       " 'NE81AD',\n",
       " 'NE404US',\n",
       " 'NE97AD',\n",
       " 'NE84DP',\n",
       " 'NE214RD',\n",
       " 'NE81NB',\n",
       " 'NE164PD',\n",
       " 'NE82UR',\n",
       " 'NE82PQ',\n",
       " 'NE177BU',\n",
       " 'NE403NT',\n",
       " 'NE84QR',\n",
       " 'NE100RR',\n",
       " 'NE81AD',\n",
       " 'NE18DQ',\n",
       " 'NE48AY',\n",
       " 'NE128LS',\n",
       " 'NE31NB',\n",
       " 'NE21JQ',\n",
       " 'NE32PE',\n",
       " 'NE61SG',\n",
       " 'NE65SL',\n",
       " 'NE63BS',\n",
       " 'NE49QB',\n",
       " 'NE52QW',\n",
       " 'NE22AH',\n",
       " 'NE77XX',\n",
       " 'NE47JT',\n",
       " 'NE31NU',\n",
       " 'NE23LD',\n",
       " 'NE48QB',\n",
       " 'NE51LJ',\n",
       " 'NE64QD',\n",
       " 'NE61SA',\n",
       " 'NE52LH',\n",
       " 'NE159PA',\n",
       " 'NE17XR',\n",
       " 'NE31DQ',\n",
       " 'NE61SG',\n",
       " 'NE156TQ',\n",
       " 'NE49XD',\n",
       " 'NE35NF',\n",
       " 'NE35JP',\n",
       " 'NE31TX',\n",
       " 'NE46SH',\n",
       " 'NE158LX',\n",
       " 'NE52UY',\n",
       " 'NE290HQ',\n",
       " 'NE286RZ',\n",
       " 'NE290SF',\n",
       " 'NE262ND',\n",
       " 'NE261NA',\n",
       " 'NE129BQ',\n",
       " 'NE263LW',\n",
       " 'NE290HT',\n",
       " 'NE259XJ',\n",
       " 'NE136LN',\n",
       " 'NE280AD',\n",
       " 'NE270HJ',\n",
       " 'NE290SF',\n",
       " 'NE286BB',\n",
       " 'NE136JJ',\n",
       " 'NE290DZ',\n",
       " 'NE259PH',\n",
       " 'NE270HJ',\n",
       " 'NE270HJ',\n",
       " 'NE280PP',\n",
       " 'NE287LP',\n",
       " 'NE296HT',\n",
       " 'NE261DU',\n",
       " 'NE126HS',\n",
       " 'NE311NU',\n",
       " 'NE334QY',\n",
       " 'NE346RE',\n",
       " 'NE325SE',\n",
       " 'NE349BP',\n",
       " 'NE340BX',\n",
       " 'NE334DX',\n",
       " 'NE335DU',\n",
       " 'NE359AN',\n",
       " 'NE325AG',\n",
       " 'NE334JP',\n",
       " 'NE312SP',\n",
       " 'NE348PS',\n",
       " 'NE334JP',\n",
       " 'NE335DU',\n",
       " 'NE359AN',\n",
       " 'NE332PG',\n",
       " 'NE311NU',\n",
       " 'SR67EE',\n",
       " 'NE323UX',\n",
       " 'NE334EG',\n",
       " 'NE311NU',\n",
       " 'NE333ET',\n",
       " 'NE334JP',\n",
       " 'SR28AD',\n",
       " 'SR12HJ',\n",
       " 'NE387NQ',\n",
       " 'DH59EZ',\n",
       " 'SR28AX',\n",
       " 'SR47XF',\n",
       " 'SR47XF',\n",
       " 'SR55PS',\n",
       " 'DH44LE',\n",
       " 'NE372PU',\n",
       " 'SR32AN',\n",
       " 'NE387NQ',\n",
       " 'SR12QB',\n",
       " 'SR60HT',\n",
       " 'SR68DZ',\n",
       " 'SR60QQ',\n",
       " 'SR47AF',\n",
       " 'SR28JG',\n",
       " 'SR52LT',\n",
       " 'SR46QE',\n",
       " 'DH45EQ',\n",
       " 'NE372PU',\n",
       " 'DH44DN',\n",
       " 'SR34HG',\n",
       " 'NE387NQ',\n",
       " 'NE372PU',\n",
       " 'SR34HG',\n",
       " 'DH44RB',\n",
       " 'SR31RN',\n",
       " 'DH44RW',\n",
       " 'SR47XF',\n",
       " 'SR32AN',\n",
       " 'SR27BA',\n",
       " 'SR20RX',\n",
       " 'SR53EX',\n",
       " 'NE388JF',\n",
       " 'SR60AB',\n",
       " 'SR34BY',\n",
       " 'SR32AW',\n",
       " 'SR52LT',\n",
       " 'SR52LT',\n",
       " 'SR20RY',\n",
       " 'SR27PF',\n",
       " 'SR11XW',\n",
       " 'SR40LS',\n",
       " 'NE389EH',\n",
       " 'NE389AB',\n",
       " 'HU74DW',\n",
       " 'DN358EB',\n",
       " 'HU181LP',\n",
       " 'DN185ER',\n",
       " 'YO152QW',\n",
       " 'DN159TA',\n",
       " 'HU92LJ',\n",
       " 'YO433FF',\n",
       " 'HU139LZ',\n",
       " 'HU35QE',\n",
       " 'DN313AE',\n",
       " 'DN146JD',\n",
       " 'YO164LZ',\n",
       " 'DN357XE',\n",
       " 'DN311QZ',\n",
       " 'HU31TY',\n",
       " 'HU69BS',\n",
       " 'DN329SW',\n",
       " 'HU74PT',\n",
       " 'HU67ER',\n",
       " 'DN163LG',\n",
       " 'DN311QZ',\n",
       " 'HU106BP',\n",
       " 'HU192PZ',\n",
       " 'DN162AB',\n",
       " 'HU34BB',\n",
       " 'DN149DY',\n",
       " 'DN333JF',\n",
       " 'DN344GB',\n",
       " 'HU13SA',\n",
       " 'HU175NL',\n",
       " 'HU53TJ',\n",
       " 'YO422BS',\n",
       " 'YO256EB',\n",
       " 'HU46RF',\n",
       " 'DN401JW',\n",
       " 'HU95HH',\n",
       " 'HU152UL',\n",
       " 'HU177BZ',\n",
       " 'DN91EP',\n",
       " 'DN162UT',\n",
       " 'HU69BX',\n",
       " 'HU31DS',\n",
       " 'HU52NT',\n",
       " 'HU68QF',\n",
       " 'HU128JD',\n",
       " 'HU178JW',\n",
       " 'HU53QA',\n",
       " 'HU94AL',\n",
       " 'HU52ST',\n",
       " 'DN350LN',\n",
       " 'HU55JT',\n",
       " 'HU36BX',\n",
       " 'HU34BB',\n",
       " 'YO152AT',\n",
       " 'HU151AY',\n",
       " 'HU128JE',\n",
       " 'DN208NT',\n",
       " 'DN157AN',\n",
       " 'DN173DR',\n",
       " 'HU93JA',\n",
       " 'DN146RU',\n",
       " 'YO164LZ',\n",
       " 'YO164LZ',\n",
       " 'HU52NT',\n",
       " 'HU92LR',\n",
       " 'HU55BE',\n",
       " 'DN344GB',\n",
       " 'HU89RW',\n",
       " 'HU92LJ',\n",
       " 'HU177JY',\n",
       " 'HU164AJ',\n",
       " 'HU88JS',\n",
       " 'DN345DX',\n",
       " 'DN147DD',\n",
       " 'HU95AD',\n",
       " 'DN157PG',\n",
       " 'DN344GB',\n",
       " 'YO256UH',\n",
       " 'HU74BJ',\n",
       " 'HU67HP',\n",
       " 'HU93JA',\n",
       " 'DN214PQ',\n",
       " 'HU106QJ',\n",
       " 'HU170HB',\n",
       " 'HU52EG',\n",
       " 'DN312BH',\n",
       " 'DN208AS',\n",
       " 'HU74DW',\n",
       " 'DN162AB',\n",
       " 'HU164DA',\n",
       " 'DN329SW',\n",
       " 'DN313AE',\n",
       " 'HU74DW',\n",
       " 'DN156HX',\n",
       " 'HU139AJ',\n",
       " 'DN357DL',\n",
       " 'HU179BP',\n",
       " 'DN386HZ',\n",
       " 'HU75DD',\n",
       " 'HU74DW',\n",
       " 'HU114AR',\n",
       " 'DN350LN',\n",
       " 'HU89LF',\n",
       " 'HU93JA',\n",
       " 'DN185PU',\n",
       " 'DN403EL',\n",
       " 'HU164QX',\n",
       " 'DN364QG',\n",
       " 'DN345LP',\n",
       " 'HU130RG',\n",
       " 'DN312BH',\n",
       " 'DN313AE',\n",
       " 'DN417JB',\n",
       " 'HU143DB',\n",
       " 'DN345DA',\n",
       " 'YO111UB',\n",
       " 'YO613JR',\n",
       " 'YO304RZ',\n",
       " 'HG35AT',\n",
       " 'YO243WX',\n",
       " 'YO306PS',\n",
       " 'BD249JA',\n",
       " 'HG41HL',\n",
       " 'HG42BE',\n",
       " 'YO178PH',\n",
       " 'HG28AY',\n",
       " 'HG15JP',\n",
       " 'HG27SA',\n",
       " 'HG15AR',\n",
       " 'YO211SD',\n",
       " 'YO196LE',\n",
       " 'YO73RP',\n",
       " 'BD207LG',\n",
       " 'YO244DB',\n",
       " 'TS96BL',\n",
       " 'DL107LD',\n",
       " 'YO113LJ',\n",
       " 'YO179RF',\n",
       " 'YO322LL',\n",
       " 'HG15AR',\n",
       " 'BD231EU',\n",
       " 'DL117TH',\n",
       " 'HG43SE',\n",
       " 'LS256ED',\n",
       " 'YO519BD',\n",
       " 'YO188BL',\n",
       " 'DL104BB',\n",
       " 'DL106HB',\n",
       " 'HG42AX',\n",
       " 'YO149AE',\n",
       " 'YO127LB',\n",
       " 'YO89AJ',\n",
       " 'YO71LU',\n",
       " 'TS95DY',\n",
       " 'DL83QR',\n",
       " 'TS135AY',\n",
       " 'YO104DU',\n",
       " 'YO71LG',\n",
       " 'DL78FW',\n",
       " 'BD232HZ',\n",
       " 'YO126UB',\n",
       " 'YO268BN',\n",
       " 'HG14HG',\n",
       " 'HG50AD',\n",
       " 'LA27JP',\n",
       " 'YO211TX',\n",
       " 'YO139JF',\n",
       " 'YO611QW',\n",
       " 'DL82AT',\n",
       " 'HG50JY',\n",
       " 'YO625HD',\n",
       " 'HG50UB',\n",
       " 'YO233UA',\n",
       " 'DL104UJ',\n",
       " 'LS255AA',\n",
       " 'YO84QH',\n",
       " 'DL78AW',\n",
       " 'YO626AR',\n",
       " 'DL85EP',\n",
       " 'YO611LL',\n",
       " 'YO325UA',\n",
       " 'YO414DY',\n",
       " 'YO244HD',\n",
       " 'YO212PA',\n",
       " 'YO127AS',\n",
       " 'HG15AR',\n",
       " 'YO111UB',\n",
       " 'YO265LD',\n",
       " 'YO84BL',\n",
       " 'YO17NP',\n",
       " 'YO243BZ',\n",
       " 'YO225DP',\n",
       " 'YO317YD',\n",
       " 'DL93JD',\n",
       " 'LS248HD',\n",
       " 'YO624EF',\n",
       " 'YO127RE',\n",
       " 'YO606PS',\n",
       " 'DL116SU',\n",
       " 'YO140NN',\n",
       " 'LS298TQ',\n",
       " 'BD37HZ',\n",
       " 'BD200DG',\n",
       " 'BD96LL',\n",
       " 'BD212JH',\n",
       " 'BD129NG',\n",
       " 'BD62DD',\n",
       " 'BD58EL',\n",
       " 'BD89PB',\n",
       " 'BD183EE',\n",
       " 'BD164RP',\n",
       " 'BD49QA',\n",
       " 'BD30HX',\n",
       " 'BD74PL',\n",
       " 'BD108RU',\n",
       " 'LS297HG',\n",
       " 'BD132GD',\n",
       " 'BD212LD',\n",
       " 'BD175NH',\n",
       " 'BD211SA',\n",
       " 'BD50NX',\n",
       " 'BD30BS',\n",
       " 'BD228DH',\n",
       " 'BD61TD',\n",
       " 'BD120TH',\n",
       " 'BD133LG',\n",
       " 'BD163PA',\n",
       " 'BD38QH',\n",
       " 'BD211LA',\n",
       " 'BD73AH',\n",
       " 'BD73EG',\n",
       " 'BD150NJ',\n",
       " 'BD95PZ',\n",
       " 'BD181QB',\n",
       " 'BD184RX',\n",
       " 'BD47SS',\n",
       " 'BD47SS',\n",
       " 'BD58EL',\n",
       " 'BD49QA',\n",
       " 'BD146NF',\n",
       " 'BD146ES',\n",
       " 'BD157NJ',\n",
       " 'BD50HR',\n",
       " 'BD89LB',\n",
       " 'BD109AZ',\n",
       " 'BD73JX',\n",
       " 'BD23AA',\n",
       " 'BD38QH',\n",
       " 'BD227HN',\n",
       " 'BD100JE',\n",
       " 'BD183EG',\n",
       " 'BD21QG',\n",
       " 'BD164RP',\n",
       " 'BD89DW',\n",
       " 'BD73HY',\n",
       " 'BD213AU',\n",
       " 'BD88RA',\n",
       " 'BD38QH',\n",
       " 'BD87SY',\n",
       " 'BD88RA',\n",
       " 'BD89DW',\n",
       " 'LS290LZ',\n",
       " 'BD73EG',\n",
       " 'BD89LB',\n",
       " 'LS298TH',\n",
       " 'BD24RA',\n",
       " 'BD94LH',\n",
       " 'BD87RT',\n",
       " 'BD24RA',\n",
       " 'BD72BL',\n",
       " 'BD30BS',\n",
       " 'BD89DP',\n",
       " 'BD89DW',\n",
       " 'HX63AB',\n",
       " 'HX14NJ',\n",
       " 'HD61AT',\n",
       " 'HX77BZ',\n",
       " 'HX12HB',\n",
       " 'OL145RN',\n",
       " 'HX64BN',\n",
       " 'HX38AF',\n",
       " 'HX48BD',\n",
       " 'HX29LL',\n",
       " 'HD61AT',\n",
       " 'HX14JG',\n",
       " 'HX20QL',\n",
       " 'HD63NA',\n",
       " 'HX59BA',\n",
       " 'HX50AQ',\n",
       " 'HX12ES',\n",
       " 'HX13LW',\n",
       " 'HX15UA',\n",
       " 'HX15AX',\n",
       " 'HX28AL',\n",
       " 'HX39QB',\n",
       " 'HX28RQ',\n",
       " 'HD63HT',\n",
       " 'BD195AP',\n",
       " 'HD89JL',\n",
       " 'WF131HN',\n",
       " 'HD88DJ',\n",
       " 'HD93TR',\n",
       " 'WF175ED',\n",
       " 'WF133JY',\n",
       " 'HD58DY',\n",
       " 'HD75JY',\n",
       " 'WF160HH',\n",
       " 'WF160HH',\n",
       " 'WF175DN',\n",
       " 'HD13UP',\n",
       " 'WF175SS',\n",
       " 'WF148DU',\n",
       " 'WF131HN',\n",
       " 'BD193RQ',\n",
       " 'HD96AG',\n",
       " 'HD58XW',\n",
       " 'HD59XP',\n",
       " 'WF179PL',\n",
       " 'HD80SJ',\n",
       " 'HD33DY',\n",
       " 'HD22QA',\n",
       " 'BD195AP',\n",
       " 'HD80HH',\n",
       " 'HD95QQ',\n",
       " 'HD33JD',\n",
       " 'HD34LB',\n",
       " 'HD46JE',\n",
       " 'WF120DH',\n",
       " 'WF177PF',\n",
       " 'HD14TS',\n",
       " 'HD13SB',\n",
       " 'HD21DH',\n",
       " 'HD74QQ',\n",
       " 'HD76DF',\n",
       " 'WF134HT',\n",
       " 'HD15PU',\n",
       " 'HD75AB',\n",
       " 'HD15PX',\n",
       " 'HD89DA',\n",
       " 'WF129DW',\n",
       " 'HD93TP',\n",
       " 'HD21AE',\n",
       " 'WF156DF',\n",
       " 'HD16DZ',\n",
       " 'WF169LQ',\n",
       " 'WF127BD',\n",
       " 'BD195AN',\n",
       " 'WF175QT',\n",
       " 'HD14LE',\n",
       " 'HD22YD',\n",
       " 'HD14QR',\n",
       " 'HD74AQ',\n",
       " 'WF179HE',\n",
       " 'HD13XH',\n",
       " 'LS279NB',\n",
       " 'LS118LH',\n",
       " 'LS123HD',\n",
       " 'LS167RX',\n",
       " 'LS115HT',\n",
       " 'LS260AG',\n",
       " 'LS145JS',\n",
       " 'LS177AQ',\n",
       " 'LS158BZ',\n",
       " 'LS225BQ',\n",
       " 'LS287QR',\n",
       " 'LS118SU',\n",
       " 'LS176PZ',\n",
       " 'LS287DE',\n",
       " 'LS132UP',\n",
       " 'LS99EF',\n",
       " 'LS62RX',\n",
       " 'LS287XP',\n",
       " 'LS73DR',\n",
       " 'WF33SA',\n",
       " 'LS83BZ',\n",
       " 'LS177BE',\n",
       " 'LS121HU',\n",
       " 'LS61SG',\n",
       " 'LS279EW',\n",
       " 'LS213HD',\n",
       " 'LS62AF',\n",
       " 'LS73EX',\n",
       " 'LS211BQ',\n",
       " 'LS226RT',\n",
       " 'LS236PY',\n",
       " 'LS102PT',\n",
       " 'LS257JN',\n",
       " 'LS257JU',\n",
       " 'LS197PS',\n",
       " 'LS74LF',\n",
       " 'LS53QT',\n",
       " 'LS103NB',\n",
       " 'LS99JD',\n",
       " 'LS166FR',\n",
       " 'LS196DD',\n",
       " 'LS251HB',\n",
       " 'LS62SF',\n",
       " 'LS285PL',\n",
       " 'LS197JN',\n",
       " 'LS208AR',\n",
       " 'LS99EF',\n",
       " 'LS158BA',\n",
       " 'LS178AE',\n",
       " 'LS279NB',\n",
       " 'LS286DR',\n",
       " 'LS64JN',\n",
       " 'LS121JE',\n",
       " 'LS84HQ',\n",
       " 'LS146DX',\n",
       " 'WF31RQ',\n",
       " 'LS81AY',\n",
       " 'LS279EN',\n",
       " 'LS53JN',\n",
       " 'LS42EL',\n",
       " 'LS197JN',\n",
       " 'LS125SG',\n",
       " 'LS184JY',\n",
       " 'LS159JB',\n",
       " 'LS260UE',\n",
       " 'LS96AU',\n",
       " 'LS63DS',\n",
       " 'WF102DP',\n",
       " 'LS257AB',\n",
       " 'LS141HX',\n",
       " 'LS289AP',\n",
       " 'LS119RE',\n",
       " 'LS102JJ',\n",
       " 'LS73JT',\n",
       " 'LS277HL',\n",
       " 'LS98RZ',\n",
       " 'LS85DE',\n",
       " 'LS132BL',\n",
       " 'LS146GG',\n",
       " 'LS177AN',\n",
       " 'LS85BS',\n",
       " 'LS226JS',\n",
       " 'LS102PT',\n",
       " 'LS97RD',\n",
       " 'LS102PE',\n",
       " 'LS85AN',\n",
       " 'LS158NN',\n",
       " 'LS84HA',\n",
       " 'LS84AA',\n",
       " 'LS134JH',\n",
       " 'LS251AN',\n",
       " 'LS73JT',\n",
       " 'WF44PA',\n",
       " 'WF45BY',\n",
       " 'WF77HZ',\n",
       " 'WF14PR',\n",
       " 'WF101PH',\n",
       " 'WF93AP',\n",
       " 'WF81NF',\n",
       " 'WF28FE',\n",
       " 'WF75HE',\n",
       " 'WF81SU',\n",
       " 'WF15PN',\n",
       " 'WF12PE',\n",
       " 'WF84PQ',\n",
       " 'WF92RD',\n",
       " 'WF11PG',\n",
       " 'WF104EN',\n",
       " 'WF34HS',\n",
       " 'WF27GP',\n",
       " 'WF110JA',\n",
       " 'WF29PE',\n",
       " 'WF103TG',\n",
       " 'WF101DP',\n",
       " 'WF94DP',\n",
       " 'WF13JQ',\n",
       " 'WF41HJ',\n",
       " 'WF11PG',\n",
       " 'WF118NQ',\n",
       " 'WF58DF',\n",
       " 'WF76JL',\n",
       " 'WF61QD',\n",
       " 'WF93AP',\n",
       " 'WF62AZ',\n",
       " 'WF58DF',\n",
       " 'WF62EP',\n",
       " 'WF102QP',\n",
       " 'WF20DP',\n",
       " 'WF62BU',\n",
       " 'WF62JZ',\n",
       " 'WF14SD',\n",
       " 'S434PL',\n",
       " 'S214BZ',\n",
       " 'SK224BP',\n",
       " 'DE53TH',\n",
       " 'DE551LU',\n",
       " 'DE11TH',\n",
       " 'DE11FW',\n",
       " 'S459NR',\n",
       " 'DE11PG',\n",
       " 'NG101QQ',\n",
       " 'S402AB',\n",
       " 'DE451SP',\n",
       " 'DE216AT',\n",
       " 'S418DU',\n",
       " 'DE451ED',\n",
       " 'DE76AX',\n",
       " 'DE65HY',\n",
       " 'DE11TH',\n",
       " 'DE110HU',\n",
       " 'DE78ES',\n",
       " 'DE75PZ',\n",
       " 'NG101RY',\n",
       " 'S402HP',\n",
       " 'S181PY',\n",
       " 'NG105HZ',\n",
       " 'DE554JJ',\n",
       " 'DE43NL',\n",
       " 'DE555PS',\n",
       " 'DE42SA',\n",
       " 'DE757DX',\n",
       " 'DE110PP',\n",
       " 'NG208DG',\n",
       " 'SK176JP',\n",
       " 'DE238AL',\n",
       " 'DE11DZ',\n",
       " 'DE61DR',\n",
       " 'DE560JB',\n",
       " 'S325QH',\n",
       " 'DE222DS',\n",
       " 'S446DF',\n",
       " 'DE30HA',\n",
       " 'S418NA',\n",
       " 'S404AA',\n",
       " 'DE76GR',\n",
       " 'DE240GE',\n",
       " 'DE564GG',\n",
       " 'DE757HA',\n",
       " 'DE552AA',\n",
       " 'DE216LA',\n",
       " 'DE757AL',\n",
       " 'DE557AH',\n",
       " 'DE233TX',\n",
       " 'S425ND',\n",
       " 'S459NG',\n",
       " 'DE656QT',\n",
       " 'S431JG',\n",
       " 'DE53HR',\n",
       " 'DE117JG',\n",
       " 'DE75PR',\n",
       " 'DE44JG',\n",
       " 'SK230RH',\n",
       " 'DE222QN',\n",
       " 'SK179BZ',\n",
       " 'DE723HG',\n",
       " 'S403PY',\n",
       " 'DE217RJ',\n",
       " 'DE561AY',\n",
       " 'S182EJ',\n",
       " 'DE238JX',\n",
       " 'DE238RJ',\n",
       " 'DE11JX',\n",
       " 'SK179AY',\n",
       " 'DE63BX',\n",
       " 'SK178NS',\n",
       " 'SK137DE',\n",
       " 'SK237SR',\n",
       " 'SK138PS',\n",
       " 'SK170AQ',\n",
       " 'NG101RY',\n",
       " 'S401LE',\n",
       " 'DE61RR',\n",
       " 'DE248GT',\n",
       " 'S188QY',\n",
       " 'DE75PZ',\n",
       " 'S211DX',\n",
       " 'S336RJ',\n",
       " 'DE45PB',\n",
       " 'S213TY',\n",
       " 'S804DY',\n",
       " 'NG104NP',\n",
       " 'DE557DW',\n",
       " 'DE248QJ',\n",
       " 'DE43FD',\n",
       " 'DE126JF',\n",
       " 'SK131DJ',\n",
       " 'DE738EF',\n",
       " 'DE655GZ',\n",
       " 'DE39BJ',\n",
       " 'DE119JT',\n",
       " 'DE75QS',\n",
       " ...]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "practicedataset['postcode']= practicedataset.loc[:,'postcode'].apply(removewhitespace)\n",
    "practicedataset.postcode.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>period</th>\n",
       "      <th>practice</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS181HU</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81025</td>\n",
       "      <td>THE DOVECOT SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS181HU</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81632</td>\n",
       "      <td>LAWSON STREET PRACTICE</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON-ON-TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS181HU</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>201512</td>\n",
       "      <td>Y04079</td>\n",
       "      <td>VIRGINCARE STOCKTON LLP(STOCKTON)</td>\n",
       "      <td>LAWSON ST HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS181HU</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81002</td>\n",
       "      <td>QUEENS PARK MEDICAL CENTRE</td>\n",
       "      <td>QUEENS PARK MEDICAL CTR</td>\n",
       "      <td>FARRER STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS182AW</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   period practice                              practicename  \\\n",
       "0  201512   A81001  THE DENSHAM SURGERY                        \n",
       "1  201512   A81025  THE DOVECOT SURGERY                        \n",
       "2  201512   A81632  LAWSON STREET PRACTICE                     \n",
       "3  201512   Y04079  VIRGINCARE STOCKTON LLP(STOCKTON)          \n",
       "4  201512   A81002  QUEENS PARK MEDICAL CENTRE                 \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  THE HEALTH CENTRE          LAWSON STREET               \n",
       "1  THE HEALTH CENTRE          LAWSON STREET               \n",
       "2  THE HEALTH CENTRE          LAWSON STREET               \n",
       "3  LAWSON ST HEALTH CENTRE    LAWSON STREET               \n",
       "4  QUEENS PARK MEDICAL CTR    FARRER STREET               \n",
       "\n",
       "                        city                     county postcode      region  \n",
       "0  STOCKTON ON TEES           CLEVELAND                  TS181HU  North East  \n",
       "1  STOCKTON ON TEES           CLEVELAND                  TS181HU  North East  \n",
       "2  STOCKTON-ON-TEES           CLEVELAND                  TS181HU  North East  \n",
       "3  STOCKTON                   CLEVELAND                  TS181HU  North East  \n",
       "4  STOCKTON ON TEES           CLEVELAND                  TS182AW  North East  "
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "practicepostcodes= pd.merge(left=practicedataset, right=postcodes_reduced, on='postcode')\n",
    "practicepostcodes.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81025</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81632</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Y04079</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81002</td>\n",
       "      <td>North East</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice      region\n",
       "0   A81001  North East\n",
       "1   A81025  North East\n",
       "2   A81632  North East\n",
       "3   Y04079  North East\n",
       "4   A81002  North East"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Identify the 9 regions for all GP-practices\n",
    "regionofeachpractice= practicepostcodes.loc[:,['practice','region']]\n",
    "regionofeachpractice.head()                                            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Period of coverage</th>\n",
       "      <th>Breakdown</th>\n",
       "      <th>Level</th>\n",
       "      <th>Level description</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Indicator value</th>\n",
       "      <th>Lower CI</th>\n",
       "      <th>Upper CI</th>\n",
       "      <th>Numerator</th>\n",
       "      <th>Denominator</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2016</td>\n",
       "      <td>1/1/2016 to 31/12/2016</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>72.7</td>\n",
       "      <td>71.9</td>\n",
       "      <td>73.5</td>\n",
       "      <td>33,816</td>\n",
       "      <td>50,798,600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015</td>\n",
       "      <td>1/1/2015 to 31/12/2015</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>74</td>\n",
       "      <td>73.3</td>\n",
       "      <td>74.8</td>\n",
       "      <td>33,664</td>\n",
       "      <td>50,360,500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2014</td>\n",
       "      <td>1/1/2014 to 31/12/2014</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>73.8</td>\n",
       "      <td>73</td>\n",
       "      <td>74.6</td>\n",
       "      <td>32,895</td>\n",
       "      <td>49,941,800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013</td>\n",
       "      <td>1/1/2013 to 31/12/2013</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>76.6</td>\n",
       "      <td>75.7</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33,408</td>\n",
       "      <td>49,584,200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>1/1/2012 to 31/12/2012</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>England</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>77.7</td>\n",
       "      <td>76.8</td>\n",
       "      <td>78.5</td>\n",
       "      <td>33,258</td>\n",
       "      <td>49,281,700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year      Period of coverage Breakdown    Level Level description  Gender  \\\n",
       "0  2016  1/1/2016 to 31/12/2016   England  England           England  Person   \n",
       "1  2015  1/1/2015 to 31/12/2015   England  England           England  Person   \n",
       "2  2014  1/1/2014 to 31/12/2014   England  England           England  Person   \n",
       "3  2013  1/1/2013 to 31/12/2013   England  England           England  Person   \n",
       "4  2012  1/1/2012 to 31/12/2012   England  England           England  Person   \n",
       "\n",
       "   Age Indicator value Lower CI Upper CI Numerator Denominator  \n",
       "0  All            72.7     71.9     73.5    33,816  50,798,600  \n",
       "1  All              74     73.3     74.8    33,664  50,360,500  \n",
       "2  All            73.8       73     74.6    32,895  49,941,800  \n",
       "3  All            76.6     75.7     77.4    33,408  49,584,200  \n",
       "4  All            77.7     76.8     78.5    33,258  49,281,700  "
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Identify for each region the associated 75 mortality rate for cardiovascular diseases for the year 2015.\n",
    "# Upload mortality dataset\n",
    "url_5 = 'https://s3.eu-west-2.amazonaws.com/dmhr-data/NHSOF_1.1_I00656_D.csv'\n",
    "mortalitydataset = pd.read_csv(url_5, index_col=False)\n",
    "mortalitydataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Period of coverage</th>\n",
       "      <th>Breakdown</th>\n",
       "      <th>Level</th>\n",
       "      <th>Level description</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Indicator value</th>\n",
       "      <th>Lower CI</th>\n",
       "      <th>Upper CI</th>\n",
       "      <th>Numerator</th>\n",
       "      <th>Denominator</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>2015</td>\n",
       "      <td>1/1/2015 to 31/12/2015</td>\n",
       "      <td>Region</td>\n",
       "      <td>E12000004</td>\n",
       "      <td>East Midlands</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>76.7</td>\n",
       "      <td>74</td>\n",
       "      <td>79.4</td>\n",
       "      <td>3,171</td>\n",
       "      <td>4,289,500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>2015</td>\n",
       "      <td>1/1/2015 to 31/12/2015</td>\n",
       "      <td>Region</td>\n",
       "      <td>E12000006</td>\n",
       "      <td>East of England</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>66.3</td>\n",
       "      <td>64.1</td>\n",
       "      <td>68.5</td>\n",
       "      <td>3,505</td>\n",
       "      <td>5,541,600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>2015</td>\n",
       "      <td>1/1/2015 to 31/12/2015</td>\n",
       "      <td>Region</td>\n",
       "      <td>E12000007</td>\n",
       "      <td>London</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>76.7</td>\n",
       "      <td>74.3</td>\n",
       "      <td>79.1</td>\n",
       "      <td>4,037</td>\n",
       "      <td>8,208,700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>2015</td>\n",
       "      <td>1/1/2015 to 31/12/2015</td>\n",
       "      <td>Region</td>\n",
       "      <td>E12000001</td>\n",
       "      <td>North East</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>86</td>\n",
       "      <td>82.3</td>\n",
       "      <td>89.9</td>\n",
       "      <td>2,000</td>\n",
       "      <td>2,399,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>2015</td>\n",
       "      <td>1/1/2015 to 31/12/2015</td>\n",
       "      <td>Region</td>\n",
       "      <td>E12000002</td>\n",
       "      <td>North West</td>\n",
       "      <td>Person</td>\n",
       "      <td>All</td>\n",
       "      <td>88.3</td>\n",
       "      <td>86</td>\n",
       "      <td>90.7</td>\n",
       "      <td>5,413</td>\n",
       "      <td>6,590,500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year      Period of coverage Breakdown      Level Level description  \\\n",
       "471  2015  1/1/2015 to 31/12/2015    Region  E12000004     East Midlands   \n",
       "472  2015  1/1/2015 to 31/12/2015    Region  E12000006   East of England   \n",
       "473  2015  1/1/2015 to 31/12/2015    Region  E12000007            London   \n",
       "474  2015  1/1/2015 to 31/12/2015    Region  E12000001        North East   \n",
       "475  2015  1/1/2015 to 31/12/2015    Region  E12000002        North West   \n",
       "\n",
       "     Gender  Age Indicator value Lower CI Upper CI Numerator Denominator  \n",
       "471  Person  All            76.7       74     79.4     3,171   4,289,500  \n",
       "472  Person  All            66.3     64.1     68.5     3,505   5,541,600  \n",
       "473  Person  All            76.7     74.3     79.1     4,037   8,208,700  \n",
       "474  Person  All              86     82.3     89.9     2,000   2,399,000  \n",
       "475  Person  All            88.3       86     90.7     5,413   6,590,500  "
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mortalitydataset_select = mortalitydataset[mortalitydataset['Gender']== 'Person']\n",
    "mortalitydataset_select = mortalitydataset_select [mortalitydataset_select['Age'] == 'All']\n",
    "mortalitydataset_select = mortalitydataset_select[mortalitydataset_select['Year']==2015]\n",
    "mortalitydataset_select = mortalitydataset_select[mortalitydataset_select['Breakdown']=='Region']\n",
    "mortalitydataset_select.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level description</th>\n",
       "      <th>Numerator</th>\n",
       "      <th>Denominator</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>East Midlands</td>\n",
       "      <td>3,171</td>\n",
       "      <td>4,289,500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>East of England</td>\n",
       "      <td>3,505</td>\n",
       "      <td>5,541,600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>London</td>\n",
       "      <td>4,037</td>\n",
       "      <td>8,208,700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>North East</td>\n",
       "      <td>2,000</td>\n",
       "      <td>2,399,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>North West</td>\n",
       "      <td>5,413</td>\n",
       "      <td>6,590,500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>South East</td>\n",
       "      <td>4,669</td>\n",
       "      <td>8,171,900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>South West</td>\n",
       "      <td>3,316</td>\n",
       "      <td>4,934,700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>West Midlands</td>\n",
       "      <td>3,780</td>\n",
       "      <td>5,274,400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>Yorkshire and The Humber</td>\n",
       "      <td>3,773</td>\n",
       "      <td>4,950,200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Level description Numerator Denominator\n",
       "471             East Midlands     3,171   4,289,500\n",
       "472           East of England     3,505   5,541,600\n",
       "473                    London     4,037   8,208,700\n",
       "474                North East     2,000   2,399,000\n",
       "475                North West     5,413   6,590,500\n",
       "476                South East     4,669   8,171,900\n",
       "477                South West     3,316   4,934,700\n",
       "478             West Midlands     3,780   5,274,400\n",
       "479  Yorkshire and The Humber     3,773   4,950,200"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mortalityperregion= mortalitydataset_select.loc[:,['Level description', 'Numerator', 'Denominator']]\n",
    "mortalityperregion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level description</th>\n",
       "      <th>Numerator</th>\n",
       "      <th>Denominator</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>East Midlands</td>\n",
       "      <td>3171</td>\n",
       "      <td>4289500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>East of England</td>\n",
       "      <td>3505</td>\n",
       "      <td>5541600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>London</td>\n",
       "      <td>4037</td>\n",
       "      <td>8208700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>North East</td>\n",
       "      <td>2000</td>\n",
       "      <td>2399000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>North West</td>\n",
       "      <td>5413</td>\n",
       "      <td>6590500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>South East</td>\n",
       "      <td>4669</td>\n",
       "      <td>8171900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>South West</td>\n",
       "      <td>3316</td>\n",
       "      <td>4934700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>West Midlands</td>\n",
       "      <td>3780</td>\n",
       "      <td>5274400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>Yorkshire and The Humber</td>\n",
       "      <td>3773</td>\n",
       "      <td>4950200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Level description Numerator Denominator\n",
       "471             East Midlands      3171     4289500\n",
       "472           East of England      3505     5541600\n",
       "473                    London      4037     8208700\n",
       "474                North East      2000     2399000\n",
       "475                North West      5413     6590500\n",
       "476                South East      4669     8171900\n",
       "477                South West      3316     4934700\n",
       "478             West Midlands      3780     5274400\n",
       "479  Yorkshire and The Humber      3773     4950200"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mortalityperregion.Numerator= mortalityperregion.Numerator.str.replace(',','')\n",
    "mortalityperregion.Denominator= mortalityperregion.Denominator.str.replace(',','')\n",
    "mortalityperregion                                                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "mortalityperregion.Numerator= mortalityperregion.Numerator.apply(pd.to_numeric)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "mortalityperregion.Denominator=mortalityperregion.Denominator.apply(pd.to_numeric)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level description</th>\n",
       "      <th>Numerator</th>\n",
       "      <th>Denominator</th>\n",
       "      <th>Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>East Midlands</td>\n",
       "      <td>3171</td>\n",
       "      <td>4289500</td>\n",
       "      <td>0.000739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>East of England</td>\n",
       "      <td>3505</td>\n",
       "      <td>5541600</td>\n",
       "      <td>0.000632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>London</td>\n",
       "      <td>4037</td>\n",
       "      <td>8208700</td>\n",
       "      <td>0.000492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>North East</td>\n",
       "      <td>2000</td>\n",
       "      <td>2399000</td>\n",
       "      <td>0.000834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>North West</td>\n",
       "      <td>5413</td>\n",
       "      <td>6590500</td>\n",
       "      <td>0.000821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>South East</td>\n",
       "      <td>4669</td>\n",
       "      <td>8171900</td>\n",
       "      <td>0.000571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>South West</td>\n",
       "      <td>3316</td>\n",
       "      <td>4934700</td>\n",
       "      <td>0.000672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>West Midlands</td>\n",
       "      <td>3780</td>\n",
       "      <td>5274400</td>\n",
       "      <td>0.000717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>Yorkshire and The Humber</td>\n",
       "      <td>3773</td>\n",
       "      <td>4950200</td>\n",
       "      <td>0.000762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Level description  Numerator  Denominator      Rate\n",
       "471             East Midlands       3171      4289500  0.000739\n",
       "472           East of England       3505      5541600  0.000632\n",
       "473                    London       4037      8208700  0.000492\n",
       "474                North East       2000      2399000  0.000834\n",
       "475                North West       5413      6590500  0.000821\n",
       "476                South East       4669      8171900  0.000571\n",
       "477                South West       3316      4934700  0.000672\n",
       "478             West Midlands       3780      5274400  0.000717\n",
       "479  Yorkshire and The Humber       3773      4950200  0.000762"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mortalityperregion['Rate']= mortalityperregion['Numerator'] / mortalityperregion['Denominator']\n",
    "mortalityperregion\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level description</th>\n",
       "      <th>Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>East Midlands</td>\n",
       "      <td>0.000739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>East of England</td>\n",
       "      <td>0.000632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>London</td>\n",
       "      <td>0.000492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>North East</td>\n",
       "      <td>0.000834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>North West</td>\n",
       "      <td>0.000821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>South East</td>\n",
       "      <td>0.000571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>South West</td>\n",
       "      <td>0.000672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>West Midlands</td>\n",
       "      <td>0.000717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>Yorkshire and The Humber</td>\n",
       "      <td>0.000762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Level description      Rate\n",
       "471             East Midlands  0.000739\n",
       "472           East of England  0.000632\n",
       "473                    London  0.000492\n",
       "474                North East  0.000834\n",
       "475                North West  0.000821\n",
       "476                South East  0.000571\n",
       "477                South West  0.000672\n",
       "478             West Midlands  0.000717\n",
       "479  Yorkshire and The Humber  0.000762"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Mortality rate for each region\n",
    "mortality_region= mortalityperregion.loc[:,['Level description','Rate']]\n",
    "mortality_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Visualize (using matplotlib) for each region spending for statins [x-axis] and the mortality rate [y-axis]. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2549</th>\n",
       "      <td>E87723</td>\n",
       "      <td>998.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4151</th>\n",
       "      <td>H84608</td>\n",
       "      <td>2.308263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3540</th>\n",
       "      <td>G82651</td>\n",
       "      <td>2.060000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7650</th>\n",
       "      <td>Y04786</td>\n",
       "      <td>1.985886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>E81635</td>\n",
       "      <td>1.203671</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     practice  relativecosts\n",
       "2549   E87723     998.150000\n",
       "4151   H84608       2.308263\n",
       "3540   G82651       2.060000\n",
       "7650   Y04786       1.985886\n",
       "2010   E81635       1.203671"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statins_relativecosts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>period</th>\n",
       "      <th>practice</th>\n",
       "      <th>practicename</th>\n",
       "      <th>centrename</th>\n",
       "      <th>street</th>\n",
       "      <th>city</th>\n",
       "      <th>county</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81001</td>\n",
       "      <td>THE DENSHAM SURGERY</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>LAWSON STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS181HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81002</td>\n",
       "      <td>QUEENS PARK MEDICAL CENTRE</td>\n",
       "      <td>QUEENS PARK MEDICAL CTR</td>\n",
       "      <td>FARRER STREET</td>\n",
       "      <td>STOCKTON ON TEES</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS182AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81003</td>\n",
       "      <td>VICTORIA MEDICAL PRACTICE</td>\n",
       "      <td>THE HEALTH CENTRE</td>\n",
       "      <td>VICTORIA ROAD</td>\n",
       "      <td>HARTLEPOOL</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS268DB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81004</td>\n",
       "      <td>WOODLANDS ROAD SURGERY</td>\n",
       "      <td>6 WOODLANDS ROAD</td>\n",
       "      <td></td>\n",
       "      <td>MIDDLESBROUGH</td>\n",
       "      <td>CLEVELAND</td>\n",
       "      <td>TS13BE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>201512</td>\n",
       "      <td>A81005</td>\n",
       "      <td>SPRINGWOOD SURGERY</td>\n",
       "      <td>SPRINGWOOD SURGERY</td>\n",
       "      <td>RECTORY LANE</td>\n",
       "      <td>GUISBOROUGH</td>\n",
       "      <td></td>\n",
       "      <td>TS147DJ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   period practice                              practicename  \\\n",
       "0  201512   A81001  THE DENSHAM SURGERY                        \n",
       "1  201512   A81002  QUEENS PARK MEDICAL CENTRE                 \n",
       "2  201512   A81003  VICTORIA MEDICAL PRACTICE                  \n",
       "3  201512   A81004  WOODLANDS ROAD SURGERY                     \n",
       "4  201512   A81005  SPRINGWOOD SURGERY                         \n",
       "\n",
       "                  centrename                     street  \\\n",
       "0  THE HEALTH CENTRE          LAWSON STREET               \n",
       "1  QUEENS PARK MEDICAL CTR    FARRER STREET               \n",
       "2  THE HEALTH CENTRE          VICTORIA ROAD               \n",
       "3  6 WOODLANDS ROAD                                       \n",
       "4  SPRINGWOOD SURGERY         RECTORY LANE                \n",
       "\n",
       "                        city                     county postcode  \n",
       "0  STOCKTON ON TEES           CLEVELAND                  TS181HU  \n",
       "1  STOCKTON ON TEES           CLEVELAND                  TS182AW  \n",
       "2  HARTLEPOOL                 CLEVELAND                  TS268DB  \n",
       "3  MIDDLESBROUGH              CLEVELAND                   TS13BE  \n",
       "4  GUISBOROUGH                                           TS147DJ  "
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "practicedataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>TS181HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81002</td>\n",
       "      <td>TS182AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81003</td>\n",
       "      <td>TS268DB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81004</td>\n",
       "      <td>TS13BE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81005</td>\n",
       "      <td>TS147DJ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice postcode\n",
       "0   A81001  TS181HU\n",
       "1   A81002  TS182AW\n",
       "2   A81003  TS268DB\n",
       "3   A81004   TS13BE\n",
       "4   A81005  TS147DJ"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "practicedataset_select=practicedataset.iloc[:,[1,7]]\n",
    "practicedataset_select.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>E87723</td>\n",
       "      <td>998.150000</td>\n",
       "      <td>W92AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>H84608</td>\n",
       "      <td>2.308263</td>\n",
       "      <td>TW91PX</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>G82651</td>\n",
       "      <td>2.060000</td>\n",
       "      <td>TN39PY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Y04786</td>\n",
       "      <td>1.985886</td>\n",
       "      <td>IG38YB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E81635</td>\n",
       "      <td>1.203671</td>\n",
       "      <td>LU54RR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice  relativecosts postcode\n",
       "0   E87723     998.150000    W92AF\n",
       "1   H84608       2.308263   TW91PX\n",
       "2   G82651       2.060000   TN39PY\n",
       "3   Y04786       1.985886   IG38YB\n",
       "4   E81635       1.203671   LU54RR"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Relative costs for practice \n",
    "statins_practice= pd.merge(left=statins_relativecosts,right=practicedataset_select, on='practice')\n",
    "statins_practice.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>practice</th>\n",
       "      <th>region</th>\n",
       "      <th>relativecosts</th>\n",
       "      <th>postcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A81001</td>\n",
       "      <td>North East</td>\n",
       "      <td>0.429098</td>\n",
       "      <td>TS181HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A81025</td>\n",
       "      <td>North East</td>\n",
       "      <td>0.448895</td>\n",
       "      <td>TS181HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A81632</td>\n",
       "      <td>North East</td>\n",
       "      <td>0.047455</td>\n",
       "      <td>TS181HU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A81002</td>\n",
       "      <td>North East</td>\n",
       "      <td>0.331642</td>\n",
       "      <td>TS182AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A81003</td>\n",
       "      <td>North East</td>\n",
       "      <td>0.258680</td>\n",
       "      <td>TS268DB</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  practice      region  relativecosts postcode\n",
       "0   A81001  North East       0.429098  TS181HU\n",
       "1   A81025  North East       0.448895  TS181HU\n",
       "2   A81632  North East       0.047455  TS181HU\n",
       "3   A81002  North East       0.331642  TS182AW\n",
       "4   A81003  North East       0.258680  TS268DB"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Region spending for statins (x-axis) \n",
    "region_statins= pd.merge(left= regionofeachpractice, right=statins_practice, on='practice' )\n",
    "region_statins.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>East Midlands</th>\n",
       "      <td>0.229102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>East of England</th>\n",
       "      <td>0.225382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>London</th>\n",
       "      <td>0.905791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North East</th>\n",
       "      <td>0.269907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>North West</th>\n",
       "      <td>0.259626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South East</th>\n",
       "      <td>0.240162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South West</th>\n",
       "      <td>0.256390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West Midlands</th>\n",
       "      <td>0.241066</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yorkshire and The Humber</th>\n",
       "      <td>0.272223</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          relativecosts\n",
       "region                                 \n",
       "East Midlands                  0.229102\n",
       "East of England                0.225382\n",
       "London                         0.905791\n",
       "North East                     0.269907\n",
       "North West                     0.259626\n",
       "South East                     0.240162\n",
       "South West                     0.256390\n",
       "West Midlands                  0.241066\n",
       "Yorkshire and The Humber       0.272223"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "region_statins_group= region_statins.groupby('region')[['relativecosts']].mean()\n",
    "region_statins_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level description</th>\n",
       "      <th>Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>East Midlands</td>\n",
       "      <td>0.000739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>East of England</td>\n",
       "      <td>0.000632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>London</td>\n",
       "      <td>0.000492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>North East</td>\n",
       "      <td>0.000834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>North West</td>\n",
       "      <td>0.000821</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Level description      Rate\n",
       "471     East Midlands  0.000739\n",
       "472   East of England  0.000632\n",
       "473            London  0.000492\n",
       "474        North East  0.000834\n",
       "475        North West  0.000821"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Mortality rate for region (y-axis)\n",
    "mortality_region.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level description</th>\n",
       "      <th>Rate</th>\n",
       "      <th>relativecosts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>East Midlands</td>\n",
       "      <td>0.000739</td>\n",
       "      <td>0.229102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>East of England</td>\n",
       "      <td>0.000632</td>\n",
       "      <td>0.225382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>London</td>\n",
       "      <td>0.000492</td>\n",
       "      <td>0.905791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>North East</td>\n",
       "      <td>0.000834</td>\n",
       "      <td>0.269907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>North West</td>\n",
       "      <td>0.000821</td>\n",
       "      <td>0.259626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>South East</td>\n",
       "      <td>0.000571</td>\n",
       "      <td>0.240162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>South West</td>\n",
       "      <td>0.000672</td>\n",
       "      <td>0.256390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>West Midlands</td>\n",
       "      <td>0.000717</td>\n",
       "      <td>0.241066</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>Yorkshire and The Humber</td>\n",
       "      <td>0.000762</td>\n",
       "      <td>0.272223</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Level description      Rate  relativecosts\n",
       "471             East Midlands  0.000739       0.229102\n",
       "472           East of England  0.000632       0.225382\n",
       "473                    London  0.000492       0.905791\n",
       "474                North East  0.000834       0.269907\n",
       "475                North West  0.000821       0.259626\n",
       "476                South East  0.000571       0.240162\n",
       "477                South West  0.000672       0.256390\n",
       "478             West Midlands  0.000717       0.241066\n",
       "479  Yorkshire and The Humber  0.000762       0.272223"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statinsandmortality=pd.merge(left= mortality_region, right=region_statins_group, right_index=True, left_on='Level description')\n",
    "statinsandmortality"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nN3fddReXXXYZTz75JImJiSQmJvLss88CkJeXR2JiIqNGjaJ9+/bk5+eH6tm5cyedO3fm/fffZ9u2\nbXTv3p2UlBQSExNZtmxZKN/48eNp27YtXbt25auvvgLgZz/7GdOmTQO8D+pHH32Unj178tvf/pYd\nO3Zwyy230LFjRzp16sTHH398Qh/++c9/0qNHD9q1a0eHDh345BNv1vVFixbRp08fbrnlFq644gru\nuuuuUJkFCxZwxRVX0L17d957773Az9uXX37J9ddfz+WXX86ECRNC6X/5y1/o2rUr7du3Z+DAgezf\nvz9QvSVHDkaNGsXMmTMBuOiii3j00Ufp0qULqampfPbZZ1x33XVcdtllvPjii6Eye/fuJT09nYSE\nBEaPHk3xPDWlte2iiy7iscceo1u3bsydOzfwcyEiEuKc08M5OnTo4M52BQUFrnXr1i4xMdEVFha6\nTz75xCUnJ7v9+/e7b7/91l155ZVuxYoVbuPGjc7M3PLly51zzh05csQ1bNjQbd++3XXs2NF98MEH\nzjnnpkyZ4qZMmeKcc66oqMjt27fPHTlyxAHuz3/+s3POuXHjxrknnnjCOefco48+6qZOneqcc65b\nt25uzJgxobb94Ac/cFlZWc455zZt2uTatGlzQvv379/vDh486Jxzbt26da5Tp07OOef+9re/uUaN\nGrnt27e7oqIi17FjR5eVleX279/vmjdv7vLy8tyxY8fcLbfc4m6++eZSn59u3bq5zz//PLT+4osv\nulatWrlvv/3WHThwwF100UVu27ZtbseOHa5nz55u//79zjnnfvGLX7jHH3/8hPoGDx7s4uPjXdu2\nbUOPhg0bhtoc3pYf/vCH7vXXX3fOOde8eXP3wgsvOOecGzNmjEtJSXEFBQXu3//+t7vwwgtD5evV\nq+c2bdrkioqKXO/evd3cuXPLbFvz5s3d008/XWr/ReTcgjer9Ul9Zmrc8hxy3nnnMXDgQGJjY6lT\npw5Llizh1ltvpX79+gCkp6ezdOnS0Lfc1NTUUNnDhw9zzTXX8D//8z90794dgNTUVH74wx9SWFhI\neno6bdu2paioiHr16nHDDTcA0KFDB5YsWRKxPYMGDQotL1q0iA0bNoTWd+/ezcGDB6lXr14o7dCh\nQ4wZM4YVK1YQExPDP//5z9C2Ll260LRpUwBSUlLYvHkzMTExtG7dmssuuwyAwYMH84c//CHQc3bN\n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\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a1efe10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Create a scatterplot of statins relative spending and mortality rates for each region\n",
    "fig=plt.figure(figsize=(8, 6))\n",
    "ax=fig.add_subplot(111)\n",
    "x= statinsandmortality['relativecosts'].tolist()\n",
    "y= statinsandmortality['Rate'].tolist()\n",
    "ax.scatter(x, y, color='#FFBAD2')\n",
    "ax.set_title(\"Statins relative spending and mortality rates per region\")\n",
    "ax.set_xlabel(\"Relative costs\",fontsize=12)\n",
    "ax.set_ylabel(\"Rate\",fontsize=12)\n",
    "max_x = (statinsandmortality.relativecosts.max())\n",
    "max_y = (statinsandmortality.Rate.max())\n",
    "min_x = (statinsandmortality.relativecosts.min())\n",
    "min_y = (statinsandmortality.Rate.min())\n",
    "ax.set_xlim(min_x-0.05, max_x+0.05)\n",
    "ax.set_ylim(min_y-0.0001, max_y+0.0001)\n",
    "\n",
    "labels= statinsandmortality['Level description'].tolist()\n",
    "for i, txt in enumerate(labels):\n",
    "    ax.annotate(txt, (x[i],y[i]))\n",
    "    \n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.62833105275336398"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Assess whether relative spending for statin prescriptions in each regions correlates with the mortality rate from cardiovascular diseases.\n",
    "import statistics as stats\n",
    "\n",
    "x=statinsandmortality['relativecosts']\n",
    "y=statinsandmortality['Rate']\n",
    "\n",
    "def pearson(x,y):\n",
    "    \n",
    "    # Create n, the number of observations in the data\n",
    "    n = len(x)\n",
    "    \n",
    "    # Create lists to store the standard scores\n",
    "    standard_score_x = []\n",
    "    standard_score_y = []\n",
    "    \n",
    "    # Calculate the mean of x\n",
    "    mean_x = stats.mean(x)\n",
    "    \n",
    "    # Calculate the standard deviation of x\n",
    "    standard_deviation_x = stats.stdev(x)\n",
    "    \n",
    "    # Calculate the mean of y\n",
    "    mean_y = stats.mean(y)\n",
    "    \n",
    "    # Calculate the standard deviation of y\n",
    "    standard_deviation_y = stats.stdev(y)\n",
    "\n",
    "    # For each observation in x\n",
    "    for observation in x: \n",
    "        \n",
    "        # Calculate the standard score of x\n",
    "        standard_score_x.append((observation - mean_x)/standard_deviation_x) \n",
    "\n",
    "    # For each observation in y\n",
    "    for observation in y:\n",
    "        \n",
    "        # Calculate the standard score of y\n",
    "        standard_score_y.append((observation - mean_y)/standard_deviation_y)\n",
    "\n",
    "    # Multiple the standard scores together, sum them, then divide by n-1, return that value\n",
    "    return (sum([i*j for i,j in zip(standard_score_x, standard_score_y)]))/(n-1)\n",
    "# Show Pearson's Correlation Coefficient\n",
    "pearson(x,y)\n",
    "\n",
    "#The pearson correlation is the following, which means that per each increase in x, y decreases 0.63 units.\n",
    "#In other words, per each unit increase in relative costs, mortality rates decrease 0.63 units."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "###Assignment D [25 marks]\n",
    "#Using the Google FluTrends surveillance data, pick two random countries, one in the Northern hemisphere and one in the Southern hemisphere. For each of country:\n",
    "#Provide a visualisation of the seasonal patterns across all years.\n",
    "#Calculate the yearly minimum and maximum for each country. Provide and plot a reasonable mathematical function that could be used as an approximation for the seasonal trend for each country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Argentina</th>\n",
       "      <th>Buenos Aires</th>\n",
       "      <th>Capital federal</th>\n",
       "      <th>Mendoza</th>\n",
       "      <th>Santa Fe</th>\n",
       "      <th>Córdoba</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2003-02-02</td>\n",
       "      <td>136</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2003-02-09</td>\n",
       "      <td>145</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2003-02-16</td>\n",
       "      <td>141</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2003-02-23</td>\n",
       "      <td>135</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2003-03-02</td>\n",
       "      <td>134</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date  Argentina  Buenos Aires  Capital federal  Mendoza  Santa Fe  \\\n",
       "0 2003-02-02        136           NaN              NaN      NaN       NaN   \n",
       "1 2003-02-09        145           NaN              NaN      NaN       NaN   \n",
       "2 2003-02-16        141           NaN              NaN      NaN       NaN   \n",
       "3 2003-02-23        135           NaN              NaN      NaN       NaN   \n",
       "4 2003-03-02        134           NaN              NaN      NaN       NaN   \n",
       "\n",
       "   Córdoba  \n",
       "0      NaN  \n",
       "1      NaN  \n",
       "2      NaN  \n",
       "3      NaN  \n",
       "4      NaN  "
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Using the Google FluTrends surveillance data, pick two random countries, one in the Northern hemisphere and one in the Southern hemisphere. For each of country:\n",
    "\n",
    "#Provide a visualisation of the seasonal patterns across all years.\n",
    "#Upload Argentina flu data\n",
    "url_arg = 'https://www.google.org/flutrends/about/data/flu/ar/data.txt'\n",
    "from datetime import datetime\n",
    "argentinaflu = pd.read_csv(url_arg, sep=',', header = 8)\n",
    "argentinaflu['Date'] = pd.to_datetime(argentinaflu['Date'])\n",
    "argentinaflu.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Norway</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2004-11-14</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2004-11-21</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2004-11-28</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2004-12-05</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2004-12-12</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date  Norway\n",
       "0 2004-11-14      12\n",
       "1 2004-11-21      13\n",
       "2 2004-11-28      13\n",
       "3 2004-12-05      13\n",
       "4 2004-12-12      12"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Upload Norway flu data\n",
    "url_norway = 'https://www.google.org/flutrends/about/data/flu/no/data.txt'\n",
    "norwayflu = pd.read_csv(url_norway, sep=',', header = 8)\n",
    "norwayflu['Date'] = pd.to_datetime(norwayflu['Date'])\n",
    "norwayflu.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x11a409470>"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10b45c940>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "#Plot and store the flu trends for Argentina\n",
    "\n",
    "ax = argentinaflu.plot(legend ='left', x='Date', y = 'Argentina', figsize=(15, 6), grid=True)\n",
    "#Plot the flu trend for Australia; ax=ax plots the chart into the previous\n",
    "\n",
    "norwayflu.plot(x='Date', y = 'Norway' , ax=ax)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Calculate the yearly minimum and maximum for each country. Provide and plot a reasonable mathematical function that could be used as an approximation for the seasonal trend for each country.\n",
    "\n",
    "#n= norwayflu.groupby('Date')\n",
    "#n= norwayflu.sort_values('Norway',ascending=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
